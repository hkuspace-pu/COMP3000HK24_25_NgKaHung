/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./PQC WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js":
/*!***********************************************************************************!*\
  !*** ./PQC WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ t)\n/* harmony export */ });\nvar r={124:(r,A,n)=>{r.exports=n.p+\"pqc-sign-falcon-1024.wasm\"},858:r=>{var A,n,e=r.exports={};function t(){throw new Error(\"setTimeout has not been defined\")}function f(){throw new Error(\"clearTimeout has not been defined\")}function i(r){if(A===setTimeout)return setTimeout(r,0);if((A===t||!A)&&setTimeout)return A=setTimeout,setTimeout(r,0);try{return A(r,0)}catch(n){try{return A.call(null,r,0)}catch(n){return A.call(this,r,0)}}}!function(){try{A=\"function\"==typeof setTimeout?setTimeout:t}catch(r){A=t}try{n=\"function\"==typeof clearTimeout?clearTimeout:f}catch(r){n=f}}();var a,o=[],u=!1,c=-1;function s(){u&&a&&(u=!1,a.length?o=a.concat(o):c=-1,o.length&&l())}function l(){if(!u){var r=i(s);u=!0;for(var A=o.length;A;){for(a=o,o=[];++c<A;)a&&a[c].run();c=-1,A=o.length}a=null,u=!1,function(r){if(n===clearTimeout)return clearTimeout(r);if((n===f||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(r);try{n(r)}catch(A){try{return n.call(null,r)}catch(A){return n.call(this,r)}}}(r)}}function P(r,A){this.fun=r,this.array=A}function v(){}e.nextTick=function(r){var A=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)A[n-1]=arguments[n];o.push(new P(r,A)),1!==o.length||u||i(l)},P.prototype.run=function(){this.fun.apply(null,this.array)},e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.version=\"\",e.versions={},e.on=v,e.addListener=v,e.once=v,e.off=v,e.removeListener=v,e.removeAllListeners=v,e.emit=v,e.prependListener=v,e.prependOnceListener=v,e.listeners=function(r){return[]},e.binding=function(r){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(r){throw new Error(\"process.chdir is not supported\")},e.umask=function(){return 0}}},A={};function n(e){var t=A[e];if(void 0!==t)return t.exports;var f=A[e]={exports:{}};return r[e](f,f.exports,n),f.exports}n.m=r,n.d=(r,A)=>{for(var e in A)n.o(A,e)&&!n.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:A[e]})},n.o=(r,A)=>Object.prototype.hasOwnProperty.call(r,A),(()=>{var r;if( true&&(r=\"file:///D:/PQC%20PROJECT/COMP3000HK24_25_NgKaHung/PQC%20WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js\"),!r)throw new Error(\"Automatic publicPath is not supported in this browser\");r=r.replace(/#.*$/,\"\").replace(/\\?.*$/,\"\").replace(/\\/[^\\/]+$/,\"/\"),n.p=r})(),n.b= false||self.location.href;var e={};(()=>{n.d(e,{Z:()=>a});var r=n(858);const A=function(A){var e,t,f=void 0!==(A=A||{})?A:{};f.ready=new Promise((function(r,A){e=r,t=A}));var i,a,o,u,c,s,l=Object.assign({},f),P=[],v=(r,A)=>{throw A},w=\"object\"==typeof window,y=\"function\"==typeof importScripts,g=\"\";\"object\"==typeof r&&\"object\"==typeof r.versions&&\"string\"==typeof r.versions.node?(g=y?require(\"path\").dirname(g)+\"/\":__dirname+\"/\",s=()=>{c||(u=require(\"fs\"),c=require(\"path\"))},i=function(r,A){return s(),r=c.normalize(r),u.readFileSync(new URL(r),A?void 0:\"utf8\")},o=r=>{var A=i(r,!0);return A.buffer||(A=new Uint8Array(A)),A},a=(r,A,n)=>{s(),r=c.normalize(r),u.readFile(r,(function(r,e){r?n(r):A(e.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\\\/g,\"/\"),P=r.argv.slice(2),r.on(\"uncaughtException\",(function(r){if(!(r instanceof $))throw r})),r.on(\"unhandledRejection\",(function(r){throw r})),v=(A,n)=>{throw r.exitCode=A,n},f.inspect=function(){return\"[Emscripten Module object]\"}):(w||y)&&(y?g=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),g=0!==g.indexOf(\"blob:\")?g.substr(0,g.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",i=r=>{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.send(null),A.responseText},y&&(o=r=>{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.responseType=\"arraybuffer\",A.send(null),new Uint8Array(A.response)}),a=(r,A,n)=>{var e=new XMLHttpRequest;e.open(\"GET\",r,!0),e.responseType=\"arraybuffer\",e.onload=()=>{200==e.status||0==e.status&&e.response?A(e.response):n()},e.onerror=n,e.send(null)}),console.log.bind(console);var D=console.warn.bind(console);Object.assign(f,l),l=null,\"object\"!=typeof WebAssembly&&R(\"no native wasm support detected\");var b,d=!1;function h(r,A){r||R(A)}var C,B,k,j,p=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function m(r,A){return r?function(r,A,n){for(var e=A+n,t=A;r[t]&&!(t>=e);)++t;if(t-A>16&&r.subarray&&p)return p.decode(r.subarray(A,t));for(var f=\"\";A<t;){var i=r[A++];if(128&i){var a=63&r[A++];if(192!=(224&i)){var o=63&r[A++];if((i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&r[A++])<65536)f+=String.fromCharCode(i);else{var u=i-65536;f+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else f+=String.fromCharCode((31&i)<<6|a)}else f+=String.fromCharCode(i)}return f}(B,r,A):\"\"}function S(r,A){C.set(r,A)}var T,z,E=[],Q=[],I=[],x=0,U=null,F=null;function R(r){D(r=\"Aborted(\"+r+\")\"),d=!0,b=1,r+=\". Build with -s ASSERTIONS=1 for more info.\";var A=new WebAssembly.RuntimeError(r);throw t(A),A}function O(r){return r.startsWith(\"data:application/octet-stream;base64,\")}function H(r){return r.startsWith(\"file://\")}function M(r){try{if(o)return o(r);throw\"both async and sync fetching of the wasm failed\"}catch(r){R(r)}}f.preloadedImages={},f.preloadedAudios={},f.locateFile?O(T=\"sign.wasm.wasm\")||(z=T,T=f.locateFile?f.locateFile(z,g):g+z):T=new URL(n(124),n.b).toString();var Y={30900:function(){return f.getRandomValue()},30936:function(){if(void 0===f.getRandomValue)try{var r=\"object\"==typeof window?window:self,A=void 0!==r.crypto?r.crypto:r.msCrypto,n=function(){var r=new Uint32Array(1);return A.getRandomValues(r),r[0]>>>0};n(),f.getRandomValue=n}catch(r){try{var e=require(\"crypto\"),t=function(){var r=e.randomBytes(4);return(r[0]<<24|r[1]<<16|r[2]<<8|r[3])>>>0};t(),f.getRandomValue=t}catch(r){throw\"No secure random number generator found\"}}}};function J(r){for(;r.length>0;){var A=r.shift();if(\"function\"!=typeof A){var n=A.func;\"number\"==typeof n?void 0===A.arg?dynCall_v.call(null,n):(e=A.arg,dynCall_vi.apply(null,[n,e])):n(void 0===A.arg?null:A.arg)}else A(f)}var e}var L=[];function V(r){try{return r()}catch(r){R(r)}}var G,X={State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(r){var A=X.callStackNameToId[r];return void 0===A&&(A=X.callStackId++,X.callStackNameToId[r]=A,X.callStackIdToName[A]=r),A},instrumentWasmExports:function(r){var A={};for(var n in r)!function(n){var e=r[n];A[n]=\"function\"==typeof e?function(){X.exportCallStack.push(n);try{return e.apply(null,arguments)}finally{if(!d){var r=X.exportCallStack.pop();h(r===n),X.maybeStopUnwind()}}}:e}(n);return A},maybeStopUnwind:function(){X.currData&&X.state===X.State.Unwinding&&0===X.exportCallStack.length&&(X.state=X.State.Normal,V(f._asyncify_stop_unwind),\"undefined\"!=typeof Fibers&&Fibers.trampoline())},whenDone:function(){return new Promise(((r,A)=>{X.asyncPromiseHandlers={resolve:r,reject:A}}))},allocateData:function(){var r=W(12+X.StackSize);return X.setDataHeader(r,r+12,X.StackSize),X.setDataRewindFunc(r),r},setDataHeader:function(r,A,n){k[r>>2]=A,k[r+4>>2]=A+n},setDataRewindFunc:function(r){var A=X.exportCallStack[0],n=X.getCallStackId(A);k[r+8>>2]=n},getDataRewindFunc:function(r){var A=k[r+8>>2],n=X.callStackIdToName[A];return f.asm[n]},doRewind:function(r){return X.getDataRewindFunc(r)()},handleSleep:function(r){if(!d){if(X.state===X.State.Normal){var A=!1,n=!1;r((r=>{if(!d&&(X.handleSleepReturnValue=r||0,A=!0,n)){X.state=X.State.Rewinding,V((()=>f._asyncify_start_rewind(X.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.resume();var e,t=!1;try{e=X.doRewind(X.currData)}catch(r){e=r,t=!0}var i=!1;if(!X.currData){var a=X.asyncPromiseHandlers;a&&(X.asyncPromiseHandlers=null,(t?a.reject:a.resolve)(e),i=!0)}if(t&&!i)throw e}})),n=!0,A||(X.state=X.State.Unwinding,X.currData=X.allocateData(),V((()=>f._asyncify_start_unwind(X.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.pause())}else X.state===X.State.Rewinding?(X.state=X.State.Normal,V(f._asyncify_stop_rewind),N(X.currData),X.currData=null,X.sleepCallbacks.forEach((r=>function(r,A){if(!d)if(A)r();else try{r()}catch(r){!function(r){if(r instanceof $||\"unwind\"==r)return b;v(1,r)}(r)}}(r)))):R(\"invalid state: \"+X.state);return X.handleSleepReturnValue}},handleAsync:function(r){return X.handleSleep((A=>{r().then(A)}))}},Z={d:function(r,A,n,e){R(\"Assertion failed: \"+m(r)+\", at: \"+[A?m(A):\"unknown filename\",n,e?m(e):\"unknown function\"])},__asyncjs__aes_ctr_subtle_crypto:function(r,A,n,e,t,i,a){return X.handleAsync((async()=>{const o=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,n,e<<4)),u=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,i,a)),c=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,t,16)),s=await f.subtleCrypto.importKey(\"raw\",u.buffer,\"AES-CTR\",!1,[\"encrypt\"]),l=await f.subtleCrypto.encrypt({name:\"AES-CTR\",counter:c.buffer,length:32},s,o.buffer);S(new Uint8Array(l).slice(0,A),r)}))},__asyncjs__sha256_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-256\",e);S(new Uint8Array(t),r)}))},__asyncjs__sha384_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-384\",e);S(new Uint8Array(t),r)}))},__asyncjs__sha512_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-512\",e);S(new Uint8Array(t),r)}))},a:function(r,A,n){var e=function(r,A){var n;for(L.length=0,A>>=2;n=B[r++];){var e=n<105;e&&1&A&&A++,L.push(e?j[A++>>1]:k[A]),++A}return L}(A,n);return Y[r].apply(null,e)},c:function(r,A,n){B.copyWithin(r,A,A+n)},b:function(r){B.length,R(\"OOM\")},e:function(r){!function(r,A){var n;b=r,b=n=r,v(n,new $(n))}(r)}},W=(function(){var r={a:Z};function A(r,A){var n,e,t=r.exports;t=X.instrumentWasmExports(t),f.asm=t,n=f.asm.f.buffer,f.HEAP8=C=new Int8Array(n),f.HEAP16=new Int16Array(n),f.HEAP32=k=new Int32Array(n),f.HEAPU8=B=new Uint8Array(n),f.HEAPU16=new Uint16Array(n),f.HEAPU32=new Uint32Array(n),f.HEAPF32=new Float32Array(n),f.HEAPF64=j=new Float64Array(n),f.asm.j,e=f.asm.g,Q.unshift(e),function(r){if(0==--x&&(null!==U&&(clearInterval(U),U=null),F)){var A=F;F=null,A()}}()}function n(r){A(r.instance)}function e(A){return function(){if(w||y){if(\"function\"==typeof fetch&&!H(T))return fetch(T,{credentials:\"same-origin\"}).then((function(r){if(!r.ok)throw\"failed to load wasm binary file at '\"+T+\"'\";return r.arrayBuffer()})).catch((function(){return M(T)}));if(a)return new Promise((function(r,A){a(T,(function(A){r(new Uint8Array(A))}),A)}))}return Promise.resolve().then((function(){return M(T)}))}().then((function(A){return WebAssembly.instantiate(A,r)})).then((function(r){return r})).then(A,(function(r){D(\"failed to asynchronously prepare wasm: \"+r),R(r)}))}if(x++,f.instantiateWasm)try{var i=f.instantiateWasm(r,A);return X.instrumentWasmExports(i)}catch(r){return D(\"Module.instantiateWasm callback failed with error: \"+r),!1}(\"function\"!=typeof WebAssembly.instantiateStreaming||O(T)||H(T)||\"function\"!=typeof fetch?e(n):fetch(T,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,r).then(n,(function(r){return D(\"wasm streaming compile failed: \"+r),D(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(t)}(),f.___wasm_call_ctors=function(){return(f.___wasm_call_ctors=f.asm.g).apply(null,arguments)},f._malloc=function(){return(W=f._malloc=f.asm.h).apply(null,arguments)}),N=f._free=function(){return(N=f._free=f.asm.i).apply(null,arguments)},q=(f._sign_init=function(){return(f._sign_init=f.asm.k).apply(null,arguments)},f._sign_public_key_bytes=function(){return(f._sign_public_key_bytes=f.asm.l).apply(null,arguments)},f._sign_private_key_bytes=function(){return(f._sign_private_key_bytes=f.asm.m).apply(null,arguments)},f._sign_signature_bytes=function(){return(f._sign_signature_bytes=f.asm.n).apply(null,arguments)},f._sign_keypair=function(){return(f._sign_keypair=f.asm.o).apply(null,arguments)},f._sign_signature=function(){return(f._sign_signature=f.asm.p).apply(null,arguments)},f._sign_verify=function(){return(f._sign_verify=f.asm.q).apply(null,arguments)},f.stackSave=function(){return(q=f.stackSave=f.asm.r).apply(null,arguments)}),K=f.stackRestore=function(){return(K=f.stackRestore=f.asm.s).apply(null,arguments)},_=f.stackAlloc=function(){return(_=f.stackAlloc=f.asm.t).apply(null,arguments)};function $(r){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+r+\")\",this.status=r}function rr(r){r=r||P,x>0||(J(E),x>0||G||(G=!0,f.calledRun=!0,d||(J(Q),e(f),J(I))))}return f._asyncify_start_unwind=function(){return(f._asyncify_start_unwind=f.asm.u).apply(null,arguments)},f._asyncify_stop_unwind=function(){return(f._asyncify_stop_unwind=f.asm.v).apply(null,arguments)},f._asyncify_start_rewind=function(){return(f._asyncify_start_rewind=f.asm.w).apply(null,arguments)},f._asyncify_stop_rewind=function(){return(f._asyncify_stop_rewind=f.asm.x).apply(null,arguments)},f.ccall=function(r,A,n,e,t){var i={string:function(r){var A=0;if(null!=r&&0!==r){var n=1+(r.length<<2);!function(r,A,n){!function(r,A,n,e){if(!(e>0))return 0;for(var t=n+e-1,f=0;f<r.length;++f){var i=r.charCodeAt(f);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&r.charCodeAt(++f)),i<=127){if(n>=t)break;A[n++]=i}else if(i<=2047){if(n+1>=t)break;A[n++]=192|i>>6,A[n++]=128|63&i}else if(i<=65535){if(n+2>=t)break;A[n++]=224|i>>12,A[n++]=128|i>>6&63,A[n++]=128|63&i}else{if(n+3>=t)break;A[n++]=240|i>>18,A[n++]=128|i>>12&63,A[n++]=128|i>>6&63,A[n++]=128|63&i}}A[n]=0}(r,B,A,n)}(r,A=_(n),n)}return A},array:function(r){var A=_(r.length);return S(r,A),A}},a=function(r){return f[\"_\"+r]}(r),o=[],u=0;if(e)for(var c=0;c<e.length;c++){var s=i[n[c]];s?(0===u&&(u=q()),o[c]=s(e[c])):o[c]=e[c]}var l=a.apply(null,o);function P(r){return 0!==u&&K(u),function(r){return\"string\"===A?m(r):\"boolean\"===A?Boolean(r):r}(r)}var v=t&&t.async;return X.currData?X.whenDone().then(P):(l=P(l),v?Promise.resolve(l):l)},f.writeArrayToMemory=S,F=function r(){G||rr(),G||(F=r)},f.run=rr,rr(),A.ready};var t=n(858);const f=function(r){var A,n,e=void 0!==(r=r||{})?r:{};e.ready=new Promise((function(r,e){A=r,n=e}));var f,i,a,o,u,c,s=Object.assign({},e),l=[],P=(r,A)=>{throw A},v=\"object\"==typeof window,w=\"function\"==typeof importScripts,y=\"object\"==typeof t&&\"object\"==typeof t.versions&&\"string\"==typeof t.versions.node,g=\"\";y?(g=w?require(\"path\").dirname(g)+\"/\":__dirname+\"/\",c=()=>{u||(o=require(\"fs\"),u=require(\"path\"))},f=function(r,A){var n=rr(r);return n?A?n:n.toString():(c(),r=u.normalize(r),o.readFileSync(r,A?void 0:\"utf8\"))},a=r=>{var A=f(r,!0);return A.buffer||(A=new Uint8Array(A)),A},i=(r,A,n)=>{var e=rr(r);e&&A(e),c(),r=u.normalize(r),o.readFile(r,(function(r,e){r?n(r):A(e.buffer)}))},t.argv.length>1&&t.argv[1].replace(/\\\\/g,\"/\"),l=t.argv.slice(2),t.on(\"uncaughtException\",(function(r){if(!(r instanceof or))throw r})),t.on(\"unhandledRejection\",(function(r){throw r})),P=(r,A)=>{throw t.exitCode=r,A},e.inspect=function(){return\"[Emscripten Module object]\"}):(v||w)&&(w?g=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),g=0!==g.indexOf(\"blob:\")?g.substr(0,g.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",f=r=>{try{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.send(null),A.responseText}catch(A){var n=rr(r);if(n)return function(r){for(var A=[],n=0;n<r.length;n++){var e=r[n];e>255&&(e&=255),A.push(String.fromCharCode(e))}return A.join(\"\")}(n);throw A}},w&&(a=r=>{try{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.responseType=\"arraybuffer\",A.send(null),new Uint8Array(A.response)}catch(A){var n=rr(r);if(n)return n;throw A}}),i=(r,A,n)=>{var e=new XMLHttpRequest;e.open(\"GET\",r,!0),e.responseType=\"arraybuffer\",e.onload=()=>{if(200==e.status||0==e.status&&e.response)A(e.response);else{var t=rr(r);t?A(t.buffer):n()}},e.onerror=n,e.send(null)}),console.log.bind(console);var D,b=console.warn.bind(console);Object.assign(e,s),s=null;var d,h={Memory:function(r){this.buffer=new ArrayBuffer(65536*r.initial)},Module:function(r){},Instance:function(r,A){this.exports=function(r){for(var A,n=new Uint8Array(123),e=25;e>=0;--e)n[48+e]=52+e,n[65+e]=e,n[97+e]=26+e;function t(r,A,e){for(var t,f,i=0,a=A,o=e.length,u=A+(3*o>>2)-(\"=\"==e[o-2])-(\"=\"==e[o-1]);i<o;i+=4)t=n[e.charCodeAt(i+1)],f=n[e.charCodeAt(i+2)],r[a++]=n[e.charCodeAt(i)]<<2|t>>4,a<u&&(r[a++]=t<<4|f>>2),a<u&&(r[a++]=f<<6|n[e.charCodeAt(i+3)])}return n[43]=62,n[47]=63,function(r){var n=r.a.buffer,e=new Int8Array(n),f=new Int16Array(n),i=new Int32Array(n),a=new Uint8Array(n),o=new Uint16Array(n),u=new Uint32Array(n),c=(new Float32Array(n),new Float64Array(n),Math.imul),s=(Math.fround,Math.abs,Math.clz32,Math.min,Math.max,Math.floor,Math.ceil,Math.trunc,Math.sqrt,r.abort),l=r.b,P=r.c,v=r.e,w=8422640,y=0,g=0;function D(r){var A,n=0,e=0,t=0,f=0,o=0,c=0,s=0,l=0,P=0,v=0;w=A=w-16|0;r:{A:{n:{e:{t:{f:{i:{a:{o:{u:{c:{if((r|=0)>>>0<=244){if(3&(n=(s=i[8382])>>>(e=(c=r>>>0<11?16:r+11&-8)>>>3|0)|0)){r=(c=i[33576+(n=(t=e+(1&(-1^n))|0)<<3)>>2])+8|0,(0|(e=i[c+8>>2]))!=(0|(n=n+33568|0))?(i[e+12>>2]=n,i[n+8>>2]=e):i[8382]=Yr(-2,t)&s,n=t<<3,i[c+4>>2]=3|n,i[4+(n=n+c|0)>>2]=1|i[n+4>>2];break r}if((v=i[8384])>>>0>=c>>>0)break c;if(n){f=i[33576+(r=(e=((n=(r=(r=(r=(r=(r=((r=((r=2<<e)|0-r)&n<<e)&0-r)-1|0)>>>(o=r>>>12&16)|0)>>>(f=r>>>5&8)|0)>>>(t=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|t|f|o)+(r>>>n|0)|0)<<3)>>2],(0|(n=i[f+8>>2]))!=(0|(r=r+33568|0))?(i[n+12>>2]=r,i[r+8>>2]=n):(s=Yr(-2,e)&s,i[8382]=s),r=f+8|0,i[f+4>>2]=3|c,t=f+c|0,c=(n=e<<3)-c|0,i[t+4>>2]=1|c,i[n+f>>2]=c,v&&(e=33568+((n=v>>>3|0)<<3)|0,f=i[8387],(n=1<<n)&s?n=i[e+8>>2]:(i[8382]=n|s,n=e),i[e+8>>2]=f,i[n+12>>2]=f,i[f+12>>2]=e,i[f+8>>2]=n),i[8387]=t,i[8384]=c;break r}if(!(P=i[8383]))break c;for(n=i[33832+(((n=(r=(r=(r=(r=(r=(P&0-P)-1|0)>>>(o=r>>>12&16)|0)>>>(f=r>>>5&8)|0)>>>(t=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|t|f|o)+(r>>>n|0)<<2)>>2],t=(-8&i[n+4>>2])-c|0,e=n;(r=i[e+16>>2])||(r=i[e+20>>2]);)t=(f=(e=(-8&i[r+4>>2])-c|0)>>>0<t>>>0)?e:t,n=f?r:n,e=r;if(l=i[n+24>>2],(0|(f=i[n+12>>2]))!=(0|n)){r=i[n+8>>2],i[r+12>>2]=f,i[f+8>>2]=r;break A}if(!(r=i[(e=n+20|0)>>2])){if(!(r=i[n+16>>2]))break u;e=n+16|0}for(;o=e,f=r,(r=i[(e=r+20|0)>>2])||(e=f+16|0,r=i[f+16>>2]););i[o>>2]=0;break A}if(c=-1,!(r>>>0>4294967231)&&(c=-8&(r=r+11|0),l=i[8383])){t=0-c|0,s=0,c>>>0<256||(s=31,c>>>0>16777215||(r=r>>>8|0,r<<=o=r+1048320>>>16&8,s=28+(c>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|o)|0)&1|r<<1)|0));s:{l:{if(e=i[33832+(s<<2)>>2])for(r=0,n=c<<(31==(0|s)?0:25-(s>>>1|0)|0);;){if(!((o=(-8&i[e+4>>2])-c|0)>>>0>=t>>>0||(f=e,t=o))){t=0,r=e;break l}if(o=i[e+20>>2],e=i[16+((n>>>29&4)+e|0)>>2],r=o?(0|o)==(0|e)?r:o:r,n<<=1,!e)break}else r=0;if(!(r|f)){if(f=0,!(r=((r=2<<s)|0-r)&l))break c;r=i[33832+(((n=(r=(r=(r=(r=(r=(r&0-r)-1|0)>>>(P=r>>>12&16)|0)>>>(s=r>>>5&8)|0)>>>(o=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|o|s|P)+(r>>>n|0)<<2)>>2]}if(!r)break s}for(;t=(e=(n=(-8&i[r+4>>2])-c|0)>>>0<t>>>0)?n:t,f=e?r:f,r=(n=i[r+16>>2])||i[r+20>>2];);}if(!(!f|i[8384]-c>>>0<=t>>>0)){if(s=i[f+24>>2],(0|f)!=(0|(n=i[f+12>>2]))){r=i[f+8>>2],i[r+12>>2]=n,i[n+8>>2]=r;break n}if(!(r=i[(e=f+20|0)>>2])){if(!(r=i[f+16>>2]))break o;e=f+16|0}for(;o=e,n=r,(r=i[(e=r+20|0)>>2])||(e=n+16|0,r=i[n+16>>2]););i[o>>2]=0;break n}}}if((e=i[8384])>>>0>=c>>>0){t=i[8387],(n=e-c|0)>>>0>=16?(i[8384]=n,r=t+c|0,i[8387]=r,i[r+4>>2]=1|n,i[e+t>>2]=n,i[t+4>>2]=3|c):(i[8387]=0,i[8384]=0,i[t+4>>2]=3|e,i[4+(r=e+t|0)>>2]=1|i[r+4>>2]),r=t+8|0;break r}if((s=i[8385])>>>0>c>>>0){n=s-c|0,i[8385]=n,r=(e=i[8388])+c|0,i[8388]=r,i[r+4>>2]=1|n,i[e+4>>2]=3|c,r=e+8|0;break r}if(r=0,n=P=c+47|0,i[8500]?e=i[8502]:(i[8503]=-1,i[8504]=-1,i[8501]=4096,i[8502]=4096,i[8500]=A+12&-16^1431655768,i[8505]=0,i[8493]=0,e=4096),(e=(o=0-e|0)&(f=n+e|0))>>>0<=c>>>0)break r;if((n=i[8492])&&(v=n)>>>0<(n=(t=i[8490])+e|0)>>>0|n>>>0<=t>>>0)break r;if(4&a[33972])break f;c:{s:{if(t=i[8388])for(r=33976;;){if((n=i[r>>2])>>>0<=t>>>0&t>>>0<n+i[r+4>>2]>>>0)break s;if(!(r=i[r+8>>2]))break}if(-1==(0|(n=Pr(0))))break i;if(s=e,(r=(t=i[8501])-1|0)&n&&(s=(e-n|0)+(r+n&0-t)|0),s>>>0>2147483646|c>>>0>=s>>>0)break i;if((r=i[8492])&&(o=r)>>>0<(r=(t=i[8490])+s|0)>>>0|r>>>0<=t>>>0)break i;if((0|n)!=(0|(r=Pr(s))))break c;break t}if((s=o&f-s)>>>0>2147483646)break i;if((0|(n=Pr(s)))==(i[r+4>>2]+i[r>>2]|0))break a;r=n}if(!(-1==(0|r)|c+48>>>0<=s>>>0)){if((n=0-(n=i[8502])&n+(P-s|0))>>>0>2147483646){n=r;break t}if(-1!=(0|Pr(n))){s=n+s|0,n=r;break t}Pr(0-s|0);break i}if(n=r,-1!=(0|r))break t;break i}f=0;break A}n=0;break n}if(-1!=(0|n))break t}i[8493]=4|i[8493]}if(e>>>0>2147483646)break e;if((n=Pr(e))>>>0>=(r=Pr(0))>>>0|-1==(0|r)|-1==(0|n))break e;if((s=r-n|0)>>>0<=c+40>>>0)break e}r=i[8490]+s|0,i[8490]=r,r>>>0>u[8491]&&(i[8491]=r);t:{f:{i:{if(o=i[8388]){for(r=33976;;){if(((t=i[r+4>>2])+(e=i[r>>2])|0)==(0|n))break i;if(!(r=i[r+8>>2]))break}break f}for((r=i[8386])>>>0<=n>>>0&&r||(i[8386]=n),r=0,i[8495]=s,i[8494]=n,i[8390]=-1,i[8391]=i[8500],i[8497]=0;e=33568+(t=r<<3)|0,i[t+33576>>2]=e,i[t+33580>>2]=e,32!=(0|(r=r+1|0)););e=(r=n+8&7?-8-n&7:0)+n|0,i[8388]=e,r=(s-r|0)-40|0,i[8385]=r,i[e+4>>2]=1|r,i[(n+s|0)-36>>2]=40,i[8389]=i[8504];break t}if(!(8&a[r+12|0]|e>>>0>o>>>0|n>>>0<=o>>>0)){i[r+4>>2]=t+s,e=(r=o+8&7?-8-o&7:0)+o|0,i[8388]=e,r=(n=i[8385]+s|0)-r|0,i[8385]=r,i[e+4>>2]=1|r,i[4+(n+o|0)>>2]=40,i[8389]=i[8504];break t}}u[8386]>n>>>0&&(i[8386]=n),f=n+s|0,r=33976;f:{i:{a:{o:{u:{c:{for(;;){if((0|f)!=i[r>>2]){if(r=i[r+8>>2])continue;break c}break}if(!(8&a[r+12|0]))break u}for(r=33976;;){if((e=i[r>>2])>>>0<=o>>>0&&(t=e+i[r+4>>2]|0)>>>0>o>>>0)break o;r=i[r+8>>2]}}if(i[r>>2]=n,i[r+4>>2]=i[r+4>>2]+s,i[4+(s=(n+8&7?-8-n&7:0)+n|0)>>2]=3|c,e=(f=f+(f+8&7?-8-f&7:0)|0)-(l=c+s|0)|0,(0|f)==(0|o)){i[8388]=l,r=i[8385]+e|0,i[8385]=r,i[l+4>>2]=1|r;break i}if(i[8387]==(0|f)){i[8387]=l,r=i[8384]+e|0,i[8384]=r,i[l+4>>2]=1|r,i[r+l>>2]=r;break i}if(1==(3&(r=i[f+4>>2]))){o=-8&r;u:if(r>>>0<=255){if(t=i[f+8>>2],r=r>>>3|0,(0|(n=i[f+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,r);break u}i[t+12>>2]=n,i[n+8>>2]=t}else{if(P=i[f+24>>2],(0|f)==(0|(n=i[f+12>>2])))if((t=i[(r=f+20|0)>>2])||(t=i[(r=f+16|0)>>2])){for(;c=r,(t=i[(r=(n=t)+20|0)>>2])||(r=n+16|0,t=i[n+16>>2]););i[c>>2]=0}else n=0;else r=i[f+8>>2],i[r+12>>2]=n,i[n+8>>2]=r;if(P){t=i[f+28>>2];c:{if(i[(r=33832+(t<<2)|0)>>2]==(0|f)){if(i[r>>2]=n,n)break c;i[8383]=i[8383]&Yr(-2,t);break u}if(i[P+(i[P+16>>2]==(0|f)?16:20)>>2]=n,!n)break u}i[n+24>>2]=P,(r=i[f+16>>2])&&(i[n+16>>2]=r,i[r+24>>2]=n),(r=i[f+20>>2])&&(i[n+20>>2]=r,i[r+24>>2]=n)}}f=f+o|0,e=e+o|0}if(i[f+4>>2]=-2&i[f+4>>2],i[l+4>>2]=1|e,i[e+l>>2]=e,e>>>0<=255){n=33568+((r=e>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=l,i[r+12>>2]=l,i[l+12>>2]=n,i[l+8>>2]=r;break i}if(r=31,e>>>0<=16777215&&(r=e>>>8|0,r<<=c=r+1048320>>>16&8,r=28+(e>>>21+(r=((r<<=t=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|t|c)|0)&1|r<<1)|0),i[l+28>>2]=r,i[l+16>>2]=0,i[l+20>>2]=0,c=33832+(r<<2)|0,(t=1<<r)&(n=i[8383])){for(r=e<<(31==(0|r)?0:25-(r>>>1|0)|0),n=i[c>>2];;){if(t=n,(-8&i[n+4>>2])==(0|e))break a;if(n=r>>>29|0,r<<=1,!(n=i[16+(c=t+(4&n)|0)>>2]))break}i[c+16>>2]=l,i[l+24>>2]=t}else i[8383]=n|t,i[c>>2]=l,i[l+24>>2]=c;i[l+12>>2]=l,i[l+8>>2]=l;break i}for(e=(r=n+8&7?-8-n&7:0)+n|0,i[8388]=e,r=(s-r|0)-40|0,i[8385]=r,i[e+4>>2]=1|r,i[f-36>>2]=40,i[8389]=i[8504],i[(e=(r=(t+(t-39&7?39-t&7:0)|0)-47|0)>>>0<o+16>>>0?o:r)+4>>2]=27,r=i[8497],i[e+16>>2]=i[8496],i[e+20>>2]=r,r=i[8495],i[e+8>>2]=i[8494],i[e+12>>2]=r,i[8496]=e+8,i[8495]=s,i[8494]=n,i[8497]=0,r=e+24|0;i[r+4>>2]=7,n=r+8|0,r=r+4|0,n>>>0<t>>>0;);if((0|e)==(0|o))break t;if(i[e+4>>2]=-2&i[e+4>>2],f=e-o|0,i[o+4>>2]=1|f,i[e>>2]=f,f>>>0<=255){n=33568+((r=f>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=o,i[r+12>>2]=o,i[o+12>>2]=n,i[o+8>>2]=r;break t}if(r=31,i[o+16>>2]=0,i[o+20>>2]=0,f>>>0<=16777215&&(r=f>>>8|0,r<<=t=r+1048320>>>16&8,r=28+(f>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|t)|0)&1|r<<1)|0),i[o+28>>2]=r,t=33832+(r<<2)|0,(e=i[8383])&(n=1<<r)){for(r=f<<(31==(0|r)?0:25-(r>>>1|0)|0),n=i[t>>2];;){if(e=n,(0|f)==(-8&i[n+4>>2]))break f;if(n=r>>>29|0,r<<=1,!(n=i[16+(t=e+(4&n)|0)>>2]))break}i[t+16>>2]=o,i[o+24>>2]=e}else i[8383]=n|e,i[t>>2]=o,i[o+24>>2]=t;i[o+12>>2]=o,i[o+8>>2]=o;break t}r=i[t+8>>2],i[r+12>>2]=l,i[t+8>>2]=l,i[l+24>>2]=0,i[l+12>>2]=t,i[l+8>>2]=r}r=s+8|0;break r}r=i[e+8>>2],i[r+12>>2]=o,i[e+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=e,i[o+8>>2]=r}if(!((r=i[8385])>>>0<=c>>>0)){n=r-c|0,i[8385]=n,r=(e=i[8388])+c|0,i[8388]=r,i[r+4>>2]=1|n,i[e+4>>2]=3|c,r=e+8|0;break r}}i[8381]=48,r=0;break r}n:if(s){e=i[f+28>>2];e:{if(i[(r=33832+(e<<2)|0)>>2]==(0|f)){if(i[r>>2]=n,n)break e;l=Yr(-2,e)&l,i[8383]=l;break n}if(i[s+(i[s+16>>2]==(0|f)?16:20)>>2]=n,!n)break n}i[n+24>>2]=s,(r=i[f+16>>2])&&(i[n+16>>2]=r,i[r+24>>2]=n),(r=i[f+20>>2])&&(i[n+20>>2]=r,i[r+24>>2]=n)}n:if(t>>>0<=15)r=t+c|0,i[f+4>>2]=3|r,i[4+(r=r+f|0)>>2]=1|i[r+4>>2];else if(i[f+4>>2]=3|c,i[4+(o=f+c|0)>>2]=1|t,i[t+o>>2]=t,t>>>0<=255)n=33568+((r=t>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=o,i[r+12>>2]=o,i[o+12>>2]=n,i[o+8>>2]=r;else{r=31,t>>>0<=16777215&&(r=t>>>8|0,r<<=c=r+1048320>>>16&8,r=28+(t>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|c)|0)&1|r<<1)|0),i[o+28>>2]=r,i[o+16>>2]=0,i[o+20>>2]=0,n=33832+(r<<2)|0;e:{if((e=1<<r)&l){for(r=t<<(31==(0|r)?0:25-(r>>>1|0)|0),c=i[n>>2];;){if((-8&i[(n=c)+4>>2])==(0|t))break e;if(e=r>>>29|0,r<<=1,!(c=i[16+(e=(4&e)+n|0)>>2]))break}i[e+16>>2]=o}else i[8383]=e|l,i[n>>2]=o;i[o+24>>2]=n,i[o+12>>2]=o,i[o+8>>2]=o;break n}r=i[n+8>>2],i[r+12>>2]=o,i[n+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=n,i[o+8>>2]=r}r=f+8|0;break r}A:if(l){e=i[n+28>>2];n:{if(i[(r=33832+(e<<2)|0)>>2]==(0|n)){if(i[r>>2]=f,f)break n;i[8383]=Yr(-2,e)&P;break A}if(i[l+(i[l+16>>2]==(0|n)?16:20)>>2]=f,!f)break A}i[f+24>>2]=l,(r=i[n+16>>2])&&(i[f+16>>2]=r,i[r+24>>2]=f),(r=i[n+20>>2])&&(i[f+20>>2]=r,i[r+24>>2]=f)}t>>>0<=15?(r=t+c|0,i[n+4>>2]=3|r,i[4+(r=r+n|0)>>2]=1|i[r+4>>2]):(i[n+4>>2]=3|c,i[4+(c=n+c|0)>>2]=1|t,i[t+c>>2]=t,v&&(e=33568+((r=v>>>3|0)<<3)|0,f=i[8387],(r=1<<r)&s?r=i[e+8>>2]:(i[8382]=r|s,r=e),i[e+8>>2]=f,i[r+12>>2]=f,i[f+12>>2]=e,i[f+8>>2]=r),i[8387]=c,i[8384]=t),r=n+8|0}return w=A+16|0,0|r}function b(r){var A=0,n=0,e=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0,x=0,U=0,F=0,R=0,O=0,H=0,M=0,Y=0,J=0,L=0,V=0,G=0,X=0,Z=0,N=0,q=0,K=0,_=0,$=0,rr=0,Ar=0,nr=0,er=0,tr=0,fr=0,ir=0,ar=0,or=0,ur=0,cr=0,sr=0,lr=0,Pr=0,vr=0,wr=0,yr=0,gr=0,Dr=0,br=0,dr=0,hr=0,Cr=0,Br=0,kr=0,jr=0,pr=0,mr=0,Sr=0,Tr=0,zr=0,Er=0,Qr=0,Ir=0,xr=0,Ur=0,Fr=0,Rr=0,Or=0,Hr=0,Mr=0,Yr=0,Jr=0,Lr=0,Vr=0;for(q=i[r+192>>2],R=i[r+196>>2],K=i[r+184>>2],_=i[r+188>>2],h=i[r+176>>2],Y=i[r+180>>2],C=i[r+168>>2],B=i[r+172>>2],J=i[r+160>>2],L=i[r+164>>2],k=i[r+152>>2],n=i[r+156>>2],j=i[r+144>>2],E=i[r+148>>2],f=i[r+136>>2],V=i[r+140>>2],$=i[r+128>>2],rr=i[r+132>>2],p=i[r+120>>2],Ar=i[r+124>>2],m=i[r+112>>2],O=i[r+116>>2],c=i[r+104>>2],s=i[r+108>>2],G=i[r+96>>2],S=i[r+100>>2],e=i[r+88>>2],t=i[r+92>>2],T=i[r+80>>2],X=i[r+84>>2],l=i[r+72>>2],v=i[r+76>>2],P=i[r+64>>2],w=i[r+68>>2],D=i[r+56>>2],a=i[r+60>>2],b=i[r+48>>2],d=i[r+52>>2],o=i[r+40>>2],z=i[r+44>>2],ur=i[r+32>>2],nr=i[r+36>>2],Q=i[r+24>>2],I=i[r+28>>2],y=i[r+16>>2],x=i[r+20>>2],A=i[r+8>>2],u=i[r+12>>2],H=i[r>>2],U=i[r+4>>2];wr>>>0<=23;)er=Z=L^Ar^X^z^U,ar=j^K^c^P^Q,Z=W(N=p^J^T^o^H,Z,1)^ar,F=W(Z^ur,(or=(cr=E^_^s^w^I)^g)^nr,27),tr=g,sr=M=V^Y^S^a^x,N=W(lr=f^h^G^D^y,M,1)^N,M=W(e^N,t^(er^=g),10),fr=g,Pr=t=B^rr^t^d^u,ir=k^q^m^l^ur,e=W(vr=C^$^e^b^A,t,1)^ir,o=W(e^o,(t=(nr^=n^R^O^v)^g)^z,36),yr=g,z=W(A^N,u^er,1),ur=g,u=c,c=W(ir,nr,1)^lr,nr=W(u^c,(ir=s)^(s=g^sr),25),A=g,sr=D,D=W(ar,cr,1)^vr,u=W(sr^D,(u=a)^(a=g^Pr),6),cr=g,Q=W(c^Q,s^I,28),I=g,T=W(e^T,t^X,3),X=g,ar=W(l^Z,v^or,20),sr=l=g,v=W(y^D,a^x,62),y=g,m=W(m^Z,O^or,39),O=g,x=W(c^P,s^w,55),lr=P=g,ir=i[(w=1024+(gr=wr<<3)|0)>>2],w=i[w+4>>2],G=W(D^G,a^S,43),S=g,b=W(b^N,d^er,44),w=l=(Dr=(Pr=t^U)^(-1^(d=g))&S^w)^(br=(-1^P)&O^y)^(dr=(-1^l)&X^I)^(hr=(-1^yr)&fr^tr)^(Cr=(-1^cr)&A^ur),l=W(P=(Br=(P=ir)^(ir=e^H)^(-1^b)&G)^(kr=(-1^x)&m^v)^(jr=(-1^ar)&T^Q)^(pr=(-1^o)&M^F)^(mr=(-1^u)&nr^z),l,1),H=g,f=W(f^D,a^V,15),V=g,K=W(c^K,s^_,56),vr=U=g,_=W(c^j,s^E,21),j=g,q=W(q^Z,R^or,14),c=g,R=W(k^Z,n^or,8),k=g,J=W(e^J,t^L,18),s=g,L=W(e^p,t^Ar,41),n=g,C=W(C^N,B^er,2),p=g,B=W(N^$,rr^er,45),E=g,Sr=F&(-1^K)^f,Tr=(-1^q)&ir^_,$=(-1^C)&v^L,zr=(-1^J)&z^R,h=W(D^h,a^Y,61),H=W((l^=Ar=Sr^Tr^$^zr^(rr=(-1^h)&Q^B))^(e=(-1^v)&x^C),(v=H^(Ur=(Er=tr&(-1^U)^V)^(Qr=(-1^c)&Pr^j)^(t=(-1^p)&y^n)^(Ir=(-1^s)&ur^k)^(xr=(-1^(Y=g))&I^E)))^(a=(-1^y)&lr^p),14),U=g,P=W(C=(Fr=(-1^R)&J^nr)^(y=(-1^_)&q^G)^(Rr=C&(-1^L)^m)^(Or=T^(-1^B)&h)^(Hr=(-1^f)&K^M),p=(Mr=(-1^k)&s^A)^(Yr=(-1^j)&c^S)^(Jr=p&(-1^n)^O)^(Lr=X^(-1^E)&Y)^(Vr=(-1^V)&vr^fr),1)^P,Z=W(P^(B=(-1^T)&B^ar),(w^=g)^(E=(-1^X)&E^sr),44),or=g,k=(n=(-1^O)&n^lr)^(T=(-1^A)&k^cr)^(fr=(-1^fr)&V^yr)^(A=(-1^S)&j^d)^E,D=(q=(F=(-1^F)&o^K)^(ar=(-1^Q)&ar^h)^(j=(-1^z)&u^J)^e^(E=b&(-1^ir)^q))^W(R=(K=(-1^m)&L^x)^(S=(-1^nr)&R^u)^(M=(-1^M)&f^o)^(e=(-1^G)&_^b)^B,k,1),er=h=Dr^(a=(_=(o=(-1^tr)&yr^vr)^(z=(-1^I)&sr^Y)^(f=(-1^ur)&cr^s)^a^(m=d&(-1^Pr)^c))^g),ur=(-1^(N=Br^D))&Z^H,nr=(-1^h)&or^U,h=W(P^K,n^w,2),Y=g,Q=W(q,_,1)^C,J=W(rr^Q,xr^(I=g^p),55),L=g,n=y,y=W(Ar,Ur,1)^R,q=(-1^(k=W(n^y,(x=g^k)^Yr,62)))&J^h,R=(-1^(n=R=g))&L^Y,K=(C=W(D^pr,a^hr,41))^(-1^h)&k,_=(B=g)^(-1^Y)&n,h=(j=W(l^j,f^v,39))^(-1^C)&h,Y=(f=g)^(-1^B)&Y,C=(-1^j)&C^J,B=(-1^f)&B^L,J=(-1^J)&j^k,L=(-1^L)&f^n,f=W(Q^$,t^I,56),V=g,p=W(D^jr,a^dr,36),Ar=g,m=W(l^E,v^m,27),O=n=g,k=(-1^m)&p^f,n=(-1^n)&Ar^V,j=($=W(y^Hr,x^Vr,15))^(-1^f)&m,E=(rr=g)^(-1^V)&O,f=(c=W(S^P,w^T,10))^(-1^$)&f,V=(s=g)^(-1^rr)&V,$=(-1^c)&$^p,rr=(-1^s)&rr^Ar,p=(-1^p)&c^m,Ar=(-1^Ar)&s^O,G=W(D^kr,a^br,18),S=g,T=W(y^Or,x^Lr,6),X=g,m=(-1^(b=W(e^P,A^w,1)))&T^G,O=(-1^(d=O=g))&X^S,c=(e=W(l^F,o^v,8))^(-1^G)&b,s=(t=g)^(-1^S)&d,G=(o=W(Q^zr,I^Ir,25))^(-1^e)&G,S=(A=g)^(-1^t)&S,e=(-1^o)&e^T,t=(-1^A)&t^X,T=(-1^T)&o^b,X=(-1^X)&A^d,b=W(y^Rr,x^Jr,61),d=g,o=W(l^ar,v^z,20),z=g,A=W(Q^Tr,I^Qr,28),u=v=g,l=(-1^A)&o^b,v=(-1^v)&z^d,P=(F=W(P^M,w^fr,45))^(-1^b)&A,w=(tr=g)^(-1^d)&u,D=(M=W(D^mr,a^Cr,3))^(-1^F)&b,a=(fr=g)^(-1^tr)&d,b=(-1^M)&F^o,d=(-1^fr)&tr^z,o=(-1^o)&M^A,z=(-1^z)&fr^u,Q=(A=W(Q^Sr,I^Er,21))^(-1^H)&N,I=(u=g)^(-1^U)&er,y=(F=W(y^Fr,x^Mr,43))^(-1^A)&H,x=(H=tr=g)^(-1^u)&U,A=(-1^F)&A^Z,u=(-1^H)&u^or,H=(-1^Z)&F^i[(U=1024+(8|gr)|0)>>2]^N,U=(-1^or)&tr^i[U+4>>2]^er,wr=wr+2|0;i[r+192>>2]=q,i[r+196>>2]=R,i[r+184>>2]=K,i[r+188>>2]=_,i[r+176>>2]=h,i[r+180>>2]=Y,i[r+168>>2]=C,i[r+172>>2]=B,i[r+160>>2]=J,i[r+164>>2]=L,i[r+152>>2]=k,i[r+156>>2]=n,i[r+144>>2]=j,i[r+148>>2]=E,i[r+136>>2]=f,i[r+140>>2]=V,i[r+128>>2]=$,i[r+132>>2]=rr,i[r+120>>2]=p,i[r+124>>2]=Ar,i[r+112>>2]=m,i[r+116>>2]=O,i[r+104>>2]=c,i[r+108>>2]=s,i[r+96>>2]=G,i[r+100>>2]=S,i[r+88>>2]=e,i[r+92>>2]=t,i[r+80>>2]=T,i[r+84>>2]=X,i[r+72>>2]=l,i[r+76>>2]=v,i[r+64>>2]=P,i[r+68>>2]=w,i[r+56>>2]=D,i[r+60>>2]=a,i[r+48>>2]=b,i[r+52>>2]=d,i[r+40>>2]=o,i[r+44>>2]=z,i[r+32>>2]=ur,i[r+36>>2]=nr,i[r+24>>2]=Q,i[r+28>>2]=I,i[r+16>>2]=y,i[r+20>>2]=x,i[r+8>>2]=A,i[r+12>>2]=u,i[r>>2]=H,i[r+4>>2]=U}function d(r){var A=0,n=0,e=0,t=0,f=0,a=0,o=0;r:if(r|=0){f=(e=r-8|0)+(r=-8&(A=i[r-4>>2]))|0;A:if(!(1&A)){if(!(3&A))break r;if((e=e-(A=i[e>>2])|0)>>>0<u[8386])break r;if(r=r+A|0,i[8387]==(0|e)){if(3==(3&(A=i[f+4>>2])))return i[8384]=r,i[f+4>>2]=-2&A,i[e+4>>2]=1|r,void(i[r+e>>2]=r)}else{if(A>>>0<=255){if(t=i[e+8>>2],A=A>>>3|0,(0|(n=i[e+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,A);break A}i[t+12>>2]=n,i[n+8>>2]=t;break A}if(o=i[e+24>>2],(0|e)==(0|(A=i[e+12>>2])))if((n=i[(t=e+20|0)>>2])||(n=i[(t=e+16|0)>>2])){for(;a=t,(n=i[(t=(A=n)+20|0)>>2])||(t=A+16|0,n=i[A+16>>2]););i[a>>2]=0}else A=0;else n=i[e+8>>2],i[n+12>>2]=A,i[A+8>>2]=n;if(!o)break A;t=i[e+28>>2];n:{if(i[(n=33832+(t<<2)|0)>>2]==(0|e)){if(i[n>>2]=A,A)break n;i[8383]=i[8383]&Yr(-2,t);break A}if(i[o+(i[o+16>>2]==(0|e)?16:20)>>2]=A,!A)break A}if(i[A+24>>2]=o,(n=i[e+16>>2])&&(i[A+16>>2]=n,i[n+24>>2]=A),!(n=i[e+20>>2]))break A;i[A+20>>2]=n,i[n+24>>2]=A}}if(!(e>>>0>=f>>>0)&&1&(A=i[f+4>>2])){A:{if(!(2&A)){if(i[8388]==(0|f)){if(i[8388]=e,r=i[8385]+r|0,i[8385]=r,i[e+4>>2]=1|r,i[8387]!=(0|e))break r;return i[8384]=0,void(i[8387]=0)}if(i[8387]==(0|f))return i[8387]=e,r=i[8384]+r|0,i[8384]=r,i[e+4>>2]=1|r,void(i[r+e>>2]=r);r=(-8&A)+r|0;n:if(A>>>0<=255){if(t=i[f+8>>2],A=A>>>3|0,(0|(n=i[f+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,A);break n}i[t+12>>2]=n,i[n+8>>2]=t}else{if(o=i[f+24>>2],(0|f)==(0|(A=i[f+12>>2])))if((n=i[(t=f+20|0)>>2])||(n=i[(t=f+16|0)>>2])){for(;a=t,(n=i[(t=(A=n)+20|0)>>2])||(t=A+16|0,n=i[A+16>>2]););i[a>>2]=0}else A=0;else n=i[f+8>>2],i[n+12>>2]=A,i[A+8>>2]=n;if(o){t=i[f+28>>2];e:{if(i[(n=33832+(t<<2)|0)>>2]==(0|f)){if(i[n>>2]=A,A)break e;i[8383]=i[8383]&Yr(-2,t);break n}if(i[o+(i[o+16>>2]==(0|f)?16:20)>>2]=A,!A)break n}i[A+24>>2]=o,(n=i[f+16>>2])&&(i[A+16>>2]=n,i[n+24>>2]=A),(n=i[f+20>>2])&&(i[A+20>>2]=n,i[n+24>>2]=A)}}if(i[e+4>>2]=1|r,i[r+e>>2]=r,i[8387]!=(0|e))break A;return void(i[8384]=r)}i[f+4>>2]=-2&A,i[e+4>>2]=1|r,i[r+e>>2]=r}if(r>>>0<=255)return A=33568+((r=r>>>3|0)<<3)|0,(n=1<<r)&(r=i[8382])?r=i[A+8>>2]:(i[8382]=r|n,r=A),i[A+8>>2]=e,i[r+12>>2]=e,i[e+12>>2]=A,void(i[e+8>>2]=r);t=31,i[e+16>>2]=0,i[e+20>>2]=0,r>>>0<=16777215&&(A=r>>>8|0,A<<=a=A+1048320>>>16&8,t=28+(r>>>21+(A=((A<<=t=A+520192>>>16&4)<<(n=A+245760>>>16&2)>>>15|0)-(n|t|a)|0)&1|A<<1)|0),i[e+28>>2]=t,a=33832+(t<<2)|0;A:{n:{if((n=i[8383])&(A=1<<t)){for(t=r<<(31==(0|t)?0:25-(t>>>1|0)|0),A=i[a>>2];;){if(n=A,(-8&i[A+4>>2])==(0|r))break n;if(A=t>>>29|0,t<<=1,!(A=i[16+(a=n+(4&A)|0)>>2]))break}i[a+16>>2]=e,i[e+24>>2]=n}else i[8383]=A|n,i[a>>2]=e,i[e+24>>2]=a;i[e+12>>2]=e,i[e+8>>2]=e;break A}r=i[n+8>>2],i[r+12>>2]=e,i[n+8>>2]=e,i[e+24>>2]=0,i[e+12>>2]=n,i[e+8>>2]=r}r=i[8390]-1|0,i[8390]=r||-1}}}function h(r,A,n,e,t){var f,o,u,s,l,P,v,w=0,y=0,D=0,b=0,d=0,h=0,B=0,k=0,j=0,p=0;for(y=(b=w=n>>31)^(1073741823&(w=n<<10|A>>>22)|1073741824),k=((D=(B=n>>>31|0)+(b^A<<10&-1024)|0)^(y=D>>>0<B>>>0?y+1|0:y))&(w=0-((B=61-(d=n>>>20|0)&63)>>>5|0)|0)^D,w=(y^y>>31)&(h=w>>31)^y,y=A,D=0,D=0-(A=1&((2147483647&(D=(A=(2047&d)-1022|0)>>>0<4294966274?D+1|0:D))<<1|A>>>31))|0,A=w,f=D&(b^(A=(63&(w=31&B))>>>0>=32?A>>w:((1<<w)-1&A)<<32-w|k>>>w))^A,o=Gr(A=y,n,O(y=f,b=y>>31),g),u=g,s=kr(_r(e,t),g),l=g,P=R(e,t,i[r+784>>2],i[r+788>>2]),v=g;;){for(e=0,(d=i[r+512>>2])>>>0>=503&&(C(r),d=0),i[r+512>>2]=d+8,n=a[4+(A=r+d|0)|0]|a[A+5|0]<<8|a[A+6|0]<<16|a[A+7|0]<<24,A=a[0|A]|a[A+1|0]<<8|a[A+2|0]<<16|a[A+3|0]<<24,t=Rr(r)<<16|n>>>16,w=16777215&A,n=16777215&((16777215&n)<<8|A>>>24),d=0;d>>>0<=53;)e=(((n-i[26708+(A=d<<2)>>2]|0)+(w-i[A+26712>>2]>>31)>>31)+(t-i[A+26704>>2]|0)>>>31|0)+e|0,d=d+3|0;for(A=1&Rr(r),A=Gr(R(_r(Gr(O(A=p=c(e,(A<<1)-1|0)+A|0,A>>31),g,o,u),g),g,s,l),g,R(O(c(e,e),0),g,-1048331326,1069764491),g),e=tr(R(A,n=g,1697350398,1073157447),g),A=tr(R(Gr(A,n,R(O(w=e,b=w>>31),g,-17155601,1072049730),g),g,0,1138753536),g),B=(2147483647&(n=g))<<1|A>>>31,k=A<<1&-2,h=0,A=1947304867,n=4,d=1;13!=(0|d);)D=n,w=or(n,0,B,h),y=g,n=or(B,h,A,t=0),b=(j=g)+w|0,w=y,y=b>>>0<j>>>0?w+1|0:w,w=or(D,t,k,h),D=g,or(A,t,k,h),D=(A=(t=g)+w|0)>>>0<t>>>0?D+1|0:D,t=i[(w=1360+(d<<3)|0)>>2],j=i[w+4>>2],w=y,b=D>>>0>(y=b=D+b|0)>>>0?w+1|0:w,w=y,y=0,b=(A=w+(n=y=A+n>>>0<A>>>0?y+1|0:y)|0)>>>0<n>>>0?b+1|0:b,n=A,A=t-A|0,n=j-((n>>>0>t>>>0)+b|0)|0,d=d+1|0;for(t=tr(R(P,v,0,1138753536),g),d=or(w=(2147483647&(w=g))<<1|t>>>31,0,A,b=0),y=g,B=n,h=or(w,b,n,0),w=g,D=n=y+h|0,n=n>>>0<h>>>0?w+1|0:w,h=63-e>>31,or(y=A,b,A=(A=t)<<1&-2,t=0),A=(y=g)+(t=or(B,b,A,t))|0,y=g,w=n,w=(t=(y=A>>>0<t>>>0?y+1|0:y)+D|0)>>>0<y>>>0?w+1|0:w,D=0,D=(w=(A=(n=D=A+d>>>0<A>>>0?D+1|0:D)+t|0)>>>0<n>>>0?w+1|0:w)<<1|A>>>31,t=(A<<=1)-1|0,n=D-!A|0,A=31&(e^=h&(63^e)),(63&e)>>>0>=32?(w=0,b=n>>>A|0):(w=n>>>A|0,b=((1<<A)-1&n)<<32-A|t>>>A),A=64,n=0;t=n-(A>>>0<8)|0,y=31&(e=A-8|0),!(y=Rr(r)-(255&((63&e)>>>0>=32?w>>>y|0:((1<<y)-1&w)<<32-y|b>>>y))|0)&&(D=!n&A>>>0>8|0!=(0|n),A=e,n=t,D););if(y>>>31|0)break}return f+p|0}function C(r){var A,n,t,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,y=0,g=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0,z=0,E=0;w=A=w+-64|0,n=r+520|0,m=i[r+568>>2],S=i[r+572>>2],t=A+16|0;r:for(;;){if(8!=(0|T))for(Fr(t,n,48),u=i[A+60>>2]^S,C=i[A+56>>2]^m,o=0,c=1634760805,y=857760878,g=2036477234,B=1797285236,s=i[A+44>>2],f=i[A+28>>2],D=i[A+40>>2],a=i[A+24>>2],j=i[A+36>>2],l=i[A+52>>2],d=i[A+20>>2],b=i[A+32>>2],p=i[A+48>>2],P=i[A+16>>2];;){if(10==(0|o)){for(i[A+48>>2]=p,i[A>>2]=c,i[A+16>>2]=P,i[A+32>>2]=b,i[A+20>>2]=d,i[A+52>>2]=l,i[A+4>>2]=y,i[A+36>>2]=j,i[A+24>>2]=a,i[A+56>>2]=C,i[A+8>>2]=g,i[A+40>>2]=D,i[A+28>>2]=f,i[A+60>>2]=u,i[A+12>>2]=B,i[A+44>>2]=s,f=0;o=4,4!=(0|f);)i[(a=(o=f<<2)+A|0)>>2]=i[o+26688>>2]+i[a>>2],f=f+1|0;for(;14!=(0|o);)i[(a=(f=o<<2)+A|0)>>2]=i[(f+n|0)-16>>2]+i[a>>2],o=o+1|0;for(i[A+56>>2]=i[A+56>>2]+(i[r+560>>2]^m),i[A+60>>2]=i[A+60>>2]+(i[r+564>>2]^S),d=T<<2,o=0;16!=(0|o);)f=d+(o<<5)|0,a=i[(o<<2)+A>>2],e[f+r|0]=a,e[(1|f)+r|0]=a>>>8,e[(2|f)+r|0]=a>>>16,e[(3|f)+r|0]=a>>>24,o=o+1|0;T=T+1|0,S=(m=m+1|0)?S:S+1|0;continue r}v=s,s=Yr((B=f+B|0)^u,16),f=Yr((h=v+s|0)^f,12),c=Yr((u=P+c|0)^p,16),P=Yr((b=c+b|0)^P,12),u=(c=Yr(c^(z=u+P|0),8))+b|0,g=Yr((v=C)^(C=a+g|0),16),a=Yr((D=g+D|0)^a,12),v=j,j=Yr((y=d+y|0)^l,16),d=Yr((l=v+j|0)^d,12),P=(b=f+B|0)+(B=Yr(u^P,7))|0,p=Yr((v=g)^(g=a+C|0),8),C=Yr(P^p,16),v=P,P=l,l=Yr((y=d+y|0)^j,8),k=Yr((P=C+(E=P+l|0)|0)^B,12),C=Yr(C^(B=v+k|0),8),P=Yr((j=C+P|0)^k,7),v=u,k=l,l=g,u=Yr(s^b,8),g=Yr((s=u+h|0)^f,7),b=Yr(k^(l=l+g|0),16),h=Yr((f=v+b|0)^g,12),l=Yr(b^(g=h+l|0),8),f=Yr((b=f+l|0)^h,7),v=s,k=c,s=y,y=Yr((c=D+p|0)^a,7),D=Yr(k^(s=s+y|0),16),h=Yr((a=v+D|0)^y,12),p=Yr(D^(y=h+s|0),8),a=Yr((s=a+p|0)^h,7),v=c,k=u,u=Yr(d^E,7),D=Yr(k^(c=u+z|0),16),h=Yr(u^(d=v+D|0),12),u=Yr(D^(c=h+c|0),8),d=Yr((D=d+u|0)^h,7),o=o+1|0}break}i[r+512>>2]=0,i[r+568>>2]=m,i[r+572>>2]=S,w=A- -64|0}function B(r,A,n,e,t,f,a,o){var u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,C=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,I=0;if(!a){for(t=0,a=1048575&(f=i[e+4>>2])|1048576,o=(0-(0!=(0|(f=1&(p=(D=f>>>20&2047)-1023|0))))&a)+a|0,o=(e=(e=i[e>>2])+(u=0-f&e)|0)>>>0<u>>>0?o+1|0:o,v=e,e=2097152,u=0,a=0;;){if(f=o<<1|(l=v)>>>31,o=l<<1,54==(0|t)){t=0-(e=D+2047>>>11|0)|0,y=0-(0!=(0|e))|0,e=fr(0,(p>>1)-54|0,((o=0!=(f|o))|(e=u)<<1)&t,(f=a<<1|e>>>31)&y),t=g;break}l=f,f=e+y|0,v=o-(C=(v=c+s|0)&(w=(b=(w=l-((f=v>>>0<c>>>0?f+1|0:f)+(o>>>0<v>>>0)|0)|0)>>>31|0)-1|0))|0,o=(P=l)-(((l=0-!b|0)&f)+(o>>>0<C>>>0)|0)|0,b=c,f=((f=e<<1|(c=s)>>>31)&l)+y|0,y=f=(c=b+(P=w&c<<1)|0)>>>0<P>>>0?f+1|0:f,t=t+1|0,f=a+(e&l)|0,f=(P=u+(s&w)|0)>>>0<u>>>0?f+1|0:f,u=P,a=f,s=(1&e)<<31|s>>>1,e=e>>>1|0}return e=R(e,t,-1066729002,1064818311),t=g,f=h(r,i[A>>2],i[A+4>>2],e,t),i[A>>2]=O(f,f>>31),i[A+4>>2]=g,r=h(r,i[n>>2],i[n+4>>2],e,t),i[n>>2]=O(r,r>>31),void(i[n+4>>2]=g)}for(p=1<<a>>>1|0;(0|y)!=(0|p);)T=i[(u=b=(P=y+p<<3)+f|0)>>2],z=i[u+4>>2],E=i[(u=C=(s=y<<3)+f|0)>>2],I=i[u+4>>2],l=i[(u=m=t+P|0)>>2],v=i[u+4>>2],u=i[(c=S=t+s|0)>>2],c=i[c+4>>2],P=i[(w=e+P|0)>>2],w=i[w+4>>2],s=i[4+(D=e+s|0)>>2],D=R(D=i[D>>2],s,s=X(j(k=_r(D,s),g,_r(P,w),g),g),d=g),k=g,w=R(qr(P,w),g,s,d),d=g,P=Gr(R(u,c,D,k),g,R(l,v,w,d),g),s=g,w=j(R(u,c,w,d),g,R(l,v,D,k),g),D=g,l=qr(l,v),v=g,k=Gr(R(P,s,u,c),g,R(w,D,l,v),g),d=g,u=j(R(P,s,l,v),g,R(w,D,u,c),g),c=g,l=Gr(E,I,k,d),v=g,u=Gr(T,z,u,c),i[C>>2]=l,i[C+4>>2]=v,i[b>>2]=u,i[b+4>>2]=g,i[S>>2]=P,i[S+4>>2]=s,i[m>>2]=qr(w,D),i[m+4>>2]=g,y=y+1|0;Q(o,c=(y=(v=1<<a)<<2&-8)+o|0,e,a),l=Fr(e,o,u=v<<3),Q(o,c,f,a),f=Fr(f,o,u),e=Fr(o,t,u),P=Fr(t,l,y),s=Fr(P+y|0,f,y),Q(t=e+u|0,o=t+y|0,n,a),B(r,t,o,f,f+y|0,b=s,s=a-1|0,t+u|0),x(f=e+(v<<4)|0,t,o,a),gr(t=Fr(t,n,u),f,a),Fr(n,f,u),N(e,t,a),yr(A,e,a),Q(e,c,A,a),B(r,e,c,l,l+y|0,P,s,t),x(A,e,c,a)}function k(r,A,n,e,t){var f,a,o,u,s,l,P,v,w,y,g=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,S=0;for(a=i[24452+(n<<=2)>>2],h=(y=(d=c(a,l=(o=1<<A)>>>1|0)<<2)+r|0)+d|0,d=i[n+24448>>2],f=(s=(u=(v=(P=dr(h,r,c(d,o)<<3))+(n=d<<A<<2)|0)+n|0)+(n=o<<2)|0)+n|0,w=A-1|0;(0|d)!=(0|C);){for(n=c(C,12),D=i[n+18176>>2],V(u,s,A,n=i[n+18180>>2],D,b=xr(D)),g=0,n=j=(h=C<<2)+P|0;(0|g)!=(0|o);)i[(g<<2)+f>>2]=i[n>>2],g=g+1|0,n=(d<<2)+n|0;for(B=zr(D,b),e||G(f,1,u,A,D,b),g=0,n=p=r+h|0;(0|g)!=(0|l);)k=(g<<3)+f|0,i[n>>2]=vr(vr(i[k>>2],i[k+4>>2],D,b),B,D,b),g=g+1|0,n=(a<<2)+n|0;for(e&&Y(j,d,s,A,D,b),g=0,n=j=h+v|0;(0|g)!=(0|o);)i[(g<<2)+f>>2]=i[n>>2],g=g+1|0,n=(d<<2)+n|0;for(e||G(f,1,u,A,D,b),g=0,n=h=h+y|0;(0|g)!=(0|l);)k=(g<<3)+f|0,i[n>>2]=vr(vr(i[k>>2],i[k+4>>2],D,b),B,D,b),g=g+1|0,n=(a<<2)+n|0;e&&Y(j,d,s,A,D,b),t||(Y(p,a,s,w,D,b),Y(h,a,s,w,D,b)),C=C+1|0}m(P,d,d,o,1,u),m(v,d,d,o,1,u),j=d>>>0>a>>>0?d:a,e=d;r:for(;;){if((0|e)!=(0|j)){for(n=c(e,12),B=Cr(d,D=i[n+18176>>2],b=xr(D),C=zr(D,b)),V(u,s,A,i[n+18180>>2],D,b),g=0,n=P;(0|g)!=(0|o);)i[(g<<2)+f>>2]=Or(n,d,D,b,C,B),g=g+1|0,n=(d<<2)+n|0;for(G(f,1,u,A,D,b),g=0,h=k=(p=e<<2)+r|0,n=0;;){if((0|n)==(0|l)){for(n=v;(0|g)!=(0|o);)i[(g<<2)+f>>2]=Or(n,d,D,b,C,B),g=g+1|0,n=(d<<2)+n|0;for(G(f,1,u,A,D,b),g=0,n=h=p+y|0;(0|g)!=(0|l);)B=(g<<3)+f|0,i[n>>2]=vr(vr(i[B>>2],i[B+4>>2],D,b),C,D,b),g=g+1|0,n=(a<<2)+n|0;t||(Y(k,a,s,w,D,b),Y(h,a,s,w,D,b)),e=e+1|0;continue r}S=(n<<3)+f|0,i[h>>2]=vr(vr(i[S>>2],i[S+4>>2],D,b),C,D,b),n=n+1|0,h=(a<<2)+h|0}}break}}function j(r,A,n,e){var t,f,i,a,o,u=0,c=0,s=0,l=0,P=0,v=0;return s=r^(l=0-(c=((0|r)==(0|n)&(0|(c=(2147483647&A)-((2147483647&e)+(r>>>0<n>>>0)|0)|0))<=0|(0|c)<0)&A>>>31|c>>>31)&(r^n)),f=(r=A^(P=0-(0!=(0|c))&(A^e)))>>>31|0,c=0,i=(A=s)<<3&-8,a=8388607&(u=r<<3|A>>>29)|2047+(t=r>>>20&2047)>>>11<<23,A=r=e^P,e=n^l,P=63&(u=t-(l=r>>>20&2047)|0),v=0-(u=u-60>>>31|0)|0,o=0-(0!=(0|u))|0,s=r=(n=cr(1,0,P))-1|0,u=(n=g-!n|0)+((r=((r=l+2047>>>11<<23)|8388607&(u=A<<3|e>>>29))&o)&n)|0,r=wr((s=s+(v=s&(l=e<<3&-8&v))|0)|l,r|(s>>>0<v>>>0?u+1|0:u),P),u=0-(A=A>>>31^f)|0,s=r-(u&=r<<1)|0,r=((n=g)-(((e=n<<1|r>>>31)&(c=0-((0!=(0|A))+c|0)|0))+(r>>>0<u>>>0)|0)|0)+a|0,e=0!=(0|(r=(A=s+i|0)>>>0<s>>>0?r+1|0:r)),n=r,r=A,A=e?r:0,e=((n=(r=e?n:r)>>>0>65535)<<4)+(c=(e<<5)+t|0)|0,c=r,u=r<<16|A>>>16,r=n?A:A<<16,c=((n=(A=n?c:u)>>>0>16777215)<<3)+e|0,u=A,e=A<<8|r>>>24,A=n?r:r<<8,e=(r=n?u:e)>>>0>268435455,n=r,r=r<<4|A>>>28,A=e?A:A<<4,e=((n=(r=e?n:r)>>>0>1073741823)<<1)+(c=(e<<2)+c|0)|0,c=r,u=r<<2|A>>>30,r=n?A:A<<2,c=((n=(A=n?c:u)>>>31|0)+e|0)-1132|0,A^=(A^(e=A<<1|r>>>31))&(u=0-!n|0),u=0,fr(f,c,(511&(A|=u=(n=511+(511&(r^=(n=n-1|0)&(r^r<<1)))|0)>>>0<511?u+1|0:u))<<23|(r|=n)>>>9,u=A>>>9|0)}function p(r,A,n,e,t,f,a,o,u,s,l){var P,v,w,y,g,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0;for(w=(C=(y=(d=(v=1<<s)<<2)+l|0)+d|0)+((P=t+1|0)<<s<<2)|0,g=f<<2;(0|P)!=(0|B);){for(f=c(B,12),p=Cr(t,D=i[f+18176>>2],h=xr(D),k=zr(D,h)),V(l,y,s,i[f+18180>>2],D,h),b=0;(0|b)!=(0|v);)i[(f=b<<2)+w>>2]=rA(i[f+a>>2],D),b=b+1|0;for(G(w,1,l,s,D,h),b=0,f=e,j=d=(B<<2)+C|0;(0|b)!=(0|v);)i[j>>2]=Or(f,t,D,h,k,p),b=b+1|0,j=(P<<2)+j|0,f=f+g|0;for(G(d,P,l,s,D,h),b=0,f=d;(0|b)!=(0|v);)i[f>>2]=vr(vr(i[(b<<2)+w>>2],i[f>>2],D,h),k,D,h),b=b+1|0,f=(P<<2)+f|0;Y(d,P,y,s,D,h),B=B+1|0}for(m(C,P,P,v,1,w),f=0,l=n<<2;(0|f)!=(0|v);){e=r,a=0,s=0;r:if(P)for(d=A>>>0<o>>>0?o:A,b=31-u|0,t=0-(i[((P<<2)+C|0)-4>>2]>>>30|0)>>>1|0,r=o;;){if((0|r)==(0|d))break r;n=t,(D=r-o|0)>>>0<P>>>0&&(n=i[(D<<2)+C>>2]),a=(i[(D=e+(r<<2)|0)>>2]-(n<<u&2147483647|s)|0)+a|0,i[D>>2]=2147483647&a,a>>=31,r=r+1|0,s=n>>>b|0}f=f+1|0,C=(P<<2)+C|0,r=e+l|0}}function m(r,A,n,e,t,f){var a,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0;for(i[f>>2]=2147473409,a=A>>>0>1?A:1,u=1;(0|u)!=(0|a);){for(o=c(u,12),h=i[o+18184>>2],y=0,C=zr(v=i[o+18176>>2],D=xr(v)),l=r;(0|e)!=(0|y);){for(o=0,B=vr(h,Nr(i[(u<<2)+l>>2],mr(l,u,v,D,C),v),v,D),P=0;(0|u)!=(0|P);)s=0,s=(o=(d=i[(b=(w=P<<2)+l|0)>>2])+o|0)>>>0<d>>>0?1:s,w=or(B,0,i[f+w>>2],0),s=g+s|0,s=(o=w+o|0)>>>0<w>>>0?s+1|0:s,i[b>>2]=2147483647&o,o=(2147483647&s)<<1|o>>>31,P=P+1|0;i[(u<<2)+l>>2]=o,y=y+1|0,l=(n<<2)+l|0}i[(u<<2)+f>>2]=ir(f,u,v),u=u+1|0}r:if(t)for(l=0,v=n<<2;;){if((0|e)==(0|l))break r;for(n=0,u=0,t=A;t;)n=(s=n)|(P=(1&n)-1|0)&((n=(u<<30|(o=i[(n=(t=t-1|0)<<2)+f>>2])>>>1)-i[r+n>>2]|0)>>31|0-n>>>31),u=1&o;for(t=0,u=0-(n>>>31|0)|0,n=0;(0|A)!=(0|n);)o=(s=t)+((t=i[(P=(o=n<<2)+r|0)>>2])-i[f+o>>2]|0)|0,i[P>>2]=t^u&(t^2147483647&o),t=o>>31,n=n+1|0;l=l+1|0,r=r+v|0}}function S(r,A){var n,e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0;for(e=(n=1<<A)>>>1|0,D=n,c=1,b=A;b>>>0>=2;){for(P=c<<1,D=D>>>1|0,o=0,d=0;o>>>0<e>>>0;){for(z=o+c|0,h=i[(t=1472+(D+d<<4)|0)>>2],C=i[t+4>>2],B=qr(i[t+8>>2],i[t+12>>2]),k=g,t=o;t>>>0<z>>>0;)s=i[(f=a=(t+e<<3)+r|0)>>2],l=i[f+4>>2],w=i[(v=((f=t+c|0)+e<<3)+r|0)>>2],y=i[v+4>>2],E=j(p=i[(u=(t<<3)+r|0)>>2],m=i[u+4>>2],S=i[(f=(f<<3)+r|0)>>2],T=i[f+4>>2]),Q=g,I=j(s,l,w,y),i[u>>2]=E,i[u+4>>2]=Q,i[a>>2]=I,i[a+4>>2]=g,a=Gr(p,m,S,T),u=g,s=Gr(s,l,w,y),l=g,w=Gr(R(a,u,h,C),g,R(s,l,B,k),g),y=g,a=j(R(a,u,B,k),g,R(s,l,h,C),g),i[f>>2]=w,i[f+4>>2]=y,i[v>>2]=a,i[v+4>>2]=g,t=t+1|0;o=o+P|0,d=d+1|0}b=b-1|0,c=P}r:if(A)for(c=i[(A=17856+(A<<3)|0)>>2],P=i[A+4>>2],t=0;;){if((0|t)==(0|n))break r;o=R(i[(A=(t<<3)+r|0)>>2],i[A+4>>2],c,P),i[A>>2]=o,i[A+4>>2]=g,t=t+1|0}}function T(r,A,n){var e,t,i,u=0,c=0,s=0,l=0,P=0,v=0,y=0,g=0;for(w=e=w-144|0,l=1,i=(t=o[674])+1024|0;;){if((0|u)==(0|i)){for(;;){if(P=0,u=0,l>>>0>t>>>0){w=e+144|0;break}for(;(0|u)!=(0|i);)r=(u<<1)+A|0,u>>>0<1024||(r=(u-1024<<1)+n|0,u>>>0<2048||(r=((u<<1)+e|0)-4080|0)),v=((c=o[r>>1])>>>15|0)-1|0,u>>>0>=l>>>0&&(y=r,g=c,(s=u-l|0)>>>0<1024?r=(s<<1)+A|0:(r=(s-1024<<1)+n|0,s>>>0<2048||(r=((s<<1)+e|0)-4080|0)),c=0-(511+(u-P&l)>>>9|0)&v&((r=o[(s=r)>>1])^c),f[y>>1]=g^c,f[s>>1]=r^c),P=P-v|0,u=u+1|0;l<<=1}break}F(e+14|0,2,r),c=((c=a[e+15|0]|a[e+14|0]<<8)-61445>>>31|0)-1|(s=(s=c-((c-24578>>>31|0)-1&24578)|0)-((s-24578>>>31|0)-1&24578)|0)-((s-12289>>>31|0)-1&12289),u>>>0<1024?f[(u<<1)+A>>1]=c:u>>>0<2048?f[(u-1024<<1)+n>>1]=c:f[((u<<1)+e|0)-4080>>1]=c,u=u+1|0}}function z(r,A,n){var e,t=0,f=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0;for(e=i[r>>2];;){r:{if(u=0,r=0,f=o=i[e+204>>2],!(!(f=(c=n+(t=i[e+200>>2])|0)>>>0<n>>>0?f+1|0:f)&c>>>0<136)){for(;!r&u>>>0<(f=136-t|0)>>>0;)o=c=(f=t)+u|0,c=i[4+(f=e+(-8&c)|0)>>2],v=l=i[f>>2],l=a[A+u|0],o=31&(t=o<<3),(63&t)>>>0>=32?(t=l<<o,o=0):(t=(1<<o)-1&l>>>32-o,o=l<<o),i[f>>2]=v^o,i[f+4>>2]=t^c,r=(t=u+1|0)?r:r+1|0,u=t,t=i[e+200>>2],o=i[e+204>>2];i[e+200>>2]=0,i[e+204>>2]=0,b(e),A=A+f|0,n=n-f|0;continue}for(;;){if(!s&(0|n)==(0|P))break r;u=r=(f=i[e+200>>2])+P|0,f=i[4+(r=e+(-8&r)|0)>>2],o=c=i[r>>2],c=a[A+P|0],t=31&(u<<=3),(63&u)>>>0>=32?(u=c<<t,t=0):(u=(1<<t)-1&c>>>32-t,t=c<<t),i[r>>2]=o^t,i[r+4>>2]=f^u,r=s,P=s=P+1|0,s=r=s?r:r+1|0}}break}r=i[e+204>>2],A=(A=n)+(n=i[e+200>>2])|0,i[e+200>>2]=A,i[e+204>>2]=A>>>0<n>>>0?r+1|0:r}function E(r,A){var n,e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0;for(e=A>>>0>1?A:1,c=2,D=n=1<<A>>>1|0,b=1;(0|b)!=(0|e);){for(E=c>>>1|0,d=D>>>1|0,s=0,l=0;(0|l)!=(0|E);){for(Q=s+d|0,h=i[(A=1472+(c+l<<4)|0)>>2],C=i[A+4>>2],B=i[A+8>>2],k=i[A+12>>2],A=s;A>>>0<Q>>>0;)P=i[(t=f=(A+n<<3)+r|0)>>2],p=i[t+4>>2],m=i[(t=a=(A<<3)+r|0)>>2],S=i[t+4>>2],o=i[(v=((t=A+d|0)+n<<3)+r|0)>>2],u=i[v+4>>2],T=Gr(R(w=i[(t=(t<<3)+r|0)>>2],y=i[t+4>>2],h,C),g,R(o,u,B,k),g),z=g,o=j(R(w,y,B,k),g,R(o,u,h,C),g),u=g,w=j(m,S,T,z),y=g,I=j(P,p,o,u),i[a>>2]=w,i[a+4>>2]=y,i[f>>2]=I,i[f+4>>2]=g,f=Gr(m,S,T,z),a=g,P=Gr(P,p,o,u),i[t>>2]=f,i[t+4>>2]=a,i[v>>2]=P,i[v+4>>2]=g,A=A+1|0;s=s+D|0,l=l+1|0}c<<=1,b=b+1|0,D=d}}function Q(r,A,n,e){var t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0;for(s=i[n+4>>2],i[r>>2]=i[n>>2],i[r+4>>2]=s,w=i[4+(t=n+((s=(e=1<<e)>>>1|0)<<3)|0)>>2],i[A>>2]=i[t>>2],i[A+4>>2]=w,w=e>>>2|0,e=0;(0|e)!=(0|w);)t=i[(o=((f=e<<1)+s<<3)+n|0)>>2],o=i[o+4>>2],f=i[(u=((a=1|f)+s<<3)+n|0)>>2],u=i[u+4>>2],y=j(P=i[(c=(e<<4)+n|0)>>2],c=i[c+4>>2],v=i[(a=(a<<3)+n|0)>>2],a=i[a+4>>2]),l=g,D=j(t,o,f,u),h=g,i[(d=(b=e<<3)+r|0)>>2]=kr(y,l),i[d+4>>2]=g,i[(l=(y=e+w<<3)+r|0)>>2]=kr(D,h),i[l+4>>2]=g,a=Gr(P,c,v,a),c=g,o=Gr(t,o,f,u),f=g,u=qr(i[8+(t=1472+(e+s<<4)|0)>>2],i[t+12>>2]),P=g,l=Gr(R(a,c,v=i[t>>2],t=i[t+4>>2]),g,R(o,f,u,P),g),D=g,t=j(R(a,c,u,P),g,R(o,f,v,t),g),o=g,i[(f=A+b|0)>>2]=kr(l,D),i[f+4>>2]=g,i[(f=A+y|0)>>2]=kr(t,o),i[f+4>>2]=g,e=e+1|0}function I(r,A,n,e,t,f,a,o,u,s,l,P,v){var w,y,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0;for(D=i[A>>2],k=i[r>>2],w=2147483647&c(c(D,P)+c(s,k)|0,t),y=2147483647&c(c(o,D)+c(f,k)|0,t),t=0;(0|e)!=(0|t);)b=or(j=i[(k=t<<2)+r>>2],0,s,l)+C|0,D=d+g|0,D=C>>>0>b>>>0?D+1|0:D,C=or(p=i[A+k>>2],0,P,v),D=g+D|0,D=C>>>0>(d=C+b|0)>>>0?D+1|0:D,C=(b=or(w,0,m=i[n+k>>2],0))+d|0,d=g+D|0,d=C>>>0<b>>>0?d+1|0:d,b=or(f,a,j,0)+B|0,D=h+g|0,D=B>>>0>b>>>0?D+1|0:D,B=or(o,u,p,0),D=g+D|0,D=B>>>0>(h=B+b|0)>>>0?D+1|0:D,B=(b=or(y,0,m,0))+h|0,h=g+D|0,h=B>>>0<b>>>0?h+1|0:h,t&&(i[(D=k-4|0)+r>>2]=2147483647&B,i[A+D>>2]=2147483647&C),t=t+1|0,C=(2147483647&d)<<1|C>>>31,d>>=31,B=(2147483647&h)<<1|B>>>31,h>>=31;i[(t=(e<<2)-4|0)+r>>2]=B,i[A+t>>2]=C,nr(r,e,n,h>>>31|0),nr(A,e,n,d>>>31|0)}function x(r,A,n,e){var t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0;for(s=i[A+4>>2],i[r>>2]=i[A>>2],i[r+4>>2]=s,w=i[n+4>>2],i[(t=((s=(e=1<<e)>>>1|0)<<3)+r|0)>>2]=i[n>>2],i[t+4>>2]=w,w=e>>>2|0,e=0;(0|e)!=(0|w);)y=i[(f=(t=e+w<<3)+A|0)>>2],f=i[f+4>>2],D=i[(a=(o=e<<3)+A|0)>>2],a=i[a+4>>2],l=i[(t=n+t|0)>>2],P=i[t+4>>2],o=R(u=i[(t=n+o|0)>>2],c=i[t+4>>2],b=i[(t=1472+(e+s<<4)|0)>>2],v=i[t+4>>2]),d=i[t+8>>2],h=i[t+12>>2],t=Gr(o,g,R(l,P,d,h),g),o=g,l=j(R(u,c,d,h),g,R(l,P,b,v),g),P=g,u=j(D,a,t,o),c=g,b=j(y,f,l,P),i[(v=(e<<4)+r|0)>>2]=u,i[v+4>>2]=c,i[(c=((u=e<<1)+s<<3)+r|0)>>2]=b,i[c+4>>2]=g,t=Gr(D,a,t,o),D=g,y=Gr(y,f,l,P),i[(a=((f=1|u)<<3)+r|0)>>2]=t,i[a+4>>2]=D,i[(t=(f+s<<3)+r|0)>>2]=y,i[t+4>>2]=g,e=e+1|0}function U(r,A,n,e,t,f,a,o,u,s){var l,P,v,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0;for(P=(l=1<<s)-1|0,v=f<<2;(0|d)!=(0|l);){for(B=(c(n,d)<<2)+r|0,f=0,s=0-i[(d<<2)+a>>2]|0,b=e;(0|f)!=(0|l);){k=b,h=s,y=0,D=0;r:if(t)for(p=A>>>0<o>>>0?o:A,m=31-u|0,S=0-(i[((t<<2)+k|0)-4>>2]>>>30|0)>>>1|0,T=h>>31,s=o;;){if((0|s)==(0|p))break r;b=S,(w=s-o|0)>>>0<t>>>0&&(b=i[(w<<2)+k>>2]),C=y>>31,j=y,C=(y=y+i[(w=(s<<2)+B|0)>>2]|0)>>>0<j>>>0?C+1|0:C,j=w,w=or(h,T,b<<u&2147483647|D,0)+y|0,D=C+g|0,D=y>>>0>w>>>0?D+1|0:D,i[j>>2]=2147483647&w,y=(2147483647&D)<<1|w>>>31,s=s+1|0,D=b>>>m|0}B=(s=(f+d|0)==(0|P))?r:(n<<2)+B|0,s=s?0-h|0:h,f=f+1|0,b=k+v|0}d=d+1|0}}function F(r,A,n){var t,f=0,a=0,o=0,u=0,c=0,s=0,l=0;t=i[n>>2],a=A;r:{for(;;){if(f=i[t+200>>2],u=i[t+204>>2],!o&(0|a)==(0|c)){n=A;break r}if(!((0|o)==(0|u)&f>>>0>(n=c)>>>0|o>>>0<u>>>0))break;l=r+n|0,s=i[(f=(-8&(u=s=(136-f|0)+c|0))+t|0)>>2],f=i[f+4>>2],n=31&(u<<=3),e[0|l]=(63&u)>>>0>=32?f>>>n|0:((1<<n)-1&f)<<32-n|s>>>n,o=(n=c+1|0)?o:o+1|0,c=n}a=c}for(c=f-a|0,o=u-((f>>>0<a>>>0)+0|0)|0,A=A-n|0,r=r+n|0;i[t+200>>2]=c,i[t+204>>2]=o,A;){for(b(t),n=0;!(A>>>0<=n>>>0|n>>>0>=136);)c=i[(a=(-8&n)+t|0)>>2],o=i[a+4>>2],a=31&(f=n<<3&56),e[r+n|0]=(63&f)>>>0>=32?o>>>a|0:((1<<a)-1&o)<<32-a|c>>>a,n=n+1|0;A=A-n|0,r=r+n|0,c=136-n|0,o=0}}function R(r,A,n,e){var t,f,i,a=0,o=0,u=0,c=0,s=0;return f=(A^e)>>>31|0,s=or(u=134217727&((33554431&e)<<7|n>>>25)|134217728,o=a,a=134217727&((33554431&A)<<7|r>>>25)|134217728,0),i=g,a=or(c=33554431&n,0,a,o),n=g,o=or(t=33554431&r,r=0,u,o),u=g,c=or(t,r,c,r),r=s,u=((33554431&n)<<7|a>>>25)+((33554431&u)<<7|o>>>25)+((s=((33554431&a)+((33554431&g)<<7|c>>>25)|0)+(33554431&o)|0)>>>25)|0,a=i,a=(o=r+u|0)>>>0<u>>>0?a+1|0:a,u=o,n=((o=a>>>23|0)+((r=A>>>20&2047)+(A=e>>>20&2047)|0)|0)-2100|0,A=0-(r=(r+2047&A+2047)>>>11|0)|0,e=0-(0!=(0|r))|0,fr(f,n,(0-o&((1&(r=33554431+(33554431&(c|s))>>>25|u)|(1&a)<<31|u>>>1)^r)^r)&A,(a^0-(0!=(0|o))&(a^a>>>1))&e)}function O(r,A){var n,e=0,t=0,f=0,i=0,a=0,o=0;return n=i=A>>>31|0,i=r^(e=t=A>>31),r=(A^e)+a|0,r=(t=n+i|0)>>>0<i>>>0?r+1|0:r,i=t,t=(e=0!=(0|r))<<5,a=r,o=(r=e?r:i)<<16|(A=e?i:0)>>>16,t=((f=(r=(e=r>>>0>65535)?r:o)>>>0>16777215)<<3)+(t=(e<<4)+t|0)|0,e=r<<8|(A=e?A:A<<16)>>>24,A=f?A:A<<8,e=((f=(r=f?r:e)>>>0>268435455)<<2)+t|0,t=r,r=r<<4|A>>>28,A=f?A:A<<4,t=(f=(r=f?t:r)>>>0>1073741823)?A:A<<2,e=(((f<<1)+e|0)+(A=(r=f?r:r<<2|A>>>30)>>>31|0)|0)-54|0,i=(f=!(a|i))?0:e,a=A-1|0,A=(r^(e=r<<1|t>>>31))&(A=0-!A|0)^r,o=0,o=(r=511+(511&(a=a&(t^t<<1)^t))|0)>>>0<511?o+1|0:o,r|=a,e=(A|=o)>>>9|0,fr(n,i,f?0:(511&A)<<23|r>>>9,f?0:e)}function H(r){var A=0,n=0,e=0,t=0,i=0,a=0,u=0,c=0,s=0,l=0,P=0,v=0;e=1024,n=1;r:for(;;){if(e>>>0<2){for(n=4091,A=1024;;){if(A>>>0<2){for(A=0;1024!=(0|A);)f[(t=(A<<1)+r|0)>>1]=Mr(o[t>>1],n),A=A+1|0;break}A=A>>>1|0,n=(0-(1&n)&12289)+n>>>1|0}return}for(t=n<<1,e=e>>>1|0,a=0,u=0;;){if((0|e)==(0|u)){n=t;continue r}for(l=n+a|0,P=o[28976+(e+u<<1)>>1],A=a;A>>>0<l>>>0;)c=o[(i=(A<<1)+r|0)>>1],v=i,s=o[(i=(A+n<<1)+r|0)>>1],f[v>>1]=Vr(c,s),f[i>>1]=Mr(Wr(c,s),P),A=A+1|0;a=t+a|0,u=u+1|0}}}function M(r,A){for(var n=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0;1024!=(0|c);){r:{for(;;){for(s=0,t=0;!s;){for(n=lr(r),a=f=g,f=f>>>31|0,P=lr(r),v=2147483647&g,a=(2147483647&a)-((n>>>0<770878296)+298923992|0)>>>31|0,n=1,o=0;27!=(0|n);)w=o,o=i[(u=17952+(n<<3)|0)>>2],o=w|0-((u=!(v-(i[u+4>>2]+(o>>>0>P>>>0)|0)>>>31|0))&(1^a))&n,n=n+1|0,a|=u;t=(t+f|0)+(0-f^o)|0,s=s+1|0}if(!(t+127>>>0>254)){if(n=1&t,1023==(0|c)){if((0|n)==(0|l))continue;break r}break}}l^=n}e[A+c|0]=t,c=c+1|0}}function Y(r,A,n,e,t,f){var a=0,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,g=0,D=0,b=0,d=0;r:if(e){o=y=1<<e,s=1;A:for(;;){if(o>>>0>=2)for(b=c(A,s),g=s<<1,o=o>>>1|0,l=0,v=0;;){if((0|o)==(0|l)){s=g;continue A}for(P=(a=(c(A,v)<<2)+r|0)+(b<<2)|0,d=i[(o+l<<2)+n>>2],w=0;(0|s)!=(0|w);)u=i[a>>2],D=i[P>>2],i[a>>2]=Xr(u,D,t),i[P>>2]=vr(Nr(u,D,t),d,t,f),w=w+1|0,P=(u=A<<2)+P|0,a=a+u|0;v=v+g|0,l=l+1|0}break}for(n=-2147483648>>>e|0,a=0,A<<=2;;){if((0|a)==(0|y))break r;i[r>>2]=vr(i[r>>2],n,t,f),a=a+1|0,r=r+A|0}}}function J(r,A,n,e,t){var f,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0;f=1<<t;r:{if(!n)for(t=0;;){if((0|t)==(0|f))break r;i[(A=(t<<3)+r|0)>>2]=0,i[A+4>>2]=0,t=t+1|0}for(v=n-1<<2,w=e<<2;;){if((0|u)==(0|f))break r;for(t=0,P=1&(c=0-(i[A+v>>2]>>>30|0)|0),y=c>>>1|0,e=0,s=1072693248,a=0,l=0;(0|n)!=(0|t);)o=t<<2,t=t+1|0,P=(o=(i[A+o>>2]^y)+P|0)>>>31|0,a=j(a,l,R(O(a=(2147483647&o)-(c&o<<1)|0,a>>31),g,e,s),g),l=g,e=R(e,s,0,1105199104),s=g;i[(e=(u<<3)+r|0)>>2]=a,i[e+4>>2]=l,u=u+1|0,A=A+w|0}}}function L(r,A,n,t,f){var a,o=0,u=0;for(a=r+4096|0;1024!=(0|o);)i[(u=o<<2)+r>>2]=rA(e[A+o|0],2147473409),i[a+u>>2]=rA(e[n+o|0],2147473409),o=o+1|0;if(!(!f|t))return V(A=a+4096|0,A+4096|0,10,383167813,2147473409,n=xr(2147473409)),G(r,1,A,10,2147473409,n),void G(a,1,A,10,2147473409,n);if(t){if(1==(0|t))return void k(r,10,0,0,f);for(k(r,10,0,0,1),A=t-1|0,o=1;(0|A)!=(0|o);)k(r,10-o|0,o,1,1),o=o+1|0;k(r,11-t|0,A,1,f)}}function V(r,A,n,e,t,f){var a,u,c,s=0,l=0,P=0,v=0;for(s=n>>>0>10?n:10,l=vr(e,v=zr(t,f),t,f),e=n;(0|e)!=(0|s);)e=e+1|0,l=vr(l,l,t,f);for(u=10-n|0,e=0,a=l,s=l=AA(t),c=t-2|0,P=30;(0|P)>=0;)s=vr(s,s,t,f),s=0-(c>>>P&1)&(vr(s,a,t,f)^s)^s,P=P-1|0;for(P=vr(v,vr(s,1,t,f),t,f),s=l;!(e>>>n|0);)v=o[24640+(e<<u<<1)>>1]<<2,i[v+r>>2]=l,i[A+v>>2]=s,e=e+1|0,l=vr(l,a,t,f),s=vr(s,P,t,f)}function G(r,A,n,e,t,f){var a=0,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,g=0,D=0,b=0;r:if(e)for(a=1,l=y=1<<e;;){if(a>>>0>=y>>>0)break r;for(D=c(P=l>>>1|0,A),u=0,v=0;(0|a)!=(0|u);){for(s=(e=(c(A,v)<<2)+r|0)+(D<<2)|0,b=i[(a+u<<2)+n>>2],w=0;(0|w)!=(0|P);)o=i[e>>2],g=vr(i[s>>2],b,t,f),i[e>>2]=Xr(o,g,t),i[s>>2]=Nr(o,g,t),w=w+1|0,s=(o=A<<2)+s|0,e=e+o|0;v=l+v|0,u=u+1|0}a<<=1,l=P}}function X(r,A){var n,e=0,t=0,f=0,i=0,a=0,o=0,u=0,c=0;for(n=1048575&A|1048576,t=1048576;55!=(0|i);)i=i+1|0,a=f,c=(f=c|1&(u=(o=t-((r>>>0>e>>>0)+n|0)>>>31|0)-1|0))<<1,f=a<<1|f>>>31,a=(t=t-(((o=0-!o|0)&n)+((a=r&u)>>>0>e>>>0)|0)|0)<<1|(e=e-a|0)>>>31,e<<=1,t=a;return fr((1072693248^A)>>>31|0,968+((i=f>>>23|0)-(A>>>20&2047)|0)|0,(e=(t=0!=(e|t))|c)^((t|(1&f)<<31|c>>>1)^e)&(u=0-i|0),0-(0!=(0|i))&(f>>>1^f)^f)}function Z(r,A,n,t){var f=0,i=0,o=0,u=0,c=0;u=-1^(i=-1<<t-1);r:{for(;;){if(1024!=(0|f)){if((0|i)>=(0|(c=e[n+f|0])))break r;if(f=f+1|0,(0|u)>=(0|c))continue;break r}break}if(i=7+(t<<10)>>>3|0,r){if(A>>>0<i>>>0)break r;for(u=-1<<t^-1,A=0,f=0;1024!=(0|o);){for(A=u&a[n+o|0]|A<<t,f=t+f|0;f>>>0>=8;)f=f-8|0,e[0|r]=A>>>f,r=r+1|0;o=o+1|0}f&&(e[0|r]=A<<8-f)}o=i}return o}function W(r,A,n){var e=0,t=0,f=0,i=0;return t=31&(f=i=63&n),f=f>>>0>=32?-1>>>t|0:(e=-1>>>t|0)|(1<<t)-1<<32-t,f&=r,e&=A,t=31&i,i>>>0>=32?(e=f<<t,i=0):(e=(1<<t)-1&f>>>32-t|e<<t,i=f<<t),f=e,e=31&(t=0-n&63),t>>>0>=32?(e=-1<<e,n=0):e=(n=-1<<e)|(1<<e)-1&-1>>>32-e,r&=n,A&=e,e=31&t,t>>>0>=32?(n=0,r=A>>>e|0):(n=A>>>e|0,r=((1<<e)-1&A)<<32-e|r>>>e),g=n|f,r|i}function N(r,A,n){var e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0;for(e=1<<n>>>1|0,n=0;(0|n)!=(0|e);)o=i[(a=(f=n+e<<3)+A|0)>>2],a=i[a+4>>2],c=i[(f=r+f|0)>>2],s=i[f+4>>2],w=Gr(R(l=i[(u=(t=n<<3)+r|0)>>2],P=i[u+4>>2],v=i[(t=A+t|0)>>2],t=i[t+4>>2]),g,R(c,s,o,a),g),y=g,o=j(R(l,P,o,a),g,R(c,s,v,t),g),i[u>>2]=w,i[u+4>>2]=y,i[f>>2]=o,i[f+4>>2]=g,n=n+1|0}function q(r){var A=0,n=0,e=0,t=0,i=0,a=0,u=0,c=0,s=0,l=0,P=0,v=0;for(A=1,a=1024;A>>>0<1024;){for(u=a>>>1|0,t=0,i=0;(0|A)!=(0|i);){for(l=t+u|0,P=o[26928+(A+i<<1)>>1],n=t;n>>>0<l>>>0;)c=o[(e=(n<<1)+r|0)>>1],v=e,s=Mr(o[(e=(n+u<<1)+r|0)>>1],P),f[v>>1]=Vr(c,s),f[e>>1]=Wr(c,s),n=n+1|0;t=t+a|0,i=i+1|0}A<<=1,a=u}}function K(r,A){for(var n=0,e=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0;512!=(0|f);)o=i[(a=(n=f+512<<3)+r|0)>>2],u=i[a+4>>2],c=i[(t=(e=f<<3)+A|0)>>2],t=i[t+4>>2],s=i[(e=r+e|0)>>2],l=i[e+4>>2],n=qr(i[(n=A+n|0)>>2],i[n+4>>2]),P=g,v=Gr(R(s,l,c,t),g,R(o,u,n,P),g),w=g,o=j(R(s,l,n,P),g,R(o,u,c,t),g),i[e>>2]=v,i[e+4>>2]=w,i[a>>2]=o,i[a+4>>2]=g,f=f+1|0}function _(r,A,n,t){var f=0,i=0,o=0,u=0,c=0,s=0,l=0,P=0;r:if(!((o=7+(A<<10)>>>3|0)>>>0>t>>>0))for(c=-1<<A^-1,s=0-(u=1<<A-1)|0,t=0;;){A:{if(f>>>0<1024)for(t=t+8|0,l=n+1|0,i=a[0|n]|i<<8;;){if(A>>>0>t>>>0|f>>>0>=1024)break A;if(n=i>>>(t=t-A|0)&c,(0|(n|=0-(n&u)))==(0|s))break r;e[r+f|0]=n,f=f+1|0}P=(-1<<t^-1)&i?0:o;break r}n=l}return P}function $(r,A,n,e){var t,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0;for(t=1<<e>>>1|0,e=0;(0|e)!=(0|t);)c=i[(f=(a=e+t<<3)+n|0)>>2],s=i[f+4>>2],l=i[(o=(f=e<<3)+n|0)>>2],o=i[o+4>>2],P=i[(a=A+a|0)>>2],a=i[a+4>>2],u=r+f|0,f=A+f|0,i[u>>2]=X(j(j(_r(i[f>>2],i[f+4>>2]),g,_r(P,a),g),g,j(_r(l,o),g,_r(c,s),g),g),g),i[u+4>>2]=g,e=e+1|0}function rr(r,A){var n,e=0,t=0,f=0;return e=A<<10|r>>>22,t=cr(r=(f=(2046&(t=A>>>20|0))>>>0>1021)?r<<10&-1024:0,f=f?1073741823&e|1073741824:0,63^(n=61-t&63)),e=g,f=wr(r,f,n),r=200>>>(e>>>29|((r=t)|0-(r|536870911&e))>>>31)&1,e=g,e=r>>>0>(t=f+r|0)>>>0?e+1|0:e,f=t,e^=t=r=A>>31,g=e=(r=(f^r)+(A=A>>>31|0)|0)>>>0<A>>>0?e+1|0:e,r}function Ar(r){var A,n,e,t=0,f=0;r=i[r>>2],t=i[r+200>>2],f=i[(A=(-8&t)+r|0)>>2],n=i[A+4>>2],e=f,t=31&(f=t<<3),(63&f)>>>0>=32?(f=31<<t,t=0):(f=(1<<t)-1&31>>>32-t,t=31<<t),i[A>>2]=e^t,i[A+4>>2]=f^n,t=-2147483648^i[r+132>>2],i[r+128>>2]=i[r+128>>2],i[r+132>>2]=t,i[r+200>>2]=0,i[r+204>>2]=0}function nr(r,A,n,e){for(var t=0,f=0,a=0,o=0,u=0;(0|A)!=(0|t);)a=i[(f=t<<2)+r>>2]-(i[n+f>>2]+a|0)>>>31|0,t=t+1|0;for(t=0,f=0-e>>>1|0,a=0-(!a|e)|0;(0|A)!=(0|t);)e=i[(u=(o=t<<2)+r|0)>>2]-((a&(f^i[n+o>>2]))+e|0)|0,i[u>>2]=2147483647&e,e=e>>>31|0,t=t+1|0}function er(r,A,n){var e,t=0,f=0;for(e=1<<n>>>1|0,n=0;(0|n)!=(0|e);)f=(t=n<<3)+r|0,t=A+t|0,i[f>>2]=R(i[f>>2],i[f+4>>2],i[t>>2],i[t+4>>2]),i[f+4>>2]=g,t=R(i[(f=(n+e<<3)+r|0)>>2],i[f+4>>2],i[t>>2],i[t+4>>2]),i[f>>2]=t,i[f+4>>2]=g,n=n+1|0}function tr(r,A){var n,e,t,f=0,i=0;return n=A<<10|r>>>22,e=r<<10&-1024,i=r=A>>31,f=(2046&(r=A>>>20|0))>>>0>1021,r=i^(t=wr(e,1073741823&n|1073741824,61-r&63),f?t:0),i^=f?g:0,A=(f=A>>>31|0)+r|0,r=i,g=r=A>>>0<f>>>0?r+1|0:r,A}function fr(r,A,n,e){var t,f=0;return f=r<<31,A=n&(r=(t=A+1076|0)>>>31|0)-1,n=e&0-!r,e=200>>>(7&A)&1,r=(r=(t&0-(n>>>22|0))<<20)+(f|=n>>>2)|0,r=(A=(A=(3&n)<<30|A>>>2)+(n=0)|0)>>>0<n>>>0?r+1|0:r,g=r=(A=(n=A)+e|0)>>>0<n>>>0?r+1|0:r,A}function ir(r,A,n){var e,t=0,f=0,a=0,o=0;for(e=n,n=0;(0|A)!=(0|n);)o=or(e,0,i[(a=(n<<2)+r|0)>>2],0),f=g,f=(t=o+t|0)>>>0<o>>>0?f+1|0:f,i[a>>2]=2147483647&t,n=n+1|0,t=(2147483647&f)<<1|t>>>31;return t}function ar(r){for(var A=0,n=0,e=0,t=0,f=0;512!=(0|n);)t=i[(A=e=(n+512<<3)+r|0)>>2],f=i[A+4>>2],i[(A=(n<<3)+r|0)>>2]=j(_r(i[A>>2],i[A+4>>2]),g,_r(t,f),g),i[A+4>>2]=g,i[e>>2]=0,i[e+4>>2]=0,n=n+1|0}function or(r,A,n,e){var t,f,i,a,o=0,u=0;return a=c(o=n>>>16|0,u=r>>>16|0),o=(65535&(u=((i=c(t=65535&n,f=65535&r))>>>16|0)+c(u,t)|0))+c(o,f)|0,g=(c(A,n)+a|0)+c(r,e)+(u>>>16)+(o>>>16)|0,65535&i|o<<16}function ur(r,A,n){var t,f=0,i=0,a=0;for(t=0-n|0;;){if(f>>>10|0)a=1;else if(!((0|t)>(0|(i=Zr((f<<2)+A|0)))|(0|n)<(0|i))){e[r+f|0]=i,f=f+1|0;continue}break}return a}function cr(r,A,n){var e,t,f=0;return e=(f=0-(n>>5)|0)>>31,t=f,f=A^(A^(f=r))&e,A=r^=t&r,(63&(r=n&=31))>>>0>=32?(n=A<<r,r=0):(n=(1<<r)-1&A>>>32-r|f<<r,r=A<<r),g=n,r}function sr(r){var A=0,n=0;for(A=r,r=D(208),i[A>>2]=r,r||(v(111),s());25!=(0|n);)i[(A=r+(n<<3)|0)>>2]=0,i[A+4>>2]=0,n=n+1|0;i[r+200>>2]=0,i[r+204>>2]=0}function lr(r){var A;return w=A=w-16|0,F(A+8|0,8,r),w=A+16|0,g=a[A+12|0]|a[A+13|0]<<8|a[A+14|0]<<16|a[A+15|0]<<24,a[A+8|0]|a[A+9|0]<<8|a[A+10|0]<<16|a[A+11|0]<<24}function Pr(r){var A,e;return(r=(A=i[7756])+(e=r+3&-4)|0)>>>0<=A>>>0&&e||r>>>0>(n.byteLength/65536|0)<<16>>>0&&!(0|P(0|r))?(i[8381]=48,-1):(i[7756]=r,A)}function vr(r,A,n,e){return r=or(A,0,r,0),e=or(n,0,2147483647&or(e,0,A=r,r=g),0),r=g+r|0,(r=((2147483647&(r=(A=A+e|0)>>>0<e>>>0?r+1|0:r))<<1|A>>>31)-n|0)+(r>>31&n)|0}function wr(r,A,n){var e=0;return r^=(r^A)&(e=0-(n>>5)|0),A^=A&e>>31,e=r,(63&(r=n&=31))>>>0>=32?(n=0,r=A>>>r|0):(n=A>>>r|0,r=((1<<r)-1&A)<<32-r|e>>>r),g=n,r}function yr(r,A,n){for(var e=0,t=0,f=0;!(f>>>n|0);)t=(e=f<<3)+r|0,e=A+e|0,i[t>>2]=j(i[t>>2],i[t+4>>2],i[e>>2],i[e+4>>2]),i[t+4>>2]=g,f=f+1|0}function gr(r,A,n){for(var e=0,t=0,f=0;!(f>>>n|0);)t=(e=f<<3)+r|0,e=A+e|0,i[t>>2]=Gr(i[t>>2],i[t+4>>2],i[e>>2],i[e+4>>2]),i[t+4>>2]=g,f=f+1|0}function Dr(r,A){var n=0,e=0;return A=Mr(A,10952),e=Mr(n=nA(A),A),n=nA(nA(nA(nA(nA(Mr(e,n)))))),e=Mr(n,e),n=Mr(e,n),Mr(Mr(nA(Mr(nA(nA(Mr(nA(nA(n)),e))),n)),A),r)}function br(r,A,n){var e,t=0,f=0;for(e=0-n>>>1|0;(0|A)!=(0|t);)n=(i[(f=(t<<2)+r|0)>>2]^e)+n|0,i[f>>2]=2147483647&n,t=t+1|0,n=n>>>31|0}function dr(r,A,n){var t=0;if(r>>>0<A>>>0)return Fr(r,A,n);if(n)for(t=r+n|0,A=A+n|0;A=A-1|0,e[0|(t=t-1|0)]=a[0|A],n=n-1|0;);return r}function hr(r,A,n,e,t){var f,a=0;for(f=A-1|0,A=0;!(A>>>f|0);)a=(A<<3)+r|0,i[(A<<2)+r>>2]=vr(vr(i[a>>2],i[a+4>>2],n,e),t,n,e),A=A+1|0}function Cr(r,A,n,e){var t,f=0,i=0;for(t=r-1|0,r=0,f=AA(A);(i=1<<r)>>>0<=t>>>0;)t&i&&(f=vr(f,e,A,n)),r=r+1|0,e=vr(e,e,A,n);return f}function Br(r,A,n,e){var t,f=0;return t=f=(A^e)>>31,((0|r)!=(0|(f=n&(-1^f)))|(0|A)!=(0|(n=e&(-1^t))))&(A&e)>>>31^(r>>>0<f>>>0&(0|A)<=(0|n)|(0|A)<(0|n))}function kr(r,A){var n,e=0,t=0;return n=e=A+-1048576|0,A=0,t=e=1+(e>>>20&2047)|0,g=(e=(A=e?A:A+1|0)>>>11|0)-!(A=(2047&A)<<21|t>>>11)&n,r&(A-1|0)}function jr(r,A){var n,e=0;for(A=(n=1<<A)>>>1|0;(0|A)!=(0|n);)i[(e=(A<<3)+r|0)>>2]=qr(i[e>>2],i[e+4>>2]),i[e+4>>2]=g,A=A+1|0}function pr(r,A){for(var n=0,t=0,f=0;(0|A)!=(0|t);)w=n=w-16|0,e[n+15|0]=0,f=0|l(31028,n+15|0,0),w=n+16|0,e[r+t|0]=f,t=t+1|0}function mr(r,A,n,e,t){for(var f=0;A;)f=Xr(vr(f,t,n,e),((f=i[((A=A-1|0)<<2)+r>>2]-n|0)>>31&n)+f|0,n);return f}function Sr(r,A){for(var n=0,t=0,f=0;!(n>>>10|0);)t=(n<<3)+r|0,f=e[A+n|0],i[t>>2]=O(f,f>>31),i[t+4>>2]=g,n=n+1|0}function Tr(r,A,n){for(var e=0,t=0;!(t>>>10|0);)i[(e=(t<<3)+r|0)>>2]=R(i[e>>2],i[e+4>>2],A,n),i[e+4>>2]=g,t=t+1|0}function zr(r,A){var n=0;return n=vr(n=Xr(n=AA(r),n,r),n,r,A),n=vr(n,n,r,A),n=vr(n,n,r,A),n=vr(n,n,r,A),(A=vr(n,n,r,A))+(0-(1&A)&r)>>>1|0}function Er(r){for(var A=0,n=0,t=0,f=0;!(n>>>10|0);)f=A,A=e[r+n|0],t|=A=f+c(A,A)|0,n=n+1|0;return t>>31|A}function Qr(r){for(var A=0,n=0;!(n>>>10|0);)i[(A=(n<<3)+r|0)>>2]=qr(i[A>>2],i[A+4>>2]),i[A+4>>2]=g,n=n+1|0}function Ir(r,A){for(var n=0,e=0,t=0;!(n>>>10|0);)f[(t=(e=n<<1)+r|0)>>1]=Mr(o[t>>1],o[A+e>>1]),n=n+1|0}function xr(r){var A=0;return A=c(A=2-r|0,2-c(r,A)|0),A=c(A,2-c(r,A)|0),A=c(A,2-c(r,A)|0),2147483647&c(A,c(r,A)-2|0)}function Ur(r){for(var A=0,n=0;!(A>>>10|0);)f[(n=(A<<1)+r|0)>>1]=Mr(o[n>>1],10952),A=A+1|0}function Fr(r,A,n){var t=0;if(n)for(t=r;e[0|t]=a[0|A],t=t+1|0,A=A+1|0,n=n-1|0;);return r}function Rr(r){var A,n=0;return A=(n=i[r+512>>2])+1|0,i[r+512>>2]=A,n=a[r+n|0],512==(0|A)&&C(r),n}function Or(r,A,n,e,t,f){return A?Nr(mr(r,A,n,e,t),0-(i[((A<<2)+r|0)-4>>2]>>>30|0)&f,n):0}function Hr(r,A){var n=0;if(A)for(n=r;e[0|n]=0,n=n+1|0,A=A-1|0;);return r}function Mr(r,A){return(r=((r=c(r,A))+c(65535&c(r,12287),12289)>>>16|0)-12289|0)+(r>>31&12289)|0}function Yr(r,A){var n=0;return(-1>>>(n=31&A)&r)<<n|((n=r)&-1<<(r=0-A&31))>>>r}function Jr(r,A){var n;return(((A=7&(n=A-r|0))?8-A|0:0)+n|0)+r|0}function Lr(r){return r-((r-1073736705>>>31|0)-1&2147473409)|0}function Vr(r,A){return(r=(r+A|0)-12289|0)+(r>>31&12289)|0}function Gr(r,A,n,e){return j(r,A,n,-2147483648^e)}function Xr(r,A,n){return(r=(r+A|0)-n|0)+(r>>31&n)|0}function Zr(r){return(r=i[r>>2])<<1&-2147483648|r}function Wr(r,A){return(r=r-A|0)+(r>>31&12289)|0}function Nr(r,A,n){return(r=r-A|0)+(r>>31&n)|0}function qr(r,A){return g=-2147483648^A,r}function Kr(){u[y>>2]>u[y+4>>2]&&s()}function _r(r,A){return R(r,A,r,A)}function $r(r){return(r>>31&12289)+r|0}function rA(r,A){return(r>>31&A)+r|0}function AA(r){return-2147483648-r|0}function nA(r){return Mr(r,r)}function eA(r){d(i[r>>2])}t(A=a,1024,\"AQAAAAAAAACCgAAAAAAAAIqAAAAAAACAAIAAgAAAAICLgAAAAAAAAAEAAIAAAAAAgYAAgAAAAIAJgAAAAAAAgIoAAAAAAAAAiAAAAAAAAAAJgACAAAAAAAoAAIAAAAAAi4AAgAAAAACLAAAAAAAAgImAAAAAAACAA4AAAAAAAIACgAAAAAAAgIAAAAAAAACACoAAAAAAAAAKAACAAAAAgIGAAIAAAACAgIAAAAAAAIABAACAAAAAAAiAAIAAAACAcmFuZG9tYnl0ZXMAbGlic29kaXVtL3NyYy9saWJzb2RpdW0vcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwBidWZfbGVuIDw9IFNJWkVfTUFYAAAICAgICAcHBgYFAAgICAgICAgICAg=\"),t(A,1330,\"QQBDAEcATQBWAGQAegCaAM0AHwE=\"),t(A,1360,\"o4MRdAQAAAAG/IxUNgAAAAoUv9xPAgAAReCdkx0XAACEb4/1DNAAAOOW9xxogAYA6g9bMNiCLQDQbwYOERERAQAPB1VVVVUFAP+BVVVVVRUAtAIAAAAAQABI//////9/AAAAAAAAAIA=\"),t(A,1495,\"\"),t(A,18176,\"\"),t(A,24448,\"AQAAAAEAAAACAAAAAgAAAAQAAAAHAAAADgAAABsAAAA1AAAAagAAANEAAAAAAAAAAgAAAAIAAAAFAAAABwAAAAwAAAAVAAAAKAAAAE4AAACdAAAANAE=\"),t(A,24544,\"BAAAAAAAAAALAAAAAQAAABgAAAABAAAAMgAAAAEAAABmAAAAAQAAAMoAAAACAAAAkQEAAAQAAAAaAwAABQAAACkGAAAIAAAAQgwAAA0AAACkGAAAGQ==\"),t(A,24643,\"AgABAAOAAIACgAGAA0AAQAJAAUADwADAAsABwAMgACACIAEgA6AAoAKgAaADYABgAmABYAPgAOAC4AHgAxAAEAIQARADkACQApABkANQAFACUAFQA9AA0ALQAdADMAAwAjABMAOwALACsAGwA3AAcAJwAXAD8ADwAvAB8AMIAAgCCAEIA4gAiAKIAYgDSABIAkgBSAPIAMgCyAHIAygAKAIoASgDqACoAqgBqANoAGgCaAFoA+gA6ALoAegDGAAYAhgBGAOYAJgCmAGYA1gAWAJYAVgD2ADYAtgB2AM4ADgCOAE4A7gAuAK4AbgDeAB4AngBeAP4APgC+AH4AwQABAIEAQQDhACEAoQBhANEAEQCRAFEA8QAxALEAcQDJAAkAiQBJAOkAKQCpAGkA2QAZAJkAWQD5ADkAuQB5AMUABQCFAEUA5QAlAKUAZQDVABUAlQBVAPUANQC1AHUAzQANAI0ATQDtAC0ArQBtAN0AHQCdAF0A/QA9AL0AfQDDAAMAgwBDAOMAIwCjAGMA0wATAJMAUwDzADMAswBzAMsACwCLAEsA6wArAKsAawDbABsAmwBbAPsAOwC7AHsAxwAHAIcARwDnACcApwBnANcAFwCXAFcA9wA3ALcAdwDPAA8AjwBPAO8ALwCvAG8A3wAfAJ8AXwD/AD8AvwB/AMCAAICAgECA4IAggKCAYIDQgBCAkIBQgPCAMICwgHCAyIAIgIiASIDogCiAqIBogNiAGICYgFiA+IA4gLiAeIDEgASAhIBEgOSAJICkgGSA1IAUgJSAVID0gDSAtIB0gMyADICMgEyA7IAsgKyAbIDcgByAnIBcgPyAPIC8gHyAwoACgIKAQoDigCKAooBigNKAEoCSgFKA8oAygLKAcoDKgAqAioBKgOqAKoCqgGqA2oAagJqAWoD6gDqAuoB6gMaABoCGgEaA5oAmgKaAZoDWgBaAloBWgPaANoC2gHaAzoAOgI6AToDugC6AroBugN6AHoCegF6A/oA+gL6AfoDBgAGAgYBBgOGAIYChgGGA0YARgJGAUYDxgDGAsYBxgMmACYCJgEmA6YApgKmAaYDZgBmAmYBZgPmAOYC5gHmAxYAFgIWARYDlgCWApYBlgNWAFYCVgFWA9YA1gLWAdYDNgA2AjYBNgO2ALYCtgG2A3YAdgJ2AXYD9gD2AvYB9gMOAA4CDgEOA44AjgKOAY4DTgBOAk4BTgPOAM4CzgHOAy4ALgIuAS4DrgCuAq4BrgNuAG4CbgFuA+4A7gLuAe4DHgAeAh4BHgOeAJ4CngGeA14AXgJeAV4D3gDeAt4B3gM+AD4CPgE+A74AvgK+Ab4DfgB+An4BfgP+AP4C/gH+AwEAAQIBAQEDgQCBAoEBgQNBAEECQQFBA8EAwQLBAcEDIQAhAiEBIQOhAKECoQGhA2EAYQJhAWED4QDhAuEB4QMRABECEQERA5EAkQKRAZEDUQBRAlEBUQPRANEC0QHRAzEAMQIxATEDsQCxArEBsQNxAHECcQFxA/EA8QLxAfEDCQAJAgkBCQOJAIkCiQGJA0kASQJJAUkDyQDJAskByQMpACkCKQEpA6kAqQKpAakDaQBpAmkBaQPpAOkC6QHpAxkAGQIZARkDmQCZApkBmQNZAFkCWQFZA9kA2QLZAdkDOQA5AjkBOQO5ALkCuQG5A3kAeQJ5AXkD+QD5AvkB+QMFAAUCBQEFA4UAhQKFAYUDRQBFAkUBRQPFAMUCxQHFAyUAJQIlASUDpQClAqUBpQNlAGUCZQFlA+UA5QLlAeUDFQAVAhUBFQOVAJUClQGVA1UAVQJVAVUD1QDVAtUB1QM1ADUCNQE1A7UAtQK1AbUDdQB1AnUBdQP1APUC9QH1Aw0ADQINAQ0DjQCNAo0BjQNNAE0CTQFNA80AzQLNAc0DLQAtAi0BLQOtAK0CrQGtA20AbQJtAW0D7QDtAu0B7QMdAB0CHQEdA50AnQKdAZ0DXQBdAl0BXQPdAN0C3QHdAz0APQI9AT0DvQC9Ar0BvQN9AH0CfQF9A/0A/QL9Af0DAwADAgMBAwODAIMCgwGDA0MAQwJDAUMDwwDDAsMBwwMjACMCIwEjA6MAowKjAaMDYwBjAmMBYwPjAOMC4wHjAxMAEwITARMDkwCTApMBkwNTAFMCUwFTA9MA0wLTAdMDMwAzAjMBMwOzALMCswGzA3MAcwJzAXMD8wDzAvMB8wMLAAsCCwELA4sAiwKLAYsDSwBLAksBSwPLAMsCywHLAysAKwIrASsDqwCrAqsBqwNrAGsCawFrA+sA6wLrAesDGwAbAhsBGwObAJsCmwGbA1sAWwJbAVsD2wDbAtsB2wM7ADsCOwE7A7sAuwK7AbsDewB7AnsBewP7APsC+wH7AwcABwIHAQcDhwCHAocBhwNHAEcCRwFHA8cAxwLHAccDJwAnAicBJwOnAKcCpwGnA2cAZwJnAWcD5wDnAucB5wMXABcCFwEXA5cAlwKXAZcDVwBXAlcBVwPXANcC1wHXAzcANwI3ATcDtwC3ArcBtwN3AHcCdwF3A/cA9wL3AfcDDwAPAg8BDwOPAI8CjwGPA08ATwJPAU8DzwDPAs8BzwMvAC8CLwEvA68ArwKvAa8DbwBvAm8BbwPvAO8C7wHvAx8AHwIfAR8DnwCfAp8BnwNfAF8CXwFfA98A3wLfAd8DPwA/Aj8BPwO/AL8CvwG/A38AfwJ/AX8D/wD/Av8B/wNleHBhbmQgMzItYnl0ZSBr9PejAKzTLgACGDkAK9NUAD8fGACC230AzX0iAEiT0AD/wSkAddEKAMd3QwDkSpkAhJUCAPOubABvHz8ASncAAO1UxwBfvXQAJBAAACtU3QDkancAoQEAAGXc/wDaY60AHwAAAIrYgAAoZHsAAQAAALL9wwBpDAQAAAAAACTPEgD7MdAAAAAAAJ+UAAAfCYsAAAAAAGYDAACYqV0AAAAAAA4AAAC7br8=\"),t(A,26880,\"fl0v\"),t(A,26892,\"mHA=\"),t(A,26904,\"xg==\"),t(A,26916,\"AQ==\"),t(A,26928,\"+w/QHjQryCswG/YQgxgfJjcG/xgFJZIUSgLBFnId7iVuBAcZrwbFA7sb+h2fDioZriikH10HmAZUBVkotCfcI7IvYBjlA3UArxI3EQ0GoBsNCzoZTxGtIugbBAogFsoPnS+wAf8p1QS6Hf4Fjw+3HoUIpBgQIqoZ6xKaBg4AIA/BFZgkgy/jB3cdCwlBEqwcEQaEBNEgfSz8A5cLFCqFG/QM5CulFDotjSlmJxUlJBg9JPIX+wxzA+Uo6QHeBSMLNSsBJrYK0S9qE/EoXierBNoC4gYOD+4HBBeqKjwjmhTbIxQOxg7eJ2wMiw08Eo4JvR2qJEIDFx60GksN5xT0L/wNywZEKjsm4SfmD9ovTSGhKL0KqhxOKZgXrwNyJMUF0RrEJQEO6RlxL98PZA4AHvwf9hrNDU8myhfXAnMnWxshG50HAyY/KakXegG/HjsixSINJI4ixxF1JZAtzh11IjAWXBNrGMQgrCcTIiUJVwy7BVQVaSFnHlkKEAlMIywY4QJyDlsSeRZWI2cOEACSA0IUIynIEawHtQ30IFwdBRXtKdEMfRskBE8L9Bu3Iu0UCRkFIJIL5xjIE+oZ+RUWAaQD9SffItodXwFSJO0A4hYMHkoMXi+iHQUIFSzaDlQU+hHUBiQsVAF/DgYSLAHxKs4TQSdgLdcv/RzTKXIWFhb7DrEVyAQcIRUkBQ/6AMkrgRC2GNAl3i8oENoKtAJoIgoZPhp5J7Iorw68HGEs8SAlGUQOxhgSIw8V4AhMGfgc4iBIKtIuZRZsA3YbdwiECXINASQOIPoSTBe6CgocmgXdHK8ipSnBLHwQmAVQKugQbSFLB+4kcAnoDnQjrgIRFdsJ8xDjF2sCqQMSC18ezww7CUAd4BfAEzgD3CeqLVkEpwp4JoAD7AfTE14K4CjMHokvOhX+CwAZrCOYLXkvqBH5BAsmzCzRJjcn+CXWCLckuCs7AZ8RhgStF18aWS5lAcccxhHXA1YhoCCOJ2odJSQPEWUUnw9JIlkMThsiEIQtLg3VLNkGJAHpIfYKiiicL6gWIy5tDMQHAAR8JK0JsCrmEV4aIw5/FXEUnwkWIeIdHB/7GC8E+ASSDSUr2wxQLDYhBiVtJuUEQQdZGHASKS2SF1kmCw0FBz8LYhhQFEIIGh+JJGMsYxXEF4ElDBCbHMYo/yT3BJgB/xoHDGgBVCAPLcQjWSMTLVIDqSEQA+8ejiCKLzYH5SeYL5Mefy7gFTMm9APRAuAKFBqYGeQUSBGgGtUg5yYeFDQJsBWTFDUFYSK9JYwcnBYuE40DXS0rES4gHhrOEOQL7QjZL6sHACTIEI4utwITEUEmFBNrCfYnWgpJAzIP9ydQHDkhvCsgGtsPrBdmDnISTS64FpIb1BqBK/YeHhP8LwYQRA8aDn0ZAh8uH8kuYxoZAtIRVwYjIL0seB2KAyguTCVqKucl/wrYLZ0aQxszA8cifxhbKlwBWh2TICcZtgJUAxsW3QqEDkUt0AvzBdMhEhDyKecM/RaiC3kcbC6jI2skNi5iAN4JRAgjEI8sNAc9DkwPxR+wCHcqnB+zJWUX5BsgIYYGnwCrKjYTgACQHNUCxSOOE/kYpg2bF9wqJRg+Ll8NEin0HW0OAhr5GrEu5CeSLo0jrSD2Ey0AYAmBBxkRoAqfBjMA+AqKAmgHDSfzJswuoh/hEicQoRDOFp0S6SoMLU4Cpi/iAY0v1geYGyInSA/wLhcpYiwqG6IIHAElFckZGQ9jKLQrVxgFAlwlESwXD7oE/BHgH7csmQAkHIMW4RMgJHov5C1KBRAaswCcFVYKNReZL14DVgzdAW8cLhbqHp4QLgFNC4In6hpYJa8lgS4CEGAmHShJBdspzRRuGG8PDwcxGScUHAV7IEwNVQfPBHAA/hjMLfAvdhyzBfIvqCaADSADdQW2KWcA/BwoH6gD/AJ4AjwfHyD9IE4edipjJcwJmgd8Ga4nFATyEJkJOQ57BisQUBIFJowrag8iCI0U9AdKLtQdzC/2FEwJdwUoHjQIkQygKsIimh3bLucKvwQbDZcK2wjUB3ghwCeODCEJ1gZ5EoUT9xyrGAwvFhH1G+wS0wBDH68nSiTZLMcGIAmhFpMmACDaA2cdeQVmAx8OESHECiom8ge4J8AM9Bc2AEALmxIdLgIMXiDUJBETFRtCBDYnBwrEAn0DQRliEygnKghWFvcpDAN9Eg8SVggnCMISdAP8FKMWMhftEJ8ZfR2VFKgpnBC8DB0XPiqIFv8moB9vHpAaQx2AGHMHwyqRGBsukBe5LJME8SP9Hq8JIh9JLJYbzyJIGo4Zsh98IsMZ2Q38EAISnQhXG6ofuBWWKGkkwwltCWgc4RpWKVwk3STiDf4MZxfBLlcN+y9uJh8v7BCWHkEszRnvL/wHWy25HMErPi2VDu8i+iZbBgAcXw+6E8oKSB2PKPMCdgYVL1gTlicqEcAZ2h5JHcgi/S79DfwpKhZ2KCUT9hxDIsYCbBoOIRkc+xRqHEwrIgG4HqsaLi7NCbIZug+vFrIFWRaCFlIQOQhlLfQSwSIoC/YsMCTYCUgiYxtXCmoHfxs+F5srcBWFGN4jwCx5Aj4nIi0BFnMlHQlgG6wbtxMfHIkmJSM5AvYYXSrPJUwg0CxrEM0HAgBzJKIAJhjQB0EOQCbbGIUdKxg+Ic8moBU7I3oO6S6sBfsLdhXcJQETgxfCG4ol7BG1J3UY/xZcCrwnLAaLKB4S3Sb7DzEROQTNBOIJfhcLH9EUEwqPEkAZty1vG/wKAhfKKSUMTQioB60qaSmkKF0QUwfXFmIhBxJGFDwsUin6FpMr4SDzL2cpFh1XFvENXRd8J0oRciADKkcSLCsCBlEuZAA3IOEZ/SUZFFQNsh7HFvQkYRT0KcoeUh2MLxwsoRdPAA0AGhu2Ik0V6hG/LFcLRBJzJsUddiKVIyMIOyHtISYMZxvFDFcF/RgTKPMgHyknLVYrowgQB5ccMABLJQAKzATeJCMqGC4cB44sBiMPGMQL3RfsCpsIdAbHAlwbHQQNI3wU7QVqJAUshAMwD30r8ClVE8Ad9iaKEh4ofgBpC0Aa6xmPGS4GBBMqAKECwAgzHBAF1S77HYIhrS7dAy0pBx6tGych7AP8J18SowC3I/URHxkUL68Loi4nEiINDAhdLOsuCBoXFjkcGhdvJPwP+BYUG0oNDRSyJN0rhBQwIxQG/BqlEg0PTCJVKDke3ga/G28s8S+aIasMiBmmHY8hIC3VF7UM8SaoJZoRmA6tGkYqqiPcJu4NVQg9D5YXpRzRGYwNMxJxAowKOh5zDfQLPA3GDUIRhy5YGMIG/glkKOAUphSOCCotNxiyCTQiCxUFEAESnSEiIJAAGBYAIj0KMBU8Ko8LUixpGLMGVxNEJWAHtA4nABsgIAjGCb0FNikFIuEVRQTIDrETCgjPILgspyULCJYm7RzACe4eSi1zATkfAQxWKCgAFCcdJDMf4xXTD9YepAJ0LNMcZRl1E0QKoA3MKm4bURrNJuMbGgksD2EVuR4dG2kW7RUhJTAtDSzOCSEaggFuEWkAHAjLKHcAcw8SEfEsWA6vLO4CqAw9DPICrQ+ZLvojAhVpLgorAgs7B2YT9R+ACj0YnhqeA3gL5xC/J7EbnxfCJPwo9iKoCW8Y2AKRHagXwCgcK5QJ+wrLDrEDJiPcBG8iCSvSKwYX5RAfEusOYiaQG4Ia3iGjFRseUQVUJoULASw9KJQj3gFZGWUAdwcLJRgO3S4oKSwD0yJ9At8fsxSoI7gNYiCcG/Ie3AuXEnMIYQ+rDiosOx46E5wuqAGiFVQYeytiHsYuSQRKCysnCQrKCDAJNQP2CQgrWR6IAGkCVQwBFwMkxxp4ADURIQejJS4cFSiBLIkJWiWoK1cCJQjJLEEcIRjBEsYmMiOiEe8kWCyWLR4YDh8mJvAaUy2NDBkhkSYTC7YolA4ZH7EFaSqFH0ADXAZSDSQTZyr3E0cltRgHHfMPAAyPIn0miieLFJUsnBkvAbkFHw8JE7UWISfyGu8MOxe9IdwWEA+gA0UTUiFPB4gIwxX3FpkNTS0nJdkfIwAxCksXgB84BAcv/CDsC+UOOStQGgYhJAnjHXYH1SlFCKUlAhmMF0wIFR53Cj8UfhgAHSUKixoGJFUqGAGHIcYMYRoyCcMO1hd8EiYXwQnAITEo2xdfL44L/y80KJYfMQO1DzIKpAULF8gt3Ax4CeITShxVFKEU5CaOCgAa3wLDCIgtQQMjDHwXkRpmBMMYghSXKKolnhS5DSkm0QsLA9kkQA0NHZwCyCevH38ZqBlPKlIZRyBPFjQm0wFWFUkR3y61BJcTBhvoE/MOlRU7Lb4NCxPcHIsH1xkFBgQiBAE5DbgSJxFBFtceawipHOwAiykOLXIHuRI3JUccoiABFKYpBwkSDWwhwwJABEgTpgIFKBIANBbAA2sRFR/iAJMJBgCqIkABmhgDIx8iJAulC6sGIBWZE5QmPiaYC2sHSRpXEKoUZCf/HQUfKCI+FoUNTxBzFrkVMg1rFLgD3xBSJgQREAxuK0gDcRjmAXAXPgWOKIEXvhJxFZIRYRACCXkZwwXkGEUjZR9ZBmwbhBJiFhQfzxheGQUbjSw/HdonqyfyHYQd9SwKBqsZ1yfZCJ8cwBaELD0t+iXLCL8r7BTwHC0Low//I+QBZh3BJMsvDRhBI0kIDyjXCT0l8A7iIZssiCqaEicsARBuCWAZ4SY6KSgDtwtSCL4QLi8VHQwU6x71AFYXChN8HIgdKyngJnMjQQiJDi0oJidqJeYiQisaJSYBZxI/DWEFcCPNJ9kRiiq1JgsbNQAtErcBDSh0G98nlyB1BPwJsR3WH4YpyCFoJg8f7StTCIUWZyg1Jp4KiwWzEQQP4g/FEIktBS1ZLNkQBROaL0sGjCrhLIEiWQkPAE4qixMRADUCAxeRLzIrrCi1IoYP5SraG9AW8iiSIJMXNBsmBrgq5AehCf8fgAFSCqkKFxV/CLQk0y5jHxcR0xmSEyQuqyOjLGgAzBirJWUaTi/xFbcqHQKHAOELIBx+Gd0TaC9KAyEQBR5HK+og8AOlCvwtqhdNBJ4H6CA4Ftwa5S5fJ9cUnwPqBhEBuSDfCGkUKyh0AB8uWwCzLfUCGAVkHTMZYB/aHyAdXxA1AQ4J9AiZKHctCSXOL2IpYSXoHoAooSbULwscVA90DG8BHQhQAQgV/xWUIQ0S7waiIsMB3BclBWYYWyIIF3McPAwsLXETgS/LHFYFYi97KeEOHRScGE4KZRCKBVEnPBC1IMQhzShyA94fvScjJp8vywGWC14MlQGIE18kBBkaIw8G7x8uDg4qMSS8An0hJCXmGa0sSy3aFm4PpxKlLqYFghc6Dc4svhRkFSkCAiUaCpcFtQrZAXcsiRJEA94PqikvHugtnhU4AdMQ/xCEFuchvSD7HwUA4xwLEYAELRVvFEkZtAGPHZshVRgmIA==\"),t(A,31024,\"8ISA\");var tA,fA=((tA=[]).set=function(r,A){this[r]=A},tA.get=function(r){return this[r]},tA);return{f:function(){},g:D,h:d,i:fA,j:function(){var r;w=r=w-16|0,e[r+15|0]=0,l(31064,r+15|0,0),w=r+16|0},k:function(){return 1793},l:function(){return 2305},m:function(){return 1330},n:function(r,A){r|=0,A|=0;var n,t,u,s,l,P,v,y,D,b,d,h,C,B,k=0,T=0,Q=0,x=0,F=0,W=0,K=0,_=0,nr=0,tr=0,fr=0,ar=0,cr=0,lr=0,Pr=0,wr=0,kr=0,mr=0,Qr=0,Ir=0,Ur=0,Rr=0,Mr=0,Yr=0,Vr=0,Wr=0,Kr=0,AA=0,nA=0,tA=0,fA=0,iA=0,aA=0,oA=0,uA=0,cA=0,sA=0,lA=0,PA=0,vA=0;w=u=w-34880|0,pr(k=u+16|0,48),sr(P=u+8|0),z(P,k,48),Ar(P),t=u+5184|0,s=u+4160|0,b=u+3136|0,d=u+2112|0,y=(l=(n=u+6208|0)- -8192|0)- -8192|0,v=(k=u- -64|0)||n,D=((k?0:1024)<<1)+n|0,B=31==(0|(h=a[1308]-1|0)),C=-1<<a[1319]-1^-1;r:for(;;){for(M(P,t),M(P,s),x=0-(T=1<<h)|0,k=0;;){if(1024!=(0|k)){if((0|(Q=e[k+t|0]))<=(0|x)|(0|T)<=(0|Q))continue r;if((0|(Q=e[k+s|0]))>=(0|T))continue r;if(k=k+1|0,(0|Q)>(0|x))continue;continue r}break}if(!(B||((k=Er(t))+(T=Er(s))|(k|T)>>31)>>>0>16822)){for(Sr(n,t),Sr(l,s),E(n,10),E(l,10),$(y,n,l,10),jr(n,10),jr(l,10),Tr(n,0,1086849152),Tr(l,0,1086849152),er(n,y,10),er(l,y,10),S(n,10),S(l,10),k=0,cr=0,K=0;1024!=(0|k);)x=(T=k<<3)+n|0,T=T+l|0,cr=j(j(cr,K,_r(i[x>>2],i[x+4>>2]),g),g,_r(i[T>>2],i[T+4>>2]),g),K=g,k=k+1|0;if(Br(cr,K,1608035756,1087401370)){for(k=0;1024!=(0|k);)f[(T=k<<1)+D>>1]=$r(e[k+t|0]),f[T+v>>1]=$r(e[k+s|0]),k=k+1|0;q(v),q(D),k=0;A:{for(;;){if(1024!=(0|k)){if(x=o[(T=k<<1)+D>>1]){f[(T=T+v|0)>>1]=Dr(o[T>>1],x),k=k+1|0;continue}k=0;break A}break}H(v),k=1}if(k){if(sA=0,Vr=0,L(AA=(k=(F=i[6122])<<2)+(Ur=k+n|0)|0,t,s,10,0),m(AA,F,F,2,0,T=(Mr=k+AA|0)+k|0),F){for(PA=xr(i[AA>>2]),Rr=xr(i[Mr>>2]),Qr=Fr((k=F<<2)+(x=k+T|0)|0,AA,k),Yr=Fr(Qr+k|0,Mr,k),i[Ur>>2]=1,Hr(Ur+4|0,k-4|0),vA=Hr(n,k),Kr=Fr(T,Mr,k),fA=Fr(x,AA,k),i[fA>>2]=i[fA>>2]-1,Wr=c(F,62)+30|0;K=0,tr=0,W=0,ar=0,T=-1,x=-1,Q=F,Wr>>>0>=30;){for(;Q;)K^=((k=i[(_=(Q=Q-1|0)<<2)+Yr>>2])^K)&T,tr^=(k^tr)&x,W^=((_=i[_+Qr>>2])^W)&T,ar^=(_^ar)&x,x=(T=x)&(2147483647+(k|_)>>>31|0)-1;for(k=(x=(Q=-1^T)&tr)>>>1|0,kr=x=(tr=T&tr|K)+(K=x<<31)|0,_=x>>>0<K>>>0?k+1|0:k,T=T&ar|W,x=(k=Q&ar)<<31,k=W=k>>>1|0,mr=T=T+x|0,W=T>>>0<x>>>0?k+1|0:k,T=i[Yr>>2],tr=i[Qr>>2],x=0,fr=0,Pr=0,lr=1,Q=0,cr=0,K=0,nr=1,ar=0;31!=(0|x);)T=((T=T-((tA=(nA=tr)-(0-(k=(wr=(((wr=_-((kr>>>0<mr>>>0)+W|0)|0)^W)&(W^_)^wr)>>>31|0)&(Ir=(tr=tr>>>x&1)&T>>>x))&T)|0)&0-(wr=Ir&(-1^wr)))|0)&0-(tr=k|!tr))+T|0,cA=nr-(oA=(nA=0-wr|0)&(uA=fr-(aA=nr&(iA=0-k|0))|0))|0,k=(k=ar-(((wr=0-(0!=(0|wr))|0)&(aA=Pr-((ar&(Pr=0-(0!=(0|k))|0))+((Ir=fr)>>>0<aA>>>0)|0)|0))+(nr>>>0<oA>>>0)|0)|0)+(nr=k&(Ir=0-(0!=(0|(fr=tr)))|0))|0,nr=ar=(ar=tr=cA&(lA=0-fr|0))+cA|0,ar=k=tr>>>0>ar>>>0?k+1|0:k,oA=lr-(k=cr&iA)|0,k=(k=K-((wr&(lr=Q-((K&Pr)+(k>>>0>lr>>>0)|0)|0))+(cr>>>0<(tr=nA&oA)>>>0)|0)|0)+(K=k&Ir)|0,tr=Q=(cA=cr-tr|0)&lA,cr=Q=Q+cA|0,K=k=tr>>>0>Q>>>0?k+1|0:k,k=nA,Q=_-(((tr=wr)&(wr=W-((_&Pr)+((Q=kr&iA)>>>0>mr>>>0)|0)|0))+((k&=nA=mr-Q|0)>>>0>kr>>>0)|0)|0,kr=(_=kr-k|0)^(mr=fr-1|0)&(((1&Q)<<31|_>>>1)^_),_=Q^(iA=0-!fr|0)&(Q>>>1^Q),tr=tA+(tA&fr-1)|0,W=(iA&aA)+aA|0,fr=k=(Q=mr&uA)+uA|0,Pr=k>>>0<Q>>>0?W+1|0:W,k=(lr&iA)+lr|0,lr=Q=(W=mr&oA)+oA|0,Q=Q>>>0<W>>>0?k+1|0:k,mr=nA^(nA^((1&wr)<<31|nA>>>1))&lA,W=wr^(wr^wr>>>1)&Ir,x=x+1|0;for(T=0,kr=0,_=0,mr=0,W=0;(0|T)!=(0|F);)x=(k=kr)+(wr=or(cr,K,kr=i[(tr=T<<2)+Qr>>2],0))|0,k=g+_|0,k=x>>>0<wr>>>0?k+1|0:k,_=or(nr,ar,wr=i[tr+Yr>>2],0),k=g+k|0,k=(x=_+x|0)>>>0<_>>>0?k+1|0:k,_=x,x=k,kr=or(kr,0,lr,Q),W=g+W|0,W=(k=kr+mr|0)>>>0<kr>>>0?W+1|0:W,kr=(mr=or(wr,0,fr,Pr))+k|0,k=g+W|0,k=kr>>>0<mr>>>0?k+1|0:k,mr=kr,W=k,T&&(i[(k=tr-4|0)+Qr>>2]=2147483647&mr,i[k+Yr>>2]=2147483647&_),T=T+1|0,kr=(2147483647&x)<<1|_>>>31,_=x>>31,W=(k=W)>>31,mr=(2147483647&k)<<1|mr>>>31;i[(k=(F<<2)-4|0)+Qr>>2]=mr,i[k+Yr>>2]=kr,br(Qr,F,x=W>>>31|0),br(Yr,F,_=_>>>31|0),tr=k=0-(x=1&(W=(k=x)|(x=_)<<1))|0,wr=0-(W=W>>>1|0)|0,kr=k=0-(0!=(0|W))|0,k=Q-(((W=Q<<1|(k=T=lr)>>>31)&tr)+(k>>>0<(lr=k<<1&(mr=0-x|0))>>>0)|0)|0,lr=T-lr|0,T=k,x=k=fr,k=Pr-(((W=Pr<<1|k>>>31)&tr)+((Q=k<<1&mr)>>>0>k>>>0)|0)|0,W=x-Q|0,x=k,k=K-(((k=K<<1|(Q=cr)>>>31)&kr)+((Q=Q<<1&wr)>>>0>(_=cr)>>>0)|0)|0,_=_-Q|0,Q=k,k=ar<<1|(K=nr)>>>31,I(Ur,Kr,Mr,F,Rr,lr,T,W,x,_,Q,Pr=nr-(K=K<<1&wr)|0,k=ar-((k&kr)+(K>>>0>nr>>>0)|0)|0),I(vA,fA,AA,F,PA,lr,T,W,x,_,Q,Pr,k),Wr=Wr-30|0}for(T=1^i[Qr>>2],x=1;(0|x)!=(0|F);)T=i[Qr+(x<<2)>>2]|T,x=x+1|0;k=i[Mr>>2]&i[AA>>2]&!T}else k=0;k&&(ir(n,F,12289)||(Vr=!ir(Ur,F,12289)));A:if(Vr){for(Vr=10;;){if(Vr>>>0>=3){for(x=n,nr=i[24452+(k=(Vr=Vr-1|0)<<2)>>2],L(Q=x+((T=c(nr,Mr=(kr=1<<(lr=10-Vr|0))>>>1|0))<<3)|0,t,s,Vr,1),mr=(F=(_=i[k+24496>>2])<<lr<<2)+x|0,fr=i[k+24448>>2],Pr=dr(mr+F|0,Q,c(kr,fr)<<3),cr=(ar=dr((k=fr<<lr<<2)+(W=Pr+k|0)|0,x,c(nr,kr<<2&-8)))+(T<<2)|0,Q=0;;){if((0|Q)==(0|_)){Wr=(Kr=(Ir=(wr=(k=kr<<2)+(Ur=k+ar|0)|0)+k|0)+k|0)+(Mr<<2)|0,AA=_<<3,Qr=0,T=lr-1|0;break}for(F=(k=Q<<2)+mr|0,tr=k+x|0,T=0,Ir=Cr(nr,Qr=i[c(Q,12)+18176>>2],Ur=xr(Qr),wr=zr(Qr,Ur)),k=cr,K=ar;(0|T)!=(0|Mr);)i[tr>>2]=Or(K,nr,Qr,Ur,wr,Ir),i[F>>2]=Or(k,nr,Qr,Ur,wr,Ir),T=T+1|0,F=(Rr=_<<2)+F|0,tr=tr+Rr|0,k=(Rr=nr<<2)+k|0,K=K+Rr|0;Q=Q+1|0}for(;;){n:{e:{if((0|_)!=(0|Qr)){if(k=c(Qr,12),Rr=zr(cr=i[k+18176>>2],nr=xr(cr)),(0|fr)==(0|Qr)&&(m(Pr,fr,fr,kr,1,ar),m(W,fr,fr,kr,1,ar)),V(ar,Ur,lr,i[k+18180>>2],cr,nr),fr>>>0>Qr>>>0){for(F=0,tr=Q=(k=Qr<<2)+W|0,k=K=k+Pr|0;(0|F)!=(0|kr);)i[(Yr=F<<2)+wr>>2]=i[k>>2],i[Ir+Yr>>2]=i[tr>>2],F=F+1|0,tr=(Yr=fr<<2)+tr|0,k=k+Yr|0;Y(K,fr,Ur,lr,cr,nr),Y(Q,fr,Ur,lr,cr,nr)}else{for(F=0,Q=Cr(fr,cr,nr,Rr),tr=W,k=Pr;(0|F)!=(0|kr);)i[(K=F<<2)+wr>>2]=Or(k,fr,cr,nr,Rr,Q),i[K+Ir>>2]=Or(tr,fr,cr,nr,Rr,Q),F=F+1|0,tr=(K=fr<<2)+tr|0,k=k+K|0;G(wr,1,ar,lr,cr,nr),G(Ir,1,ar,lr,cr,nr)}for(F=0,tr=Q=(k=Qr<<2)+mr|0,k=K=k+x|0;(0|F)!=(0|Mr);)i[(Yr=F<<2)+Kr>>2]=i[k>>2],i[Yr+Wr>>2]=i[tr>>2],F=F+1|0,tr=(Yr=_<<2)+tr|0,k=k+Yr|0;for(G(Kr,1,ar,T,cr,nr),G(Wr,1,ar,T,cr,nr),F=0,tr=Q,k=K;;){if((0|F)==(0|Mr))break e;nA=i[(Yr=F<<3)+wr>>2],iA=i[(fA=4|Yr)+wr>>2],uA=i[Ir+Yr>>2],Yr=vr(i[(tA=F<<2)+Kr>>2],Rr,cr,nr),tA=vr(i[Wr+tA>>2],Rr,cr,nr),i[k>>2]=vr(i[Ir+fA>>2],Yr,cr,nr),i[(fA=_<<2)+k>>2]=vr(uA,Yr,cr,nr),i[tr>>2]=vr(iA,tA,cr,nr),i[tr+fA>>2]=vr(nA,tA,cr,nr),F=F+1|0,tr=tr+AA|0,k=k+AA|0}}m(x,_,_,kr,1,ar),m(mr,_,_,kr,1,ar),k=kr<<3,wr=Jr(x,ar),T=Jr(x,Kr=(Ir=(((Q=3&(T=(Mr=(Rr=k+(Ur=k+wr|0)|0)+(Mr<<3)|0)-x|0))?4-Q|0:0)+T|0)+x|0)+(kr<<2)|0),J(wr,(F=(Wr=fr-(Q=fr>>>0<10?fr:10)|0)<<2)+Pr|0,Q,fr,lr),J(Ur,F+W|0,Q,fr,lr),E(wr,lr),E(Ur,lr),$(Rr,wr,Ur,lr),jr(wr,lr),jr(Ur,lr),Qr=(k=k+Mr|0)>>>0>T>>>0?k:T,F=((Q=c(_,31))-(T=i[24544+(k=Vr<<3)>>2])|0)+(k=c(i[k+24548>>2],6))|0,AA=k+T|0,Yr=kr<<1,tA=Vr>>>0>4,k=_;t:{for(;;){for(J(Mr,(ar=(K=k-(T=k>>>0<10?k:10)|0)<<2)+x|0,T,_,lr),J(Qr,ar+mr|0,T,_,lr),E(Mr,lr),E(Qr,lr),N(Mr,wr,lr),N(Qr,Ur,lr),yr(Qr,Mr,lr),er(Qr,Rr,lr),S(Qr,lr),T=(K=c(Wr-K|0,31)+F|0)>>31,T^=T+K,cr=0&(K=(0|K)<0),K=K?1073741824:1071644672,nr=0,ar=1072693248;;){if(!T){for(T=0;(0|T)!=(0|kr);){if(tr=0,!Br(-4194304,-1042284545,K=R(i[(K=Qr+(T<<3)|0)>>2],i[K+4>>2],nr,ar),cr=g))break t;if(!Br(K,cr,-4194304,1105199103))break t;i[Ir+(T<<2)>>2]=rr(K,cr),T=T+1|0}break}1&T&&(nr=R(nr,ar,cr,K),ar=g),T=T>>>1|0,cr=_r(cr,K),K=g}if(K=F-c(T=(0|F)/31|0,31)|0,tA?(U(x,k,_,Pr,fr,fr,Ir,T,K,lr),U(mr,k,_,W,fr,fr,Ir,T,K,lr)):(p(x,k,_,Pr,fr,fr,Ir,T,K,lr,Kr),p(mr,k,_,W,fr,fr,Ir,T,K,lr,Kr)),(0|Q)<=(0|(T=10+(K=F+AA|0)|0))?T=Q:k=k-((K+41|0)<=(0|c(k,31)))|0,!((0|F)>0))break;F=((0|F)>25?F:25)-25|0,Q=T}f:if(!(k>>>0>=fr>>>0))for(F=k-1<<2,Q=x,tr=0;;){if((0|tr)==(0|kr))break f;for(K=0-(i[Q+F>>2]>>>30|0)>>>1|0,T=k;(0|T)!=(0|fr);)i[(T<<2)+Q>>2]=K,T=T+1|0;for(K=0-(i[F+mr>>2]>>>30|0)>>>1|0,T=k;(0|T)!=(0|fr);)i[(T<<2)+mr>>2]=K,T=T+1|0;tr=tr+1|0,mr=(T=_<<2)+mr|0,Q=T+Q|0}for(k=fr<<2,T=0,tr=1,F=x;;){if((0|T)==(0|Yr))break t;Q=dr(F,x,k),T=T+1|0,x=(_<<2)+x|0,F=k+Q|0}}break n}Y(K,_,Ur,lr,cr,nr),Y(Q,_,Ur,lr,cr,nr),Qr=Qr+1|0;continue}break}if(tr)continue;break A}break}for(Wr=0,K=0,cr=4096+(Pr=2048+(ar=n+2048|0)|0)|0;2!=(0|Wr);){for(x=(k=Wr<<2)+cr|0,T=k+Pr|0,F=0,fr=Cr(2,_=i[c(Wr,12)+18176>>2],W=xr(_),nr=zr(_,W)),Q=n,k=ar;256!=(0|F);)i[T>>2]=Or(Q,2,_,W,nr,fr),i[x>>2]=Or(k,2,_,W,nr,fr),x=x+8|0,T=T+8|0,k=k+8|0,Q=Q+8|0,F=F+1|0;Wr=Wr+1|0}for(nr=dr(n,Pr,4096),lr=4096+(fr=2048+(Ir=4096+(cr=2048+(_=2048+(Q=(wr=dr(nr+4096|0,cr,4096))+4096|0)|0)|0)|0)|0)|0,Mr=1024+(Ur=2048+(AA=2048+(Wr=2048+(Vr=cr+2048|0)|0)|0)|0)|0;2!=(0|K);){for(k=c(K,12),W=i[k+18176>>2],V(cr,Ir,10,k=i[k+18180>>2],W,Pr=xr(W)),T=0;1024!=(0|T);)i[(k=T<<2)+fr>>2]=rA(e[T+t|0],W),i[k+lr>>2]=rA(e[T+s|0],W),T=T+1|0;for(tr=zr(W,Pr),G(fr,1,cr,10,W,Pr),G(lr,1,cr,10,W,Pr),T=10;T>>>0>9;)hr(fr,T,W,Pr,tr),hr(lr,T,W,Pr,tr),T=T-1|0;for(kr=dr(Vr,Ir,2048),mr=dr(Wr,fr,2048),Qr=dr(AA,lr,2048),T=0,k=F=(x=K<<2)+wr|0,x=ar=x+nr|0;256!=(0|T);)i[(Rr=T<<2)+Ur>>2]=i[x>>2],i[Mr+Rr>>2]=i[k>>2],k=k+8|0,x=x+8|0,T=T+1|0;for(G(Ur,1,cr,8,W,Pr),G(Mr,1,cr,8,W,Pr),T=0,k=F,x=ar;256!=(0|T);)Yr=i[(Rr=T<<3)+mr>>2],nA=i[(tA=4|Rr)+mr>>2],fA=i[Qr+Rr>>2],Rr=vr(i[(Kr=T<<2)+Ur>>2],tr,W,Pr),Kr=vr(i[Mr+Kr>>2],tr,W,Pr),i[x>>2]=vr(i[Qr+tA>>2],Rr,W,Pr),i[x+8>>2]=vr(fA,Rr,W,Pr),i[k>>2]=vr(nA,Kr,W,Pr),i[k+8>>2]=vr(Yr,Kr,W,Pr),k=k+16|0,x=x+16|0,T=T+1|0;Y(ar,2,kr,9,W,Pr),Y(F,2,kr,9,W,Pr);n:if(!K)for(Y(mr,1,kr,9,W,Pr),Y(Qr,1,kr,9,W,Pr),F=0,x=_,T=Q;;){if(512==(0|F))break n;k=F<<2,i[T>>2]=i[k+mr>>2],i[x>>2]=i[k+Qr>>2],x=x+4|0,T=T+4|0,F=F+1|0}K=K+1|0}for(m(nr,2,2,1024,1,cr),m(Q,1,1,1024,1,cr),J(T=Jr(nr,cr),nr,2,2,9),J(T+4096|0,wr,2,2,9),k=dr(nr,Q,4096),J(T=(cr=dr(Jr(k,2048+(W=k+2048|0)|0),T,8192))- -8192|0,k,1,1,9),J(T+4096|0,W,1,1,9),E(T=dr(k,cr,16384),9),E(ar=T+4096|0,9),E(Q=ar+4096|0,9),E(K=Q+4096|0,9),k=K+4096|0,x=0;256!=(0|x);)Pr=i[(_=(F=x+256<<3)+ar|0)>>2],nr=i[_+4>>2],fr=i[(lr=(_=x<<3)+K|0)>>2],lr=i[lr+4>>2],tr=i[(kr=_+ar|0)>>2],kr=i[kr+4>>2],Vr=i[(mr=F+K|0)>>2],Wr=i[mr+4>>2],mr=i[(Qr=T+F|0)>>2],Qr=i[Qr+4>>2],Ur=i[(Mr=Q+_|0)>>2],Mr=i[Mr+4>>2],wr=i[(Ir=T+_|0)>>2],Ir=i[Ir+4>>2],Rr=qr(i[(Rr=Q+F|0)>>2],i[Rr+4>>2]),Kr=g,AA=Gr(R(wr,Ir,Ur,Mr),g,R(mr,Qr,Rr,Kr),g),Yr=g,Ur=j(R(wr,Ir,Rr,Kr),g,R(mr,Qr,Ur,Mr),g),Mr=g,mr=qr(Vr,Wr),Qr=g,wr=Gr(R(tr,kr,fr,lr),g,R(Pr,nr,mr,Qr),g),Ir=g,Pr=j(R(tr,kr,mr,Qr),g,R(Pr,nr,fr,lr),g),nr=g,i[(_=k+_|0)>>2]=j(AA,Yr,wr,Ir),i[_+4>>2]=g,i[(F=k+F|0)>>2]=j(Ur,Mr,Pr,nr),i[F+4>>2]=g,x=x+1|0;$(x=k+4096|0,Q,K,9),er(k,x,9),S(k,9),F=0;n:{for(;512!=(0|F);){if(x=0,!Br(Pr=i[(_=k+(F<<3)|0)>>2],nr=i[_+4>>2],0,1138753536))break n;if(!Br(0,-1008730112,Pr,nr))break n;i[_>>2]=O(rr(Pr,nr),g),i[_+4>>2]=g,F=F+1|0}for(E(k,9),N(Q,k,9),N(K,k,9),gr(T,Q,9),gr(ar,K,9),S(T,9),S(ar,9),k=dr(cr,T,8192),F=0,x=1;;){if(512==(0|F))break n;K=k+(F<<3)|0,i[(Q=F<<2)+T>>2]=rr(i[K>>2],i[K+4>>2]),tr=Q+W|0,Q=k+(F+512<<3)|0,i[tr>>2]=rr(i[Q>>2],i[Q+4>>2]),F=F+1|0}}if(x){for(k=0,V(F=4096+(Q=4096+(x=2048+(K=n+2048|0)|0)|0)|0,ar=F+4096|0,10,383167813,2147473409,T=xr(2147473409));512!=(0|k);)i[(W=(_=k<<2)+n|0)>>2]=rA(Zr(W),2147473409),i[(_=K+_|0)>>2]=rA(Zr(_),2147473409),k=k+1|0;for(G(n,1,F,9,2147473409,T),G(K,1,F,9,2147473409,T),k=0;1024!=(0|k);)i[(_=k<<2)+x>>2]=rA(e[k+t|0],2147473409),i[Q+_>>2]=rA(e[k+s|0],2147473409),k=k+1|0;for(Pr=zr(2147473409,T),G(x,1,F,10,2147473409,T),G(Q,1,F,10,2147473409,T),k=0;k>>>0<1024;)cr=i[(W=(F=k<<2)+x|0)>>2],lr=i[(fr=(nr=4|F)+x|0)>>2],kr=i[(tr=Q+F|0)>>2],F=vr(i[(_=k<<1)+n>>2],Pr,2147473409,T),_=vr(i[K+_>>2],Pr,2147473409,T),mr=W,W=Q+nr|0,i[mr>>2]=vr(i[W>>2],F,2147473409,T),i[fr>>2]=vr(kr,F,2147473409,T),i[tr>>2]=vr(lr,_,2147473409,T),i[W>>2]=vr(cr,_,2147473409,T),k=k+2|0;for(Y(x,1,ar,10,2147473409,T),Y(Q,1,ar,10,2147473409,T),V(Q=4096+(cr=(_=dr(n,x,8192))+4096|0)|0,F=Q+4096|0,10,383167813,2147473409,T),G(_,1,Q,10,2147473409,T),G(cr,1,Q,10,2147473409,T),K=4096+(x=4096+(ar=F+4096|0)|0)|0,k=rA(e[0|t],2147473409),i[K>>2]=k,i[x>>2]=k,k=1;1024!=(0|k);)W=k+t|0,i[x+(k<<2)>>2]=rA(e[0|W],2147473409),i[K+(1024-k<<2)>>2]=rA(0-e[0|W]|0,2147473409),k=k+1|0;for(G(x,1,Q,10,2147473409,T),G(K,1,Q,10,2147473409,T),k=0;1024!=(0|k);)nr=vr(i[(W=k<<2)+K>>2],Pr,2147473409,T),i[F+W>>2]=vr(nr,i[W+_>>2],2147473409,T),i[W+ar>>2]=vr(nr,i[x+W>>2],2147473409,T),k=k+1|0;for(k=rA(e[0|s],2147473409),i[K>>2]=k,i[x>>2]=k,k=1;1024!=(0|k);)W=k+s|0,i[x+(k<<2)>>2]=rA(e[0|W],2147473409),i[K+(1024-k<<2)>>2]=rA(0-e[0|W]|0,2147473409),k=k+1|0;for(G(x,1,Q,10,2147473409,T),G(K,1,Q,10,2147473409,T),k=0;1024!=(0|k);)fr=i[(nr=(W=k<<2)+F|0)>>2],tr=nr,nr=vr(i[W+K>>2],Pr,2147473409,T),i[tr>>2]=Xr(fr,vr(nr,i[W+cr>>2],2147473409,T),2147473409),lr=i[(fr=W+ar|0)>>2],i[fr>>2]=Xr(lr,vr(nr,i[x+W>>2],2147473409,T),2147473409),k=k+1|0;for(V(Q,x,10,383167813,2147473409,T),Y(F,1,x,10,2147473409,T),Y(ar,1,x,10,2147473409,T),k=0;1024!=(0|k);)nr=(W=k<<2)+F|0,i[Q+W>>2]=Lr(i[nr>>2]),i[nr>>2]=Lr(i[W+ar>>2]),k=k+1|0;for(k=0,W=Jr(_,ar);1024!=(0|k);)nr=W+(k<<3)|0,fr=i[F+(k<<2)>>2],i[nr>>2]=O(fr,fr>>31),i[nr+4>>2]=g,k=k+1|0;for(E(W,10),W=(lr=dr(Jr(_,F),W,4096))+4096|0,k=0;1024!=(0|k);)nr=W+(k<<3)|0,fr=i[Q+(k<<2)>>2],i[nr>>2]=O(fr,fr>>31),i[nr+4>>2]=g,k=k+1|0;for(E(W,10),k=0;512!=(0|k);)fr=X(i[(fr=(nr=k<<3)+lr|0)>>2],i[fr+4>>2]),kr=tr=i[(nr=W+nr|0)>>2],tr=g,i[nr>>2]=R(kr,i[nr+4>>2],fr,tr),i[nr+4>>2]=g,fr=R(i[(nr=W+(k+512<<3)|0)>>2],i[nr+4>>2],fr,tr),i[nr>>2]=fr,i[nr+4>>2]=g,k=k+1|0;for(S(W,10),k=0;1024!=(0|k);)nr=W+(k<<3)|0,i[Q+(k<<2)>>2]=rA(rr(i[nr>>2],i[nr+4>>2]),2147473409),k=k+1|0;for(V(F,ar,10,383167813,2147473409,T),k=0;1024!=(0|k);)i[(W=k<<2)+x>>2]=rA(e[k+t|0],2147473409),i[W+K>>2]=rA(e[k+s|0],2147473409),k=k+1|0;for(G(Q,1,F,10,2147473409,T),G(x,1,F,10,2147473409,T),G(K,1,F,10,2147473409,T),k=0;1024!=(0|k);)nr=i[(W=(F=k<<2)+_|0)>>2],tr=W,W=vr(i[Q+F>>2],Pr,2147473409,T),i[tr>>2]=Nr(nr,vr(W,i[x+F>>2],2147473409,T),2147473409),fr=i[(nr=F+cr|0)>>2],i[nr>>2]=Nr(fr,vr(W,i[F+K>>2],2147473409,T),2147473409),k=k+1|0;for(Y(_,1,ar,10,2147473409,T),Y(cr,1,ar,10,2147473409,T),k=0;1024!=(0|k);)i[(x=(T=k<<2)+_|0)>>2]=Lr(i[x>>2]),i[(T=T+cr|0)>>2]=Lr(i[T>>2]),k=k+1|0;if(ur(b,n,C)&&ur(ar=d||n- -8192|0,x=n+4096|0,C)){for(V(Q=4096+(K=4096+(F=x+4096|0)|0)|0,n,10,383167813,2147473409,T=xr(2147473409)),Vr=0,k=0;;){if(1024==(0|k)){for(;1024!=(0|Vr);)i[(k=Vr<<2)+x>>2]=rA(e[Vr+t|0],2147473409),i[k+F>>2]=rA(e[Vr+s|0],2147473409),i[k+K>>2]=rA(e[Vr+b|0],2147473409),Vr=Vr+1|0;for(sA=1,G(x,1,Q,10,2147473409,T),G(F,1,Q,10,2147473409,T),G(K,1,Q,10,2147473409,T),G(n,1,Q,10,2147473409,T),k=0,ar=vr(12289,1,2147473409,T);;){if(1024==(0|k))break A;if(Q=k<<2,k=k+1|0,(0|Nr(vr(i[Q+x>>2],i[Q+n>>2],2147473409,T),vr(i[Q+F>>2],i[Q+K>>2],2147473409,T),2147473409))!=(0|ar))break}break}i[(k<<2)+n>>2]=rA(e[k+ar|0],2147473409),k=k+1|0}sA=0}}}if(sA)break}}}}if(eA(P),e[0|A]=90,Q=-1,(k=Z(A+1|0,2304,t,T=a[1308]))&&(k=Z((x=k+1|0)+A|0,2304-k|0,u+4160|0,T))&&!(!(k=Z((T=A)+(A=k+x|0)|0,2305-A|0,u+3136|0,a[1319]))|2305!=(A+k|0))){e[0|r]=10,A=r+1|0,T=u- -64|0,r=0,Q=0;r:{A:{for(;;){if(1024!=(0|r)){if(k=r<<1,r=r+1|0,o[k+T>>1]<=12288)continue;break A}break}if(A){for(k=0,r=0;1024!=(0|k);){for(Q=o[T+(k<<1)>>1]|Q<<14,r=r+14|0;(0|r)>=8;)r=r-8|0,e[0|A]=Q>>>r,A=A+1|0;k=k+1|0}(0|r)<=0||(e[0|A]=Q<<8-r)}r=1792;break r}r=0}Q=1792!=(0|r)?-1:0}return w=u+34880|0,0|Q},o:function(r,A,n,t,u){r|=0,A|=0,n|=0,t|=0,u|=0;var s,l,P,v,y=0,D=0,b=0,d=0,h=0,k=0,j=0,p=0,m=0,Q=0,I=0,x=0,U=0,R=0;if(w=l=(w=P=w-16|0)-16|0,i[l+12>>2]=1287,p=r+1|0,v=r+41|0,w=s=w-79936|0,b=-1,90==a[0|u]&&(d=_(s+5184|0,h=a[1308],u+1|0,2304))&&(d=_(s+4160|0,D=h,(h=d+1|0)+u|0,2304-d|0))&&(D=u,u=d+h|0,!(!(d=_(s+3136|0,a[1319],D+u|0,2305-u|0))|2305!=(u+d|0)))){for(h=s+2112|0,D=s+5184|0,k=s+4160|0,Q=s+3136|0,d=2048+(u=s+6208|0)|0;1024!=(0|y);)f[(m=y<<1)+u>>1]=$r(e[y+k|0]),f[d+m>>1]=$r(e[y+Q|0]),y=y+1|0;for(q(u),q(d),Ur(u),Ir(u,d),y=0;1024!=(0|y);)f[d+(y<<1)>>1]=$r(e[y+D|0]),y=y+1|0;q(d),y=0;r:{A:{for(;1024!=(0|y);){if(!(k=o[(D=y<<1)+d>>1]))break A;f[(D=u+D|0)>>1]=Dr(o[D>>1],k),y=y+1|0}for(H(u),y=0,d=1;;){if(1024==(0|y))break r;if(128+(D=(D=o[u+(y<<1)>>1])+(D-6144>>31|-12290)|0)>>>0>254)break A;e[y+h|0]=D+1,y=y+1|0}}d=0}if(d){for(pr(p,40),sr(u=s+8|0),z(u,p,40),z(u,n,t),Ar(u),T(u,s- -64|0,s+6208|0),eA(u),pr(n=s+16|0,48),sr(u),z(u,n,48),Ar(u);;){for(p=s- -64|0,U=s+8|0,Q=s+5184|0,m=s+4160|0,I=s+3136|0,x=s+2112|0,t=s+6208|0,w=h=w-800|0;;){for(i[h+792>>2]=794350117,i[h+796>>2]=1073020125,w=u=w+-64|0,F(u,56,U),y=520+(k=h+8|0)|0,n=0;14!=(0|n);)i[(b=n<<2)+y>>2]=i[u+b>>2],n=n+1|0;for(C(k),w=u- -64|0,Sr(y=t- -8192|0,Q),Sr(t,m),Sr(d=(b=y- -8192|0)- -8192|0,I),Sr(b,x),E(y,10),E(t,10),E(d,10),E(b,10),Qr(y),Qr(d),ar(n=Fr(d- -8192|0,y,8192)),K(u=Fr(n- -8192|0,t,8192),b),ar(t),yr(t,n,10),D=Fr(n,y,8192),K(y,d),yr(y,u,10),ar(b),ar(u=Fr(u,d,8192)),yr(b,u,10),n=0;1024!=(0|n);)i[(j=u+(n<<3)|0)>>2]=O(o[p+(n<<1)>>1],0),i[j+4>>2]=g,n=n+1|0;for(E(u,10),N(j=Fr(u- -8192|0,u,8192),D,10),Tr(j,qr(-1869109374,1058362595),g),N(u,d,10),Tr(u,-1869109374,1058362595),B(k,n=Fr(d,u,16384),D,t,y,b,10,u),D=dr(D,n,16384),Sr(y,Q),Sr(t,m),Sr(n,I),Sr(b,x),E(y,10),E(t,10),E(n,10),E(b,10),Qr(y),Qr(n),d=Fr(j,D,8192),k=Fr(d- -8192|0,u,8192),N(d,t,10),N(k,b,10),yr(d,k,10),N(b=Fr(k,D,8192),y,10),k=Fr(D,d,8192),N(u,n,10),yr(u,b,10),S(k,10),S(u,10),b=0,y=0,n=0;1024!=(0|n);)D=k+(n<<3)|0,D=o[(j=n<<1)+p>>1]-rr(i[D>>2],i[D+4>>2])|0,f[d+j>>1]=D,y|=b=c(D,D)+b|0,n=n+1|0;for(y>>=31,n=0;1024!=(0|n);)D=u+(n<<3)|0,f[t+(n<<1)>>1]=0-rr(i[D>>2],i[D+4>>2]),n=n+1|0;for(n=0,y=(u=y|b)>>31;!(n>>>10|0);)D=u,u=f[t+(n<<1)>>1],y|=u=D+c(u,u)|0,n=n+1|0;if((y>>31|u)>>>0<87067565?(Fr(p,t,2048),Fr(t,d,2048),n=1):n=0,n)break}w=h+800|0,d=i[l+12>>2],b=0,n=0,y=0;r:{A:{for(;;){if(1024!=(0|b)){if(t=b<<1,b=b+1|0,(o[t+p>>1]+2047&65535)>>>0<=4094)continue;break A}t=0,b=0;break}for(;;){n:{if(1024!=(0|y))for(n=(127&(D=(h=(u=f[p+(y<<1)>>1])>>31)^u+h)|u>>>8&128|n<<8)<<(h=1+((65408&D)>>>7|0)|0)|1,b=8+(b+h|0)|0;;){if(b>>>0<8)break n;if(b=b-8|0,v){if(t>>>0>=d>>>0)break A;e[t+v|0]=n>>>b}t=t+1|0}if(!b)break r;e:{if(v){if(u=0,t>>>0>=d>>>0)break e;e[t+v|0]=n<<8-b}u=t+1|0}t=u;break r}y=y+1|0}}t=0}if(t)break}eA(s+8|0),i[l+12>>2]=t,b=0}}return w=s+79936|0,(0|b)<0?R=-1:(e[0|r]=58,i[P+12>>2]=i[l+12>>2]+41),w=l+16|0,i[A>>2]=i[P+12>>2],w=P+16|0,0|R},p:function(r,A,n,e,t){A|=0,n|=0,e|=0,t|=0;var i=0,u=0,s=0,l=0,P=0,v=0,y=0,g=0,D=0,b=0;if(g=-1,!(58!=a[0|(r|=0)]|A>>>0<41)){if(b=r+1|0,D=r+41|0,v=A-41|0,w=A=w-8208|0,10==a[0|t]){P=A+4112|0,i=t+1|0,t=0;r:{for(;;){y=u>>>10|0;A:{for(;;){if(r=t,y)break A;if(t=r+8|0,s=a[0|i]|s<<8,i=i+1|0,!((0|r)<6))break}if((r=s>>>(t=r-6|0)&16383)>>>0>12288)break r;f[P+(u<<1)>>1]=r,u=u+1|0;continue}break}l=(-1<<r^-1)&s?0:1792}if(1792==(0|l)&&(q(r=A+4112|0),Ur(r),v)){t=A+16|0,u=0,s=0,i=0,r=0;r:{for(;;){if(r>>>10|0)break r;A:if(!(u>>>0>=v>>>0)){for(l=127&(P=(s=a[u+D|0]|s<<8)>>>i|0),P&=128,u=u+1|0;;){if(!i){if(u>>>0>=v>>>0)break A;s=a[u+D|0]|s<<8,i=8,u=u+1|0}if(s>>>(i=i-1|0)&1)break;if(y=l>>>0>1919,l=l+128|0,y)break A}f[t+(r<<1)>>1]=P?0-l|0:l,r=r+1|0;continue}break}u=0}if((0|u)==(0|v)){for(sr(r=A+8|0),z(r,b,40),z(r,n,e),Ar(r),T(r,t=A+2064|0,e=A+6160|0),eA(r),u=A+16|0,i=A+4112|0,r=0;1024!=(0|r);)n=f[(s=r<<1)+u>>1],f[e+s>>1]=(n>>>15&12289)+n,r=r+1|0;for(q(e),Ir(e,i),H(e),n=0;!(n>>>10|0);)f[(i=(r=n<<1)+e|0)>>1]=Wr(o[i>>1],o[r+t>>1]),n=n+1|0;for(r=0;1024!=(0|r);)n=o[(t=e+(r<<1)|0)>>1],f[t>>1]=(n>>>0>6144?-12289:0)+n,r=r+1|0;for(n=0,r=0,t=0;!(t>>>10|0);)s=n,i=f[(n=t<<1)+e>>1],i=s+c(i,i)|0,n=f[n+u>>1],r=(n=i+c(n,n)|0)|r|i,t=t+1|0;g=(r>>31|n)>>>0<87067565?0:-1}}}w=A+8208|0}return 0|g},q:function(){return 0|w},r:function(r){w=r|=0},s:function(r){return w=r=w-(r|=0)&-16,0|r},t:function(r){u[(y=r|=0)>>2]>u[y+4>>2]&&s()},u:Kr,v:function(r){u[(y=r|=0)>>2]>u[y+4>>2]&&s()},w:Kr}}(r)}(nr)},instantiate:function(r,A){return{then:function(A){var n=new h.Module(r);A({instance:new h.Instance(n)})}}},RuntimeError:Error};D=[],\"object\"!=typeof h&&Y(\"no native wasm support detected\");var C,B=!1;function k(r,A){r||Y(A)}var j,p,m,S,T,z=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function E(r,A){return r?function(r,A,n){for(var e=A+n,t=A;r[t]&&!(t>=e);)++t;if(t-A>16&&r.subarray&&z)return z.decode(r.subarray(A,t));for(var f=\"\";A<t;){var i=r[A++];if(128&i){var a=63&r[A++];if(192!=(224&i)){var o=63&r[A++];if((i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&r[A++])<65536)f+=String.fromCharCode(i);else{var u=i-65536;f+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else f+=String.fromCharCode((31&i)<<6|a)}else f+=String.fromCharCode(i)}return f}(m,r,A):\"\"}function Q(r,A){p.set(r,A)}var I,x=16777216;(d=new h.Memory({initial:x/65536,maximum:x/65536}))&&(j=d.buffer),x=j.byteLength,j=I=j,e.HEAP8=p=new Int8Array(I),e.HEAP16=new Int16Array(I),e.HEAP32=S=new Int32Array(I),e.HEAPU8=m=new Uint8Array(I),e.HEAPU16=new Uint16Array(I),e.HEAPU32=new Uint32Array(I),e.HEAPF32=new Float32Array(I),e.HEAPF64=T=new Float64Array(I);var U=[],F=[],R=[],O=0,H=null,M=null;function Y(r){b(r=\"Aborted(\"+r+\")\"),B=!0,C=1,r+=\". Build with -s ASSERTIONS=1 for more info.\";var A=new h.RuntimeError(r);throw n(A),A}e.preloadedImages={},e.preloadedAudios={};var J,L,V=\"data:application/octet-stream;base64,\";function G(r){return r.startsWith(V)}function X(r){return r.startsWith(\"file://\")}function Z(r){try{if(r==J&&D)return new Uint8Array(D);var A=rr(r);if(A)return A;if(a)return a(r);throw\"both async and sync fetching of the wasm failed\"}catch(r){Y(r)}}G(J=\"<<< WASM_BINARY_FILE >>>\")||(L=J,J=e.locateFile?e.locateFile(L,g):g+L);var W={31028:function(){return e.getRandomValue()},31064:function(){if(void 0===e.getRandomValue)try{var r=\"object\"==typeof window?window:self,A=void 0!==r.crypto?r.crypto:r.msCrypto,n=function(){var r=new Uint32Array(1);return A.getRandomValues(r),r[0]>>>0};n(),e.getRandomValue=n}catch(r){try{var t=require(\"crypto\"),f=function(){var r=t.randomBytes(4);return(r[0]<<24|r[1]<<16|r[2]<<8|r[3])>>>0};f(),e.getRandomValue=f}catch(r){throw\"No secure random number generator found\"}}}};function N(r){for(;r.length>0;){var A=r.shift();if(\"function\"!=typeof A){var n=A.func;\"number\"==typeof n?void 0===A.arg?dynCall_v.call(null,n):(t=A.arg,dynCall_vi.apply(null,[n,t])):n(void 0===A.arg?null:A.arg)}else A(e)}var t}var q=[];function K(r){try{return r()}catch(r){Y(r)}}var _={State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(r){var A=_.callStackNameToId[r];return void 0===A&&(A=_.callStackId++,_.callStackNameToId[r]=A,_.callStackIdToName[A]=r),A},instrumentWasmExports:function(r){var A={};for(var n in r)!function(n){var e=r[n];A[n]=\"function\"==typeof e?function(){_.exportCallStack.push(n);try{return e.apply(null,arguments)}finally{if(!B){var r=_.exportCallStack.pop();k(r===n),_.maybeStopUnwind()}}}:e}(n);return A},maybeStopUnwind:function(){_.currData&&_.state===_.State.Unwinding&&0===_.exportCallStack.length&&(_.state=_.State.Normal,K(e._asyncify_stop_unwind),\"undefined\"!=typeof Fibers&&Fibers.trampoline())},whenDone:function(){return new Promise(((r,A)=>{_.asyncPromiseHandlers={resolve:r,reject:A}}))},allocateData:function(){var r=er(12+_.StackSize);return _.setDataHeader(r,r+12,_.StackSize),_.setDataRewindFunc(r),r},setDataHeader:function(r,A,n){S[r>>2]=A,S[r+4>>2]=A+n},setDataRewindFunc:function(r){var A=_.exportCallStack[0],n=_.getCallStackId(A);S[r+8>>2]=n},getDataRewindFunc:function(r){var A=S[r+8>>2],n=_.callStackIdToName[A];return e.asm[n]},doRewind:function(r){return _.getDataRewindFunc(r)()},handleSleep:function(r){if(!B){if(_.state===_.State.Normal){var A=!1,n=!1;r((r=>{if(!B&&(_.handleSleepReturnValue=r||0,A=!0,n)){_.state=_.State.Rewinding,K((()=>e._asyncify_start_rewind(_.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.resume();var t,f=!1;try{t=_.doRewind(_.currData)}catch(r){t=r,f=!0}var i=!1;if(!_.currData){var a=_.asyncPromiseHandlers;a&&(_.asyncPromiseHandlers=null,(f?a.reject:a.resolve)(t),i=!0)}if(f&&!i)throw t}})),n=!0,A||(_.state=_.State.Unwinding,_.currData=_.allocateData(),K((()=>e._asyncify_start_unwind(_.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.pause())}else _.state===_.State.Rewinding?(_.state=_.State.Normal,K(e._asyncify_stop_rewind),tr(_.currData),_.currData=null,_.sleepCallbacks.forEach((r=>function(r,A){if(!B)if(A)r();else try{r()}catch(r){!function(r){if(r instanceof or||\"unwind\"==r)return C;P(1,r)}(r)}}(r)))):Y(\"invalid state: \"+_.state);return _.handleSleepReturnValue}},handleAsync:function(r){return _.handleSleep((A=>{r().then(A)}))}},$=\"function\"==typeof atob?atob:function(r){var A,n,e,t,f,i,a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",u=0;r=r.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{A=a.indexOf(r.charAt(u++))<<2|(t=a.indexOf(r.charAt(u++)))>>4,n=(15&t)<<4|(f=a.indexOf(r.charAt(u++)))>>2,e=(3&f)<<6|(i=a.indexOf(r.charAt(u++))),o+=String.fromCharCode(A),64!==f&&(o+=String.fromCharCode(n)),64!==i&&(o+=String.fromCharCode(e))}while(u<r.length);return o};function rr(r){if(G(r))return function(r){if(\"boolean\"==typeof y&&y){var A=Buffer.from(r,\"base64\");return new Uint8Array(A.buffer,A.byteOffset,A.byteLength)}try{for(var n=$(r),e=new Uint8Array(n.length),t=0;t<n.length;++t)e[t]=n.charCodeAt(t);return e}catch(r){throw new Error(\"Converting base64 string to bytes failed.\")}}(r.slice(V.length))}var Ar,nr={d:function(r,A,n,e){Y(\"Assertion failed: \"+E(r)+\", at: \"+[A?E(A):\"unknown filename\",n,e?E(e):\"unknown function\"])},__asyncjs__aes_ctr_subtle_crypto:function(r,A,n,t,f,i,a){return _.handleAsync((async()=>{const o=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,n,t<<4)),u=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,i,a)),c=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,f,16)),s=await e.subtleCrypto.importKey(\"raw\",u.buffer,\"AES-CTR\",!1,[\"encrypt\"]),l=await e.subtleCrypto.encrypt({name:\"AES-CTR\",counter:c.buffer,length:32},s,o.buffer);Q(new Uint8Array(l).slice(0,A),r)}))},__asyncjs__sha256_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-256\",t);Q(new Uint8Array(f),r)}))},__asyncjs__sha384_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-384\",t);Q(new Uint8Array(f),r)}))},__asyncjs__sha512_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-512\",t);Q(new Uint8Array(f),r)}))},b:function(r,A,n){var e=function(r,A){var n;for(q.length=0,A>>=2;n=m[r++];){var e=n<105;e&&1&A&&A++,q.push(e?T[A++>>1]:S[A]),++A}return q}(A,n);return W[r].apply(null,e)},c:function(r){m.length,Y(\"OOM\")},e:function(r){!function(r,A){var n;C=r,C=n=r,P(n,new or(n))}(r)},a:d},er=(function(){var r={a:nr};function A(r,A){var n,t=r.exports;t=_.instrumentWasmExports(t),e.asm=t,e.asm.i,n=e.asm.f,F.unshift(n),function(r){if(0==--O&&(null!==H&&(clearInterval(H),H=null),M)){var A=M;M=null,A()}}()}function t(r){A(r.instance)}function f(A){return function(){if(!D&&(v||w)){if(\"function\"==typeof fetch&&!X(J))return fetch(J,{credentials:\"same-origin\"}).then((function(r){if(!r.ok)throw\"failed to load wasm binary file at '\"+J+\"'\";return r.arrayBuffer()})).catch((function(){return Z(J)}));if(i)return new Promise((function(r,A){i(J,(function(A){r(new Uint8Array(A))}),A)}))}return Promise.resolve().then((function(){return Z(J)}))}().then((function(A){return h.instantiate(A,r)})).then((function(r){return r})).then(A,(function(r){b(\"failed to asynchronously prepare wasm: \"+r),Y(r)}))}if(O++,e.instantiateWasm)try{var a=e.instantiateWasm(r,A);return _.instrumentWasmExports(a)}catch(r){return b(\"Module.instantiateWasm callback failed with error: \"+r),!1}(D||\"function\"!=typeof h.instantiateStreaming||G(J)||X(J)||\"function\"!=typeof fetch?f(t):fetch(J,{credentials:\"same-origin\"}).then((function(A){return h.instantiateStreaming(A,r).then(t,(function(r){return b(\"wasm streaming compile failed: \"+r),b(\"falling back to ArrayBuffer instantiation\"),f(t)}))}))).catch(n)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.f).apply(null,arguments)},e._malloc=function(){return(er=e._malloc=e.asm.g).apply(null,arguments)}),tr=e._free=function(){return(tr=e._free=e.asm.h).apply(null,arguments)},fr=(e._sign_init=function(){return(e._sign_init=e.asm.j).apply(null,arguments)},e._sign_public_key_bytes=function(){return(e._sign_public_key_bytes=e.asm.k).apply(null,arguments)},e._sign_private_key_bytes=function(){return(e._sign_private_key_bytes=e.asm.l).apply(null,arguments)},e._sign_signature_bytes=function(){return(e._sign_signature_bytes=e.asm.m).apply(null,arguments)},e._sign_keypair=function(){return(e._sign_keypair=e.asm.n).apply(null,arguments)},e._sign_signature=function(){return(e._sign_signature=e.asm.o).apply(null,arguments)},e._sign_verify=function(){return(e._sign_verify=e.asm.p).apply(null,arguments)},e.stackSave=function(){return(fr=e.stackSave=e.asm.q).apply(null,arguments)}),ir=e.stackRestore=function(){return(ir=e.stackRestore=e.asm.r).apply(null,arguments)},ar=e.stackAlloc=function(){return(ar=e.stackAlloc=e.asm.s).apply(null,arguments)};function or(r){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+r+\")\",this.status=r}function ur(r){r=r||l,O>0||(N(U),O>0||Ar||(Ar=!0,e.calledRun=!0,B||(N(F),A(e),N(R))))}return e._asyncify_start_unwind=function(){return(e._asyncify_start_unwind=e.asm.t).apply(null,arguments)},e._asyncify_stop_unwind=function(){return(e._asyncify_stop_unwind=e.asm.u).apply(null,arguments)},e._asyncify_start_rewind=function(){return(e._asyncify_start_rewind=e.asm.v).apply(null,arguments)},e._asyncify_stop_rewind=function(){return(e._asyncify_stop_rewind=e.asm.w).apply(null,arguments)},e.ccall=function(r,A,n,t,f){var i={string:function(r){var A=0;if(null!=r&&0!==r){var n=1+(r.length<<2);!function(r,A,n){!function(r,A,n,e){if(!(e>0))return 0;for(var t=n+e-1,f=0;f<r.length;++f){var i=r.charCodeAt(f);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&r.charCodeAt(++f)),i<=127){if(n>=t)break;A[n++]=i}else if(i<=2047){if(n+1>=t)break;A[n++]=192|i>>6,A[n++]=128|63&i}else if(i<=65535){if(n+2>=t)break;A[n++]=224|i>>12,A[n++]=128|i>>6&63,A[n++]=128|63&i}else{if(n+3>=t)break;A[n++]=240|i>>18,A[n++]=128|i>>12&63,A[n++]=128|i>>6&63,A[n++]=128|63&i}}A[n]=0}(r,m,A,n)}(r,A=ar(n),n)}return A},array:function(r){var A=ar(r.length);return Q(r,A),A}},a=function(r){return e[\"_\"+r]}(r),o=[],u=0;if(t)for(var c=0;c<t.length;c++){var s=i[n[c]];s?(0===u&&(u=fr()),o[c]=s(t[c])):o[c]=t[c]}var l=a.apply(null,o);function P(r){return 0!==u&&ir(u),function(r){return\"string\"===A?E(r):\"boolean\"===A?Boolean(r):r}(r)}var v=f&&f.async;return _.currData?_.whenDone().then(P):(l=P(l),v?Promise.resolve(l):l)},e.writeArrayToMemory=Q,M=function r(){Ar||ur(),Ar||(M=r)},e.run=ur,ur(),r.ready},i=new class{current;constructor(){this.current=Promise.resolve()}lock(){let r;const A=new Promise((A=>{r=()=>A()})),n=this.current.then((()=>r));return this.current=A,n}},a=async function(r=!1,n){let e,t,a,o={};if(n&&(o.locateFile=()=>n),r)o=await f(o);else try{o=await A(o)}catch(r){console.log(\"Failed to initialize SIGN WASM, using fallback instead\"),o=await f(o)}function u(r,A){if(0===r)return A;throw new Error(`SIGN error: ${r}`)}function c(r,A){return new Uint8Array(new Uint8Array(o.HEAPU8.buffer,r,A))}function s(r){try{o._free(r)}catch(r){setTimeout((()=>{throw r}),0)}}o.subtleCrypto||(o.subtleCrypto=self.crypto.subtle);const l=o.ready.then((()=>{o._sign_init(),e=o._sign_public_key_bytes(),t=o._sign_private_key_bytes(),a=o._sign_signature_bytes()}));return{publicKeyBytes:l.then((()=>e)),privateKeyBytes:l.then((()=>t)),signatureBytes:l.then((()=>a)),keypair:async()=>{const r=await i.lock();return l.then((async()=>{const A=o._malloc(e),n=o._malloc(t);try{return u(await o.ccall(\"sign_keypair\",\"number\",[\"number\",\"number\"],[A,n],{async:!0}),{publicKey:c(A,e),privateKey:c(n,t)})}finally{r(),s(A),s(n)}}))},sign:async(r,A)=>{const n=await i.lock();return l.then((async()=>{const e=o._malloc(a),f=o._malloc(8),i=o._malloc(r.length),l=o._malloc(t);o.writeArrayToMemory(r,i),o.writeArrayToMemory(A,l);try{return u(await o.ccall(\"sign_signature\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"],[e,f,i,r.byteLength,l],{async:!0}),{signature:c(e,new Uint32Array(o.HEAPU32.buffer,f,1)[0])})}finally{n(),s(e),s(f),s(i),s(l)}}))},verify:async(r,A,n)=>{const t=await i.lock();return l.then((async()=>{const f=o._malloc(r.length),i=o._malloc(A.length),a=o._malloc(e);o.writeArrayToMemory(r,f),o.writeArrayToMemory(A,i),o.writeArrayToMemory(n,a);try{return 0===await o.ccall(\"sign_verify\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"],[f,r.byteLength,i,A.byteLength,a],{async:!0})}finally{t(),s(f),s(i),s(a)}}))}}}})();var t=e.Z;\n\n//# sourceURL=webpack:///./PQC_WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js?");

/***/ }),

/***/ "./PQC WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js":
/*!*********************************************************************************!*\
  !*** ./PQC WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ t)\n/* harmony export */ });\nvar r={124:(r,A,n)=>{r.exports=n.p+\"pqc-sign-falcon-512.wasm\"},858:r=>{var A,n,e=r.exports={};function t(){throw new Error(\"setTimeout has not been defined\")}function f(){throw new Error(\"clearTimeout has not been defined\")}function i(r){if(A===setTimeout)return setTimeout(r,0);if((A===t||!A)&&setTimeout)return A=setTimeout,setTimeout(r,0);try{return A(r,0)}catch(n){try{return A.call(null,r,0)}catch(n){return A.call(this,r,0)}}}!function(){try{A=\"function\"==typeof setTimeout?setTimeout:t}catch(r){A=t}try{n=\"function\"==typeof clearTimeout?clearTimeout:f}catch(r){n=f}}();var a,o=[],u=!1,c=-1;function s(){u&&a&&(u=!1,a.length?o=a.concat(o):c=-1,o.length&&l())}function l(){if(!u){var r=i(s);u=!0;for(var A=o.length;A;){for(a=o,o=[];++c<A;)a&&a[c].run();c=-1,A=o.length}a=null,u=!1,function(r){if(n===clearTimeout)return clearTimeout(r);if((n===f||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(r);try{n(r)}catch(A){try{return n.call(null,r)}catch(A){return n.call(this,r)}}}(r)}}function P(r,A){this.fun=r,this.array=A}function v(){}e.nextTick=function(r){var A=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)A[n-1]=arguments[n];o.push(new P(r,A)),1!==o.length||u||i(l)},P.prototype.run=function(){this.fun.apply(null,this.array)},e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.version=\"\",e.versions={},e.on=v,e.addListener=v,e.once=v,e.off=v,e.removeListener=v,e.removeAllListeners=v,e.emit=v,e.prependListener=v,e.prependOnceListener=v,e.listeners=function(r){return[]},e.binding=function(r){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(r){throw new Error(\"process.chdir is not supported\")},e.umask=function(){return 0}}},A={};function n(e){var t=A[e];if(void 0!==t)return t.exports;var f=A[e]={exports:{}};return r[e](f,f.exports,n),f.exports}n.m=r,n.d=(r,A)=>{for(var e in A)n.o(A,e)&&!n.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:A[e]})},n.o=(r,A)=>Object.prototype.hasOwnProperty.call(r,A),(()=>{var r;if( true&&(r=\"file:///D:/PQC%20PROJECT/COMP3000HK24_25_NgKaHung/PQC%20WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js\"),!r)throw new Error(\"Automatic publicPath is not supported in this browser\");r=r.replace(/#.*$/,\"\").replace(/\\?.*$/,\"\").replace(/\\/[^\\/]+$/,\"/\"),n.p=r})(),n.b= false||self.location.href;var e={};(()=>{n.d(e,{Z:()=>a});var r=n(858);const A=function(A){var e,t,f=void 0!==(A=A||{})?A:{};f.ready=new Promise((function(r,A){e=r,t=A}));var i,a,o,u,c,s,l=Object.assign({},f),P=[],v=(r,A)=>{throw A},w=\"object\"==typeof window,y=\"function\"==typeof importScripts,g=\"\";\"object\"==typeof r&&\"object\"==typeof r.versions&&\"string\"==typeof r.versions.node?(g=y?require(\"path\").dirname(g)+\"/\":__dirname+\"/\",s=()=>{c||(u=require(\"fs\"),c=require(\"path\"))},i=function(r,A){return s(),r=c.normalize(r),u.readFileSync(new URL(r),A?void 0:\"utf8\")},o=r=>{var A=i(r,!0);return A.buffer||(A=new Uint8Array(A)),A},a=(r,A,n)=>{s(),r=c.normalize(r),u.readFile(r,(function(r,e){r?n(r):A(e.buffer)}))},r.argv.length>1&&r.argv[1].replace(/\\\\/g,\"/\"),P=r.argv.slice(2),r.on(\"uncaughtException\",(function(r){if(!(r instanceof $))throw r})),r.on(\"unhandledRejection\",(function(r){throw r})),v=(A,n)=>{throw r.exitCode=A,n},f.inspect=function(){return\"[Emscripten Module object]\"}):(w||y)&&(y?g=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),g=0!==g.indexOf(\"blob:\")?g.substr(0,g.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",i=r=>{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.send(null),A.responseText},y&&(o=r=>{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.responseType=\"arraybuffer\",A.send(null),new Uint8Array(A.response)}),a=(r,A,n)=>{var e=new XMLHttpRequest;e.open(\"GET\",r,!0),e.responseType=\"arraybuffer\",e.onload=()=>{200==e.status||0==e.status&&e.response?A(e.response):n()},e.onerror=n,e.send(null)}),console.log.bind(console);var D=console.warn.bind(console);Object.assign(f,l),l=null,\"object\"!=typeof WebAssembly&&R(\"no native wasm support detected\");var b,d=!1;function h(r,A){r||R(A)}var C,B,k,j,p=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function m(r,A){return r?function(r,A,n){for(var e=A+n,t=A;r[t]&&!(t>=e);)++t;if(t-A>16&&r.subarray&&p)return p.decode(r.subarray(A,t));for(var f=\"\";A<t;){var i=r[A++];if(128&i){var a=63&r[A++];if(192!=(224&i)){var o=63&r[A++];if((i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&r[A++])<65536)f+=String.fromCharCode(i);else{var u=i-65536;f+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else f+=String.fromCharCode((31&i)<<6|a)}else f+=String.fromCharCode(i)}return f}(B,r,A):\"\"}function S(r,A){C.set(r,A)}var T,z,E=[],Q=[],I=[],x=0,U=null,F=null;function R(r){D(r=\"Aborted(\"+r+\")\"),d=!0,b=1,r+=\". Build with -s ASSERTIONS=1 for more info.\";var A=new WebAssembly.RuntimeError(r);throw t(A),A}function O(r){return r.startsWith(\"data:application/octet-stream;base64,\")}function H(r){return r.startsWith(\"file://\")}function M(r){try{if(o)return o(r);throw\"both async and sync fetching of the wasm failed\"}catch(r){R(r)}}f.preloadedImages={},f.preloadedAudios={},f.locateFile?O(T=\"sign.wasm.wasm\")||(z=T,T=f.locateFile?f.locateFile(z,g):g+z):T=new URL(n(124),n.b).toString();var Y={30900:function(){return f.getRandomValue()},30936:function(){if(void 0===f.getRandomValue)try{var r=\"object\"==typeof window?window:self,A=void 0!==r.crypto?r.crypto:r.msCrypto,n=function(){var r=new Uint32Array(1);return A.getRandomValues(r),r[0]>>>0};n(),f.getRandomValue=n}catch(r){try{var e=require(\"crypto\"),t=function(){var r=e.randomBytes(4);return(r[0]<<24|r[1]<<16|r[2]<<8|r[3])>>>0};t(),f.getRandomValue=t}catch(r){throw\"No secure random number generator found\"}}}};function J(r){for(;r.length>0;){var A=r.shift();if(\"function\"!=typeof A){var n=A.func;\"number\"==typeof n?void 0===A.arg?dynCall_v.call(null,n):(e=A.arg,dynCall_vi.apply(null,[n,e])):n(void 0===A.arg?null:A.arg)}else A(f)}var e}var L=[];function V(r){try{return r()}catch(r){R(r)}}var G,X={State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(r){var A=X.callStackNameToId[r];return void 0===A&&(A=X.callStackId++,X.callStackNameToId[r]=A,X.callStackIdToName[A]=r),A},instrumentWasmExports:function(r){var A={};for(var n in r)!function(n){var e=r[n];A[n]=\"function\"==typeof e?function(){X.exportCallStack.push(n);try{return e.apply(null,arguments)}finally{if(!d){var r=X.exportCallStack.pop();h(r===n),X.maybeStopUnwind()}}}:e}(n);return A},maybeStopUnwind:function(){X.currData&&X.state===X.State.Unwinding&&0===X.exportCallStack.length&&(X.state=X.State.Normal,V(f._asyncify_stop_unwind),\"undefined\"!=typeof Fibers&&Fibers.trampoline())},whenDone:function(){return new Promise(((r,A)=>{X.asyncPromiseHandlers={resolve:r,reject:A}}))},allocateData:function(){var r=W(12+X.StackSize);return X.setDataHeader(r,r+12,X.StackSize),X.setDataRewindFunc(r),r},setDataHeader:function(r,A,n){k[r>>2]=A,k[r+4>>2]=A+n},setDataRewindFunc:function(r){var A=X.exportCallStack[0],n=X.getCallStackId(A);k[r+8>>2]=n},getDataRewindFunc:function(r){var A=k[r+8>>2],n=X.callStackIdToName[A];return f.asm[n]},doRewind:function(r){return X.getDataRewindFunc(r)()},handleSleep:function(r){if(!d){if(X.state===X.State.Normal){var A=!1,n=!1;r((r=>{if(!d&&(X.handleSleepReturnValue=r||0,A=!0,n)){X.state=X.State.Rewinding,V((()=>f._asyncify_start_rewind(X.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.resume();var e,t=!1;try{e=X.doRewind(X.currData)}catch(r){e=r,t=!0}var i=!1;if(!X.currData){var a=X.asyncPromiseHandlers;a&&(X.asyncPromiseHandlers=null,(t?a.reject:a.resolve)(e),i=!0)}if(t&&!i)throw e}})),n=!0,A||(X.state=X.State.Unwinding,X.currData=X.allocateData(),V((()=>f._asyncify_start_unwind(X.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.pause())}else X.state===X.State.Rewinding?(X.state=X.State.Normal,V(f._asyncify_stop_rewind),N(X.currData),X.currData=null,X.sleepCallbacks.forEach((r=>function(r,A){if(!d)if(A)r();else try{r()}catch(r){!function(r){if(r instanceof $||\"unwind\"==r)return b;v(1,r)}(r)}}(r)))):R(\"invalid state: \"+X.state);return X.handleSleepReturnValue}},handleAsync:function(r){return X.handleSleep((A=>{r().then(A)}))}},Z={d:function(r,A,n,e){R(\"Assertion failed: \"+m(r)+\", at: \"+[A?m(A):\"unknown filename\",n,e?m(e):\"unknown function\"])},__asyncjs__aes_ctr_subtle_crypto:function(r,A,n,e,t,i,a){return X.handleAsync((async()=>{const o=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,n,e<<4)),u=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,i,a)),c=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,t,16)),s=await f.subtleCrypto.importKey(\"raw\",u.buffer,\"AES-CTR\",!1,[\"encrypt\"]),l=await f.subtleCrypto.encrypt({name:\"AES-CTR\",counter:c.buffer,length:32},s,o.buffer);S(new Uint8Array(l).slice(0,A),r)}))},__asyncjs__sha256_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-256\",e);S(new Uint8Array(t),r)}))},__asyncjs__sha384_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-384\",e);S(new Uint8Array(t),r)}))},__asyncjs__sha512_subtle_crypto:function(r,A,n){return X.handleAsync((async()=>{const e=new Uint8Array(new Uint8Array(f.HEAPU8.buffer,A,n)).buffer,t=await f.subtleCrypto.digest(\"SHA-512\",e);S(new Uint8Array(t),r)}))},a:function(r,A,n){var e=function(r,A){var n;for(L.length=0,A>>=2;n=B[r++];){var e=n<105;e&&1&A&&A++,L.push(e?j[A++>>1]:k[A]),++A}return L}(A,n);return Y[r].apply(null,e)},c:function(r,A,n){B.copyWithin(r,A,A+n)},b:function(r){B.length,R(\"OOM\")},e:function(r){!function(r,A){var n;b=r,b=n=r,v(n,new $(n))}(r)}},W=(function(){var r={a:Z};function A(r,A){var n,e,t=r.exports;t=X.instrumentWasmExports(t),f.asm=t,n=f.asm.f.buffer,f.HEAP8=C=new Int8Array(n),f.HEAP16=new Int16Array(n),f.HEAP32=k=new Int32Array(n),f.HEAPU8=B=new Uint8Array(n),f.HEAPU16=new Uint16Array(n),f.HEAPU32=new Uint32Array(n),f.HEAPF32=new Float32Array(n),f.HEAPF64=j=new Float64Array(n),f.asm.j,e=f.asm.g,Q.unshift(e),function(r){if(0==--x&&(null!==U&&(clearInterval(U),U=null),F)){var A=F;F=null,A()}}()}function n(r){A(r.instance)}function e(A){return function(){if(w||y){if(\"function\"==typeof fetch&&!H(T))return fetch(T,{credentials:\"same-origin\"}).then((function(r){if(!r.ok)throw\"failed to load wasm binary file at '\"+T+\"'\";return r.arrayBuffer()})).catch((function(){return M(T)}));if(a)return new Promise((function(r,A){a(T,(function(A){r(new Uint8Array(A))}),A)}))}return Promise.resolve().then((function(){return M(T)}))}().then((function(A){return WebAssembly.instantiate(A,r)})).then((function(r){return r})).then(A,(function(r){D(\"failed to asynchronously prepare wasm: \"+r),R(r)}))}if(x++,f.instantiateWasm)try{var i=f.instantiateWasm(r,A);return X.instrumentWasmExports(i)}catch(r){return D(\"Module.instantiateWasm callback failed with error: \"+r),!1}(\"function\"!=typeof WebAssembly.instantiateStreaming||O(T)||H(T)||\"function\"!=typeof fetch?e(n):fetch(T,{credentials:\"same-origin\"}).then((function(A){return WebAssembly.instantiateStreaming(A,r).then(n,(function(r){return D(\"wasm streaming compile failed: \"+r),D(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(t)}(),f.___wasm_call_ctors=function(){return(f.___wasm_call_ctors=f.asm.g).apply(null,arguments)},f._malloc=function(){return(W=f._malloc=f.asm.h).apply(null,arguments)}),N=f._free=function(){return(N=f._free=f.asm.i).apply(null,arguments)},q=(f._sign_init=function(){return(f._sign_init=f.asm.k).apply(null,arguments)},f._sign_public_key_bytes=function(){return(f._sign_public_key_bytes=f.asm.l).apply(null,arguments)},f._sign_private_key_bytes=function(){return(f._sign_private_key_bytes=f.asm.m).apply(null,arguments)},f._sign_signature_bytes=function(){return(f._sign_signature_bytes=f.asm.n).apply(null,arguments)},f._sign_keypair=function(){return(f._sign_keypair=f.asm.o).apply(null,arguments)},f._sign_signature=function(){return(f._sign_signature=f.asm.p).apply(null,arguments)},f._sign_verify=function(){return(f._sign_verify=f.asm.q).apply(null,arguments)},f.stackSave=function(){return(q=f.stackSave=f.asm.r).apply(null,arguments)}),K=f.stackRestore=function(){return(K=f.stackRestore=f.asm.s).apply(null,arguments)},_=f.stackAlloc=function(){return(_=f.stackAlloc=f.asm.t).apply(null,arguments)};function $(r){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+r+\")\",this.status=r}function rr(r){r=r||P,x>0||(J(E),x>0||G||(G=!0,f.calledRun=!0,d||(J(Q),e(f),J(I))))}return f._asyncify_start_unwind=function(){return(f._asyncify_start_unwind=f.asm.u).apply(null,arguments)},f._asyncify_stop_unwind=function(){return(f._asyncify_stop_unwind=f.asm.v).apply(null,arguments)},f._asyncify_start_rewind=function(){return(f._asyncify_start_rewind=f.asm.w).apply(null,arguments)},f._asyncify_stop_rewind=function(){return(f._asyncify_stop_rewind=f.asm.x).apply(null,arguments)},f.ccall=function(r,A,n,e,t){var i={string:function(r){var A=0;if(null!=r&&0!==r){var n=1+(r.length<<2);!function(r,A,n){!function(r,A,n,e){if(!(e>0))return 0;for(var t=n+e-1,f=0;f<r.length;++f){var i=r.charCodeAt(f);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&r.charCodeAt(++f)),i<=127){if(n>=t)break;A[n++]=i}else if(i<=2047){if(n+1>=t)break;A[n++]=192|i>>6,A[n++]=128|63&i}else if(i<=65535){if(n+2>=t)break;A[n++]=224|i>>12,A[n++]=128|i>>6&63,A[n++]=128|63&i}else{if(n+3>=t)break;A[n++]=240|i>>18,A[n++]=128|i>>12&63,A[n++]=128|i>>6&63,A[n++]=128|63&i}}A[n]=0}(r,B,A,n)}(r,A=_(n),n)}return A},array:function(r){var A=_(r.length);return S(r,A),A}},a=function(r){return f[\"_\"+r]}(r),o=[],u=0;if(e)for(var c=0;c<e.length;c++){var s=i[n[c]];s?(0===u&&(u=q()),o[c]=s(e[c])):o[c]=e[c]}var l=a.apply(null,o);function P(r){return 0!==u&&K(u),function(r){return\"string\"===A?m(r):\"boolean\"===A?Boolean(r):r}(r)}var v=t&&t.async;return X.currData?X.whenDone().then(P):(l=P(l),v?Promise.resolve(l):l)},f.writeArrayToMemory=S,F=function r(){G||rr(),G||(F=r)},f.run=rr,rr(),A.ready};var t=n(858);const f=function(r){var A,n,e=void 0!==(r=r||{})?r:{};e.ready=new Promise((function(r,e){A=r,n=e}));var f,i,a,o,u,c,s=Object.assign({},e),l=[],P=(r,A)=>{throw A},v=\"object\"==typeof window,w=\"function\"==typeof importScripts,y=\"object\"==typeof t&&\"object\"==typeof t.versions&&\"string\"==typeof t.versions.node,g=\"\";y?(g=w?require(\"path\").dirname(g)+\"/\":__dirname+\"/\",c=()=>{u||(o=require(\"fs\"),u=require(\"path\"))},f=function(r,A){var n=rr(r);return n?A?n:n.toString():(c(),r=u.normalize(r),o.readFileSync(r,A?void 0:\"utf8\"))},a=r=>{var A=f(r,!0);return A.buffer||(A=new Uint8Array(A)),A},i=(r,A,n)=>{var e=rr(r);e&&A(e),c(),r=u.normalize(r),o.readFile(r,(function(r,e){r?n(r):A(e.buffer)}))},t.argv.length>1&&t.argv[1].replace(/\\\\/g,\"/\"),l=t.argv.slice(2),t.on(\"uncaughtException\",(function(r){if(!(r instanceof or))throw r})),t.on(\"unhandledRejection\",(function(r){throw r})),P=(r,A)=>{throw t.exitCode=r,A},e.inspect=function(){return\"[Emscripten Module object]\"}):(v||w)&&(w?g=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),g=0!==g.indexOf(\"blob:\")?g.substr(0,g.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",f=r=>{try{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.send(null),A.responseText}catch(A){var n=rr(r);if(n)return function(r){for(var A=[],n=0;n<r.length;n++){var e=r[n];e>255&&(e&=255),A.push(String.fromCharCode(e))}return A.join(\"\")}(n);throw A}},w&&(a=r=>{try{var A=new XMLHttpRequest;return A.open(\"GET\",r,!1),A.responseType=\"arraybuffer\",A.send(null),new Uint8Array(A.response)}catch(A){var n=rr(r);if(n)return n;throw A}}),i=(r,A,n)=>{var e=new XMLHttpRequest;e.open(\"GET\",r,!0),e.responseType=\"arraybuffer\",e.onload=()=>{if(200==e.status||0==e.status&&e.response)A(e.response);else{var t=rr(r);t?A(t.buffer):n()}},e.onerror=n,e.send(null)}),console.log.bind(console);var D,b=console.warn.bind(console);Object.assign(e,s),s=null;var d,h={Memory:function(r){this.buffer=new ArrayBuffer(65536*r.initial)},Module:function(r){},Instance:function(r,A){this.exports=function(r){for(var A,n=new Uint8Array(123),e=25;e>=0;--e)n[48+e]=52+e,n[65+e]=e,n[97+e]=26+e;function t(r,A,e){for(var t,f,i=0,a=A,o=e.length,u=A+(3*o>>2)-(\"=\"==e[o-2])-(\"=\"==e[o-1]);i<o;i+=4)t=n[e.charCodeAt(i+1)],f=n[e.charCodeAt(i+2)],r[a++]=n[e.charCodeAt(i)]<<2|t>>4,a<u&&(r[a++]=t<<4|f>>2),a<u&&(r[a++]=f<<6|n[e.charCodeAt(i+3)])}return n[43]=62,n[47]=63,function(r){var n=r.a.buffer,e=new Int8Array(n),f=new Int16Array(n),i=new Int32Array(n),a=new Uint8Array(n),o=new Uint16Array(n),u=new Uint32Array(n),c=(new Float32Array(n),new Float64Array(n),Math.imul),s=(Math.fround,Math.abs,Math.clz32,Math.min,Math.max,Math.floor,Math.ceil,Math.trunc,Math.sqrt,r.abort),l=r.b,P=r.c,v=r.e,w=8422640,y=0,g=0;function D(r){var A,n=0,e=0,t=0,f=0,o=0,c=0,s=0,l=0,P=0,v=0;w=A=w-16|0;r:{A:{n:{e:{t:{f:{i:{a:{o:{u:{c:{if((r|=0)>>>0<=244){if(3&(n=(s=i[8382])>>>(e=(c=r>>>0<11?16:r+11&-8)>>>3|0)|0)){r=(c=i[33576+(n=(t=e+(1&(-1^n))|0)<<3)>>2])+8|0,(0|(e=i[c+8>>2]))!=(0|(n=n+33568|0))?(i[e+12>>2]=n,i[n+8>>2]=e):i[8382]=Yr(-2,t)&s,n=t<<3,i[c+4>>2]=3|n,i[4+(n=n+c|0)>>2]=1|i[n+4>>2];break r}if((v=i[8384])>>>0>=c>>>0)break c;if(n){f=i[33576+(r=(e=((n=(r=(r=(r=(r=(r=((r=((r=2<<e)|0-r)&n<<e)&0-r)-1|0)>>>(o=r>>>12&16)|0)>>>(f=r>>>5&8)|0)>>>(t=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|t|f|o)+(r>>>n|0)|0)<<3)>>2],(0|(n=i[f+8>>2]))!=(0|(r=r+33568|0))?(i[n+12>>2]=r,i[r+8>>2]=n):(s=Yr(-2,e)&s,i[8382]=s),r=f+8|0,i[f+4>>2]=3|c,t=f+c|0,c=(n=e<<3)-c|0,i[t+4>>2]=1|c,i[n+f>>2]=c,v&&(e=33568+((n=v>>>3|0)<<3)|0,f=i[8387],(n=1<<n)&s?n=i[e+8>>2]:(i[8382]=n|s,n=e),i[e+8>>2]=f,i[n+12>>2]=f,i[f+12>>2]=e,i[f+8>>2]=n),i[8387]=t,i[8384]=c;break r}if(!(P=i[8383]))break c;for(n=i[33832+(((n=(r=(r=(r=(r=(r=(P&0-P)-1|0)>>>(o=r>>>12&16)|0)>>>(f=r>>>5&8)|0)>>>(t=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|t|f|o)+(r>>>n|0)<<2)>>2],t=(-8&i[n+4>>2])-c|0,e=n;(r=i[e+16>>2])||(r=i[e+20>>2]);)t=(f=(e=(-8&i[r+4>>2])-c|0)>>>0<t>>>0)?e:t,n=f?r:n,e=r;if(l=i[n+24>>2],(0|(f=i[n+12>>2]))!=(0|n)){r=i[n+8>>2],i[r+12>>2]=f,i[f+8>>2]=r;break A}if(!(r=i[(e=n+20|0)>>2])){if(!(r=i[n+16>>2]))break u;e=n+16|0}for(;o=e,f=r,(r=i[(e=r+20|0)>>2])||(e=f+16|0,r=i[f+16>>2]););i[o>>2]=0;break A}if(c=-1,!(r>>>0>4294967231)&&(c=-8&(r=r+11|0),l=i[8383])){t=0-c|0,s=0,c>>>0<256||(s=31,c>>>0>16777215||(r=r>>>8|0,r<<=o=r+1048320>>>16&8,s=28+(c>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|o)|0)&1|r<<1)|0));s:{l:{if(e=i[33832+(s<<2)>>2])for(r=0,n=c<<(31==(0|s)?0:25-(s>>>1|0)|0);;){if(!((o=(-8&i[e+4>>2])-c|0)>>>0>=t>>>0||(f=e,t=o))){t=0,r=e;break l}if(o=i[e+20>>2],e=i[16+((n>>>29&4)+e|0)>>2],r=o?(0|o)==(0|e)?r:o:r,n<<=1,!e)break}else r=0;if(!(r|f)){if(f=0,!(r=((r=2<<s)|0-r)&l))break c;r=i[33832+(((n=(r=(r=(r=(r=(r=(r&0-r)-1|0)>>>(P=r>>>12&16)|0)>>>(s=r>>>5&8)|0)>>>(o=r>>>2&4)|0)>>>(e=r>>>1&2)|0)>>>1&1)|e|o|s|P)+(r>>>n|0)<<2)>>2]}if(!r)break s}for(;t=(e=(n=(-8&i[r+4>>2])-c|0)>>>0<t>>>0)?n:t,f=e?r:f,r=(n=i[r+16>>2])||i[r+20>>2];);}if(!(!f|i[8384]-c>>>0<=t>>>0)){if(s=i[f+24>>2],(0|f)!=(0|(n=i[f+12>>2]))){r=i[f+8>>2],i[r+12>>2]=n,i[n+8>>2]=r;break n}if(!(r=i[(e=f+20|0)>>2])){if(!(r=i[f+16>>2]))break o;e=f+16|0}for(;o=e,n=r,(r=i[(e=r+20|0)>>2])||(e=n+16|0,r=i[n+16>>2]););i[o>>2]=0;break n}}}if((e=i[8384])>>>0>=c>>>0){t=i[8387],(n=e-c|0)>>>0>=16?(i[8384]=n,r=t+c|0,i[8387]=r,i[r+4>>2]=1|n,i[e+t>>2]=n,i[t+4>>2]=3|c):(i[8387]=0,i[8384]=0,i[t+4>>2]=3|e,i[4+(r=e+t|0)>>2]=1|i[r+4>>2]),r=t+8|0;break r}if((s=i[8385])>>>0>c>>>0){n=s-c|0,i[8385]=n,r=(e=i[8388])+c|0,i[8388]=r,i[r+4>>2]=1|n,i[e+4>>2]=3|c,r=e+8|0;break r}if(r=0,n=P=c+47|0,i[8500]?e=i[8502]:(i[8503]=-1,i[8504]=-1,i[8501]=4096,i[8502]=4096,i[8500]=A+12&-16^1431655768,i[8505]=0,i[8493]=0,e=4096),(e=(o=0-e|0)&(f=n+e|0))>>>0<=c>>>0)break r;if((n=i[8492])&&(v=n)>>>0<(n=(t=i[8490])+e|0)>>>0|n>>>0<=t>>>0)break r;if(4&a[33972])break f;c:{s:{if(t=i[8388])for(r=33976;;){if((n=i[r>>2])>>>0<=t>>>0&t>>>0<n+i[r+4>>2]>>>0)break s;if(!(r=i[r+8>>2]))break}if(-1==(0|(n=Pr(0))))break i;if(s=e,(r=(t=i[8501])-1|0)&n&&(s=(e-n|0)+(r+n&0-t)|0),s>>>0>2147483646|c>>>0>=s>>>0)break i;if((r=i[8492])&&(o=r)>>>0<(r=(t=i[8490])+s|0)>>>0|r>>>0<=t>>>0)break i;if((0|n)!=(0|(r=Pr(s))))break c;break t}if((s=o&f-s)>>>0>2147483646)break i;if((0|(n=Pr(s)))==(i[r+4>>2]+i[r>>2]|0))break a;r=n}if(!(-1==(0|r)|c+48>>>0<=s>>>0)){if((n=0-(n=i[8502])&n+(P-s|0))>>>0>2147483646){n=r;break t}if(-1!=(0|Pr(n))){s=n+s|0,n=r;break t}Pr(0-s|0);break i}if(n=r,-1!=(0|r))break t;break i}f=0;break A}n=0;break n}if(-1!=(0|n))break t}i[8493]=4|i[8493]}if(e>>>0>2147483646)break e;if((n=Pr(e))>>>0>=(r=Pr(0))>>>0|-1==(0|r)|-1==(0|n))break e;if((s=r-n|0)>>>0<=c+40>>>0)break e}r=i[8490]+s|0,i[8490]=r,r>>>0>u[8491]&&(i[8491]=r);t:{f:{i:{if(o=i[8388]){for(r=33976;;){if(((t=i[r+4>>2])+(e=i[r>>2])|0)==(0|n))break i;if(!(r=i[r+8>>2]))break}break f}for((r=i[8386])>>>0<=n>>>0&&r||(i[8386]=n),r=0,i[8495]=s,i[8494]=n,i[8390]=-1,i[8391]=i[8500],i[8497]=0;e=33568+(t=r<<3)|0,i[t+33576>>2]=e,i[t+33580>>2]=e,32!=(0|(r=r+1|0)););e=(r=n+8&7?-8-n&7:0)+n|0,i[8388]=e,r=(s-r|0)-40|0,i[8385]=r,i[e+4>>2]=1|r,i[(n+s|0)-36>>2]=40,i[8389]=i[8504];break t}if(!(8&a[r+12|0]|e>>>0>o>>>0|n>>>0<=o>>>0)){i[r+4>>2]=t+s,e=(r=o+8&7?-8-o&7:0)+o|0,i[8388]=e,r=(n=i[8385]+s|0)-r|0,i[8385]=r,i[e+4>>2]=1|r,i[4+(n+o|0)>>2]=40,i[8389]=i[8504];break t}}u[8386]>n>>>0&&(i[8386]=n),f=n+s|0,r=33976;f:{i:{a:{o:{u:{c:{for(;;){if((0|f)!=i[r>>2]){if(r=i[r+8>>2])continue;break c}break}if(!(8&a[r+12|0]))break u}for(r=33976;;){if((e=i[r>>2])>>>0<=o>>>0&&(t=e+i[r+4>>2]|0)>>>0>o>>>0)break o;r=i[r+8>>2]}}if(i[r>>2]=n,i[r+4>>2]=i[r+4>>2]+s,i[4+(s=(n+8&7?-8-n&7:0)+n|0)>>2]=3|c,e=(f=f+(f+8&7?-8-f&7:0)|0)-(l=c+s|0)|0,(0|f)==(0|o)){i[8388]=l,r=i[8385]+e|0,i[8385]=r,i[l+4>>2]=1|r;break i}if(i[8387]==(0|f)){i[8387]=l,r=i[8384]+e|0,i[8384]=r,i[l+4>>2]=1|r,i[r+l>>2]=r;break i}if(1==(3&(r=i[f+4>>2]))){o=-8&r;u:if(r>>>0<=255){if(t=i[f+8>>2],r=r>>>3|0,(0|(n=i[f+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,r);break u}i[t+12>>2]=n,i[n+8>>2]=t}else{if(P=i[f+24>>2],(0|f)==(0|(n=i[f+12>>2])))if((t=i[(r=f+20|0)>>2])||(t=i[(r=f+16|0)>>2])){for(;c=r,(t=i[(r=(n=t)+20|0)>>2])||(r=n+16|0,t=i[n+16>>2]););i[c>>2]=0}else n=0;else r=i[f+8>>2],i[r+12>>2]=n,i[n+8>>2]=r;if(P){t=i[f+28>>2];c:{if(i[(r=33832+(t<<2)|0)>>2]==(0|f)){if(i[r>>2]=n,n)break c;i[8383]=i[8383]&Yr(-2,t);break u}if(i[P+(i[P+16>>2]==(0|f)?16:20)>>2]=n,!n)break u}i[n+24>>2]=P,(r=i[f+16>>2])&&(i[n+16>>2]=r,i[r+24>>2]=n),(r=i[f+20>>2])&&(i[n+20>>2]=r,i[r+24>>2]=n)}}f=f+o|0,e=e+o|0}if(i[f+4>>2]=-2&i[f+4>>2],i[l+4>>2]=1|e,i[e+l>>2]=e,e>>>0<=255){n=33568+((r=e>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=l,i[r+12>>2]=l,i[l+12>>2]=n,i[l+8>>2]=r;break i}if(r=31,e>>>0<=16777215&&(r=e>>>8|0,r<<=c=r+1048320>>>16&8,r=28+(e>>>21+(r=((r<<=t=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|t|c)|0)&1|r<<1)|0),i[l+28>>2]=r,i[l+16>>2]=0,i[l+20>>2]=0,c=33832+(r<<2)|0,(t=1<<r)&(n=i[8383])){for(r=e<<(31==(0|r)?0:25-(r>>>1|0)|0),n=i[c>>2];;){if(t=n,(-8&i[n+4>>2])==(0|e))break a;if(n=r>>>29|0,r<<=1,!(n=i[16+(c=t+(4&n)|0)>>2]))break}i[c+16>>2]=l,i[l+24>>2]=t}else i[8383]=n|t,i[c>>2]=l,i[l+24>>2]=c;i[l+12>>2]=l,i[l+8>>2]=l;break i}for(e=(r=n+8&7?-8-n&7:0)+n|0,i[8388]=e,r=(s-r|0)-40|0,i[8385]=r,i[e+4>>2]=1|r,i[f-36>>2]=40,i[8389]=i[8504],i[(e=(r=(t+(t-39&7?39-t&7:0)|0)-47|0)>>>0<o+16>>>0?o:r)+4>>2]=27,r=i[8497],i[e+16>>2]=i[8496],i[e+20>>2]=r,r=i[8495],i[e+8>>2]=i[8494],i[e+12>>2]=r,i[8496]=e+8,i[8495]=s,i[8494]=n,i[8497]=0,r=e+24|0;i[r+4>>2]=7,n=r+8|0,r=r+4|0,n>>>0<t>>>0;);if((0|e)==(0|o))break t;if(i[e+4>>2]=-2&i[e+4>>2],f=e-o|0,i[o+4>>2]=1|f,i[e>>2]=f,f>>>0<=255){n=33568+((r=f>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=o,i[r+12>>2]=o,i[o+12>>2]=n,i[o+8>>2]=r;break t}if(r=31,i[o+16>>2]=0,i[o+20>>2]=0,f>>>0<=16777215&&(r=f>>>8|0,r<<=t=r+1048320>>>16&8,r=28+(f>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|t)|0)&1|r<<1)|0),i[o+28>>2]=r,t=33832+(r<<2)|0,(e=i[8383])&(n=1<<r)){for(r=f<<(31==(0|r)?0:25-(r>>>1|0)|0),n=i[t>>2];;){if(e=n,(0|f)==(-8&i[n+4>>2]))break f;if(n=r>>>29|0,r<<=1,!(n=i[16+(t=e+(4&n)|0)>>2]))break}i[t+16>>2]=o,i[o+24>>2]=e}else i[8383]=n|e,i[t>>2]=o,i[o+24>>2]=t;i[o+12>>2]=o,i[o+8>>2]=o;break t}r=i[t+8>>2],i[r+12>>2]=l,i[t+8>>2]=l,i[l+24>>2]=0,i[l+12>>2]=t,i[l+8>>2]=r}r=s+8|0;break r}r=i[e+8>>2],i[r+12>>2]=o,i[e+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=e,i[o+8>>2]=r}if(!((r=i[8385])>>>0<=c>>>0)){n=r-c|0,i[8385]=n,r=(e=i[8388])+c|0,i[8388]=r,i[r+4>>2]=1|n,i[e+4>>2]=3|c,r=e+8|0;break r}}i[8381]=48,r=0;break r}n:if(s){e=i[f+28>>2];e:{if(i[(r=33832+(e<<2)|0)>>2]==(0|f)){if(i[r>>2]=n,n)break e;l=Yr(-2,e)&l,i[8383]=l;break n}if(i[s+(i[s+16>>2]==(0|f)?16:20)>>2]=n,!n)break n}i[n+24>>2]=s,(r=i[f+16>>2])&&(i[n+16>>2]=r,i[r+24>>2]=n),(r=i[f+20>>2])&&(i[n+20>>2]=r,i[r+24>>2]=n)}n:if(t>>>0<=15)r=t+c|0,i[f+4>>2]=3|r,i[4+(r=r+f|0)>>2]=1|i[r+4>>2];else if(i[f+4>>2]=3|c,i[4+(o=f+c|0)>>2]=1|t,i[t+o>>2]=t,t>>>0<=255)n=33568+((r=t>>>3|0)<<3)|0,(e=1<<r)&(r=i[8382])?r=i[n+8>>2]:(i[8382]=r|e,r=n),i[n+8>>2]=o,i[r+12>>2]=o,i[o+12>>2]=n,i[o+8>>2]=r;else{r=31,t>>>0<=16777215&&(r=t>>>8|0,r<<=c=r+1048320>>>16&8,r=28+(t>>>21+(r=((r<<=e=r+520192>>>16&4)<<(n=r+245760>>>16&2)>>>15|0)-(n|e|c)|0)&1|r<<1)|0),i[o+28>>2]=r,i[o+16>>2]=0,i[o+20>>2]=0,n=33832+(r<<2)|0;e:{if((e=1<<r)&l){for(r=t<<(31==(0|r)?0:25-(r>>>1|0)|0),c=i[n>>2];;){if((-8&i[(n=c)+4>>2])==(0|t))break e;if(e=r>>>29|0,r<<=1,!(c=i[16+(e=(4&e)+n|0)>>2]))break}i[e+16>>2]=o}else i[8383]=e|l,i[n>>2]=o;i[o+24>>2]=n,i[o+12>>2]=o,i[o+8>>2]=o;break n}r=i[n+8>>2],i[r+12>>2]=o,i[n+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=n,i[o+8>>2]=r}r=f+8|0;break r}A:if(l){e=i[n+28>>2];n:{if(i[(r=33832+(e<<2)|0)>>2]==(0|n)){if(i[r>>2]=f,f)break n;i[8383]=Yr(-2,e)&P;break A}if(i[l+(i[l+16>>2]==(0|n)?16:20)>>2]=f,!f)break A}i[f+24>>2]=l,(r=i[n+16>>2])&&(i[f+16>>2]=r,i[r+24>>2]=f),(r=i[n+20>>2])&&(i[f+20>>2]=r,i[r+24>>2]=f)}t>>>0<=15?(r=t+c|0,i[n+4>>2]=3|r,i[4+(r=r+n|0)>>2]=1|i[r+4>>2]):(i[n+4>>2]=3|c,i[4+(c=n+c|0)>>2]=1|t,i[t+c>>2]=t,v&&(e=33568+((r=v>>>3|0)<<3)|0,f=i[8387],(r=1<<r)&s?r=i[e+8>>2]:(i[8382]=r|s,r=e),i[e+8>>2]=f,i[r+12>>2]=f,i[f+12>>2]=e,i[f+8>>2]=r),i[8387]=c,i[8384]=t),r=n+8|0}return w=A+16|0,0|r}function b(r){var A=0,n=0,e=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0,x=0,U=0,F=0,R=0,O=0,H=0,M=0,Y=0,J=0,L=0,V=0,G=0,X=0,Z=0,N=0,q=0,K=0,_=0,$=0,rr=0,Ar=0,nr=0,er=0,tr=0,fr=0,ir=0,ar=0,or=0,ur=0,cr=0,sr=0,lr=0,Pr=0,vr=0,wr=0,yr=0,gr=0,Dr=0,br=0,dr=0,hr=0,Cr=0,Br=0,kr=0,jr=0,pr=0,mr=0,Sr=0,Tr=0,zr=0,Er=0,Qr=0,Ir=0,xr=0,Ur=0,Fr=0,Rr=0,Or=0,Hr=0,Mr=0,Yr=0,Jr=0,Lr=0,Vr=0;for(q=i[r+192>>2],R=i[r+196>>2],K=i[r+184>>2],_=i[r+188>>2],h=i[r+176>>2],Y=i[r+180>>2],C=i[r+168>>2],B=i[r+172>>2],J=i[r+160>>2],L=i[r+164>>2],k=i[r+152>>2],n=i[r+156>>2],j=i[r+144>>2],E=i[r+148>>2],f=i[r+136>>2],V=i[r+140>>2],$=i[r+128>>2],rr=i[r+132>>2],p=i[r+120>>2],Ar=i[r+124>>2],m=i[r+112>>2],O=i[r+116>>2],c=i[r+104>>2],s=i[r+108>>2],G=i[r+96>>2],S=i[r+100>>2],e=i[r+88>>2],t=i[r+92>>2],T=i[r+80>>2],X=i[r+84>>2],l=i[r+72>>2],v=i[r+76>>2],P=i[r+64>>2],w=i[r+68>>2],D=i[r+56>>2],a=i[r+60>>2],b=i[r+48>>2],d=i[r+52>>2],o=i[r+40>>2],z=i[r+44>>2],ur=i[r+32>>2],nr=i[r+36>>2],Q=i[r+24>>2],I=i[r+28>>2],y=i[r+16>>2],x=i[r+20>>2],A=i[r+8>>2],u=i[r+12>>2],H=i[r>>2],U=i[r+4>>2];wr>>>0<=23;)er=Z=L^Ar^X^z^U,ar=j^K^c^P^Q,Z=W(N=p^J^T^o^H,Z,1)^ar,F=W(Z^ur,(or=(cr=E^_^s^w^I)^g)^nr,27),tr=g,sr=M=V^Y^S^a^x,N=W(lr=f^h^G^D^y,M,1)^N,M=W(e^N,t^(er^=g),10),fr=g,Pr=t=B^rr^t^d^u,ir=k^q^m^l^ur,e=W(vr=C^$^e^b^A,t,1)^ir,o=W(e^o,(t=(nr^=n^R^O^v)^g)^z,36),yr=g,z=W(A^N,u^er,1),ur=g,u=c,c=W(ir,nr,1)^lr,nr=W(u^c,(ir=s)^(s=g^sr),25),A=g,sr=D,D=W(ar,cr,1)^vr,u=W(sr^D,(u=a)^(a=g^Pr),6),cr=g,Q=W(c^Q,s^I,28),I=g,T=W(e^T,t^X,3),X=g,ar=W(l^Z,v^or,20),sr=l=g,v=W(y^D,a^x,62),y=g,m=W(m^Z,O^or,39),O=g,x=W(c^P,s^w,55),lr=P=g,ir=i[(w=1024+(gr=wr<<3)|0)>>2],w=i[w+4>>2],G=W(D^G,a^S,43),S=g,b=W(b^N,d^er,44),w=l=(Dr=(Pr=t^U)^(-1^(d=g))&S^w)^(br=(-1^P)&O^y)^(dr=(-1^l)&X^I)^(hr=(-1^yr)&fr^tr)^(Cr=(-1^cr)&A^ur),l=W(P=(Br=(P=ir)^(ir=e^H)^(-1^b)&G)^(kr=(-1^x)&m^v)^(jr=(-1^ar)&T^Q)^(pr=(-1^o)&M^F)^(mr=(-1^u)&nr^z),l,1),H=g,f=W(f^D,a^V,15),V=g,K=W(c^K,s^_,56),vr=U=g,_=W(c^j,s^E,21),j=g,q=W(q^Z,R^or,14),c=g,R=W(k^Z,n^or,8),k=g,J=W(e^J,t^L,18),s=g,L=W(e^p,t^Ar,41),n=g,C=W(C^N,B^er,2),p=g,B=W(N^$,rr^er,45),E=g,Sr=F&(-1^K)^f,Tr=(-1^q)&ir^_,$=(-1^C)&v^L,zr=(-1^J)&z^R,h=W(D^h,a^Y,61),H=W((l^=Ar=Sr^Tr^$^zr^(rr=(-1^h)&Q^B))^(e=(-1^v)&x^C),(v=H^(Ur=(Er=tr&(-1^U)^V)^(Qr=(-1^c)&Pr^j)^(t=(-1^p)&y^n)^(Ir=(-1^s)&ur^k)^(xr=(-1^(Y=g))&I^E)))^(a=(-1^y)&lr^p),14),U=g,P=W(C=(Fr=(-1^R)&J^nr)^(y=(-1^_)&q^G)^(Rr=C&(-1^L)^m)^(Or=T^(-1^B)&h)^(Hr=(-1^f)&K^M),p=(Mr=(-1^k)&s^A)^(Yr=(-1^j)&c^S)^(Jr=p&(-1^n)^O)^(Lr=X^(-1^E)&Y)^(Vr=(-1^V)&vr^fr),1)^P,Z=W(P^(B=(-1^T)&B^ar),(w^=g)^(E=(-1^X)&E^sr),44),or=g,k=(n=(-1^O)&n^lr)^(T=(-1^A)&k^cr)^(fr=(-1^fr)&V^yr)^(A=(-1^S)&j^d)^E,D=(q=(F=(-1^F)&o^K)^(ar=(-1^Q)&ar^h)^(j=(-1^z)&u^J)^e^(E=b&(-1^ir)^q))^W(R=(K=(-1^m)&L^x)^(S=(-1^nr)&R^u)^(M=(-1^M)&f^o)^(e=(-1^G)&_^b)^B,k,1),er=h=Dr^(a=(_=(o=(-1^tr)&yr^vr)^(z=(-1^I)&sr^Y)^(f=(-1^ur)&cr^s)^a^(m=d&(-1^Pr)^c))^g),ur=(-1^(N=Br^D))&Z^H,nr=(-1^h)&or^U,h=W(P^K,n^w,2),Y=g,Q=W(q,_,1)^C,J=W(rr^Q,xr^(I=g^p),55),L=g,n=y,y=W(Ar,Ur,1)^R,q=(-1^(k=W(n^y,(x=g^k)^Yr,62)))&J^h,R=(-1^(n=R=g))&L^Y,K=(C=W(D^pr,a^hr,41))^(-1^h)&k,_=(B=g)^(-1^Y)&n,h=(j=W(l^j,f^v,39))^(-1^C)&h,Y=(f=g)^(-1^B)&Y,C=(-1^j)&C^J,B=(-1^f)&B^L,J=(-1^J)&j^k,L=(-1^L)&f^n,f=W(Q^$,t^I,56),V=g,p=W(D^jr,a^dr,36),Ar=g,m=W(l^E,v^m,27),O=n=g,k=(-1^m)&p^f,n=(-1^n)&Ar^V,j=($=W(y^Hr,x^Vr,15))^(-1^f)&m,E=(rr=g)^(-1^V)&O,f=(c=W(S^P,w^T,10))^(-1^$)&f,V=(s=g)^(-1^rr)&V,$=(-1^c)&$^p,rr=(-1^s)&rr^Ar,p=(-1^p)&c^m,Ar=(-1^Ar)&s^O,G=W(D^kr,a^br,18),S=g,T=W(y^Or,x^Lr,6),X=g,m=(-1^(b=W(e^P,A^w,1)))&T^G,O=(-1^(d=O=g))&X^S,c=(e=W(l^F,o^v,8))^(-1^G)&b,s=(t=g)^(-1^S)&d,G=(o=W(Q^zr,I^Ir,25))^(-1^e)&G,S=(A=g)^(-1^t)&S,e=(-1^o)&e^T,t=(-1^A)&t^X,T=(-1^T)&o^b,X=(-1^X)&A^d,b=W(y^Rr,x^Jr,61),d=g,o=W(l^ar,v^z,20),z=g,A=W(Q^Tr,I^Qr,28),u=v=g,l=(-1^A)&o^b,v=(-1^v)&z^d,P=(F=W(P^M,w^fr,45))^(-1^b)&A,w=(tr=g)^(-1^d)&u,D=(M=W(D^mr,a^Cr,3))^(-1^F)&b,a=(fr=g)^(-1^tr)&d,b=(-1^M)&F^o,d=(-1^fr)&tr^z,o=(-1^o)&M^A,z=(-1^z)&fr^u,Q=(A=W(Q^Sr,I^Er,21))^(-1^H)&N,I=(u=g)^(-1^U)&er,y=(F=W(y^Fr,x^Mr,43))^(-1^A)&H,x=(H=tr=g)^(-1^u)&U,A=(-1^F)&A^Z,u=(-1^H)&u^or,H=(-1^Z)&F^i[(U=1024+(8|gr)|0)>>2]^N,U=(-1^or)&tr^i[U+4>>2]^er,wr=wr+2|0;i[r+192>>2]=q,i[r+196>>2]=R,i[r+184>>2]=K,i[r+188>>2]=_,i[r+176>>2]=h,i[r+180>>2]=Y,i[r+168>>2]=C,i[r+172>>2]=B,i[r+160>>2]=J,i[r+164>>2]=L,i[r+152>>2]=k,i[r+156>>2]=n,i[r+144>>2]=j,i[r+148>>2]=E,i[r+136>>2]=f,i[r+140>>2]=V,i[r+128>>2]=$,i[r+132>>2]=rr,i[r+120>>2]=p,i[r+124>>2]=Ar,i[r+112>>2]=m,i[r+116>>2]=O,i[r+104>>2]=c,i[r+108>>2]=s,i[r+96>>2]=G,i[r+100>>2]=S,i[r+88>>2]=e,i[r+92>>2]=t,i[r+80>>2]=T,i[r+84>>2]=X,i[r+72>>2]=l,i[r+76>>2]=v,i[r+64>>2]=P,i[r+68>>2]=w,i[r+56>>2]=D,i[r+60>>2]=a,i[r+48>>2]=b,i[r+52>>2]=d,i[r+40>>2]=o,i[r+44>>2]=z,i[r+32>>2]=ur,i[r+36>>2]=nr,i[r+24>>2]=Q,i[r+28>>2]=I,i[r+16>>2]=y,i[r+20>>2]=x,i[r+8>>2]=A,i[r+12>>2]=u,i[r>>2]=H,i[r+4>>2]=U}function d(r){var A=0,n=0,e=0,t=0,f=0,a=0,o=0;r:if(r|=0){f=(e=r-8|0)+(r=-8&(A=i[r-4>>2]))|0;A:if(!(1&A)){if(!(3&A))break r;if((e=e-(A=i[e>>2])|0)>>>0<u[8386])break r;if(r=r+A|0,i[8387]==(0|e)){if(3==(3&(A=i[f+4>>2])))return i[8384]=r,i[f+4>>2]=-2&A,i[e+4>>2]=1|r,void(i[r+e>>2]=r)}else{if(A>>>0<=255){if(t=i[e+8>>2],A=A>>>3|0,(0|(n=i[e+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,A);break A}i[t+12>>2]=n,i[n+8>>2]=t;break A}if(o=i[e+24>>2],(0|e)==(0|(A=i[e+12>>2])))if((n=i[(t=e+20|0)>>2])||(n=i[(t=e+16|0)>>2])){for(;a=t,(n=i[(t=(A=n)+20|0)>>2])||(t=A+16|0,n=i[A+16>>2]););i[a>>2]=0}else A=0;else n=i[e+8>>2],i[n+12>>2]=A,i[A+8>>2]=n;if(!o)break A;t=i[e+28>>2];n:{if(i[(n=33832+(t<<2)|0)>>2]==(0|e)){if(i[n>>2]=A,A)break n;i[8383]=i[8383]&Yr(-2,t);break A}if(i[o+(i[o+16>>2]==(0|e)?16:20)>>2]=A,!A)break A}if(i[A+24>>2]=o,(n=i[e+16>>2])&&(i[A+16>>2]=n,i[n+24>>2]=A),!(n=i[e+20>>2]))break A;i[A+20>>2]=n,i[n+24>>2]=A}}if(!(e>>>0>=f>>>0)&&1&(A=i[f+4>>2])){A:{if(!(2&A)){if(i[8388]==(0|f)){if(i[8388]=e,r=i[8385]+r|0,i[8385]=r,i[e+4>>2]=1|r,i[8387]!=(0|e))break r;return i[8384]=0,void(i[8387]=0)}if(i[8387]==(0|f))return i[8387]=e,r=i[8384]+r|0,i[8384]=r,i[e+4>>2]=1|r,void(i[r+e>>2]=r);r=(-8&A)+r|0;n:if(A>>>0<=255){if(t=i[f+8>>2],A=A>>>3|0,(0|(n=i[f+12>>2]))==(0|t)){i[8382]=i[8382]&Yr(-2,A);break n}i[t+12>>2]=n,i[n+8>>2]=t}else{if(o=i[f+24>>2],(0|f)==(0|(A=i[f+12>>2])))if((n=i[(t=f+20|0)>>2])||(n=i[(t=f+16|0)>>2])){for(;a=t,(n=i[(t=(A=n)+20|0)>>2])||(t=A+16|0,n=i[A+16>>2]););i[a>>2]=0}else A=0;else n=i[f+8>>2],i[n+12>>2]=A,i[A+8>>2]=n;if(o){t=i[f+28>>2];e:{if(i[(n=33832+(t<<2)|0)>>2]==(0|f)){if(i[n>>2]=A,A)break e;i[8383]=i[8383]&Yr(-2,t);break n}if(i[o+(i[o+16>>2]==(0|f)?16:20)>>2]=A,!A)break n}i[A+24>>2]=o,(n=i[f+16>>2])&&(i[A+16>>2]=n,i[n+24>>2]=A),(n=i[f+20>>2])&&(i[A+20>>2]=n,i[n+24>>2]=A)}}if(i[e+4>>2]=1|r,i[r+e>>2]=r,i[8387]!=(0|e))break A;return void(i[8384]=r)}i[f+4>>2]=-2&A,i[e+4>>2]=1|r,i[r+e>>2]=r}if(r>>>0<=255)return A=33568+((r=r>>>3|0)<<3)|0,(n=1<<r)&(r=i[8382])?r=i[A+8>>2]:(i[8382]=r|n,r=A),i[A+8>>2]=e,i[r+12>>2]=e,i[e+12>>2]=A,void(i[e+8>>2]=r);t=31,i[e+16>>2]=0,i[e+20>>2]=0,r>>>0<=16777215&&(A=r>>>8|0,A<<=a=A+1048320>>>16&8,t=28+(r>>>21+(A=((A<<=t=A+520192>>>16&4)<<(n=A+245760>>>16&2)>>>15|0)-(n|t|a)|0)&1|A<<1)|0),i[e+28>>2]=t,a=33832+(t<<2)|0;A:{n:{if((n=i[8383])&(A=1<<t)){for(t=r<<(31==(0|t)?0:25-(t>>>1|0)|0),A=i[a>>2];;){if(n=A,(-8&i[A+4>>2])==(0|r))break n;if(A=t>>>29|0,t<<=1,!(A=i[16+(a=n+(4&A)|0)>>2]))break}i[a+16>>2]=e,i[e+24>>2]=n}else i[8383]=A|n,i[a>>2]=e,i[e+24>>2]=a;i[e+12>>2]=e,i[e+8>>2]=e;break A}r=i[n+8>>2],i[r+12>>2]=e,i[n+8>>2]=e,i[e+24>>2]=0,i[e+12>>2]=n,i[e+8>>2]=r}r=i[8390]-1|0,i[8390]=r||-1}}}function h(r,A,n,e,t){var f,o,u,s,l,P,v,w=0,y=0,D=0,b=0,d=0,h=0,B=0,k=0,j=0,p=0;for(y=(b=w=n>>31)^(1073741823&(w=n<<10|A>>>22)|1073741824),k=((D=(B=n>>>31|0)+(b^A<<10&-1024)|0)^(y=D>>>0<B>>>0?y+1|0:y))&(w=0-((B=61-(d=n>>>20|0)&63)>>>5|0)|0)^D,w=(y^y>>31)&(h=w>>31)^y,y=A,D=0,D=0-(A=1&((2147483647&(D=(A=(2047&d)-1022|0)>>>0<4294966274?D+1|0:D))<<1|A>>>31))|0,A=w,f=D&(b^(A=(63&(w=31&B))>>>0>=32?A>>w:((1<<w)-1&A)<<32-w|k>>>w))^A,o=Gr(A=y,n,O(y=f,b=y>>31),g),u=g,s=kr(_r(e,t),g),l=g,P=R(e,t,i[r+784>>2],i[r+788>>2]),v=g;;){for(e=0,(d=i[r+512>>2])>>>0>=503&&(C(r),d=0),i[r+512>>2]=d+8,n=a[4+(A=r+d|0)|0]|a[A+5|0]<<8|a[A+6|0]<<16|a[A+7|0]<<24,A=a[0|A]|a[A+1|0]<<8|a[A+2|0]<<16|a[A+3|0]<<24,t=Rr(r)<<16|n>>>16,w=16777215&A,n=16777215&((16777215&n)<<8|A>>>24),d=0;d>>>0<=53;)e=(((n-i[26708+(A=d<<2)>>2]|0)+(w-i[A+26712>>2]>>31)>>31)+(t-i[A+26704>>2]|0)>>>31|0)+e|0,d=d+3|0;for(A=1&Rr(r),A=Gr(R(_r(Gr(O(A=p=c(e,(A<<1)-1|0)+A|0,A>>31),g,o,u),g),g,s,l),g,R(O(c(e,e),0),g,-1048331326,1069764491),g),e=tr(R(A,n=g,1697350398,1073157447),g),A=tr(R(Gr(A,n,R(O(w=e,b=w>>31),g,-17155601,1072049730),g),g,0,1138753536),g),B=(2147483647&(n=g))<<1|A>>>31,k=A<<1&-2,h=0,A=1947304867,n=4,d=1;13!=(0|d);)D=n,w=or(n,0,B,h),y=g,n=or(B,h,A,t=0),b=(j=g)+w|0,w=y,y=b>>>0<j>>>0?w+1|0:w,w=or(D,t,k,h),D=g,or(A,t,k,h),D=(A=(t=g)+w|0)>>>0<t>>>0?D+1|0:D,t=i[(w=1360+(d<<3)|0)>>2],j=i[w+4>>2],w=y,b=D>>>0>(y=b=D+b|0)>>>0?w+1|0:w,w=y,y=0,b=(A=w+(n=y=A+n>>>0<A>>>0?y+1|0:y)|0)>>>0<n>>>0?b+1|0:b,n=A,A=t-A|0,n=j-((n>>>0>t>>>0)+b|0)|0,d=d+1|0;for(t=tr(R(P,v,0,1138753536),g),d=or(w=(2147483647&(w=g))<<1|t>>>31,0,A,b=0),y=g,B=n,h=or(w,b,n,0),w=g,D=n=y+h|0,n=n>>>0<h>>>0?w+1|0:w,h=63-e>>31,or(y=A,b,A=(A=t)<<1&-2,t=0),A=(y=g)+(t=or(B,b,A,t))|0,y=g,w=n,w=(t=(y=A>>>0<t>>>0?y+1|0:y)+D|0)>>>0<y>>>0?w+1|0:w,D=0,D=(w=(A=(n=D=A+d>>>0<A>>>0?D+1|0:D)+t|0)>>>0<n>>>0?w+1|0:w)<<1|A>>>31,t=(A<<=1)-1|0,n=D-!A|0,A=31&(e^=h&(63^e)),(63&e)>>>0>=32?(w=0,b=n>>>A|0):(w=n>>>A|0,b=((1<<A)-1&n)<<32-A|t>>>A),A=64,n=0;t=n-(A>>>0<8)|0,y=31&(e=A-8|0),!(y=Rr(r)-(255&((63&e)>>>0>=32?w>>>y|0:((1<<y)-1&w)<<32-y|b>>>y))|0)&&(D=!n&A>>>0>8|0!=(0|n),A=e,n=t,D););if(y>>>31|0)break}return f+p|0}function C(r){var A,n,t,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,y=0,g=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0,z=0,E=0;w=A=w+-64|0,n=r+520|0,m=i[r+568>>2],S=i[r+572>>2],t=A+16|0;r:for(;;){if(8!=(0|T))for(Ur(t,n,48),u=i[A+60>>2]^S,C=i[A+56>>2]^m,o=0,c=1634760805,y=857760878,g=2036477234,B=1797285236,s=i[A+44>>2],f=i[A+28>>2],D=i[A+40>>2],a=i[A+24>>2],j=i[A+36>>2],l=i[A+52>>2],d=i[A+20>>2],b=i[A+32>>2],p=i[A+48>>2],P=i[A+16>>2];;){if(10==(0|o)){for(i[A+48>>2]=p,i[A>>2]=c,i[A+16>>2]=P,i[A+32>>2]=b,i[A+20>>2]=d,i[A+52>>2]=l,i[A+4>>2]=y,i[A+36>>2]=j,i[A+24>>2]=a,i[A+56>>2]=C,i[A+8>>2]=g,i[A+40>>2]=D,i[A+28>>2]=f,i[A+60>>2]=u,i[A+12>>2]=B,i[A+44>>2]=s,f=0;o=4,4!=(0|f);)i[(a=(o=f<<2)+A|0)>>2]=i[o+26688>>2]+i[a>>2],f=f+1|0;for(;14!=(0|o);)i[(a=(f=o<<2)+A|0)>>2]=i[(f+n|0)-16>>2]+i[a>>2],o=o+1|0;for(i[A+56>>2]=i[A+56>>2]+(i[r+560>>2]^m),i[A+60>>2]=i[A+60>>2]+(i[r+564>>2]^S),d=T<<2,o=0;16!=(0|o);)f=d+(o<<5)|0,a=i[(o<<2)+A>>2],e[f+r|0]=a,e[(1|f)+r|0]=a>>>8,e[(2|f)+r|0]=a>>>16,e[(3|f)+r|0]=a>>>24,o=o+1|0;T=T+1|0,S=(m=m+1|0)?S:S+1|0;continue r}v=s,s=Yr((B=f+B|0)^u,16),f=Yr((h=v+s|0)^f,12),c=Yr((u=P+c|0)^p,16),P=Yr((b=c+b|0)^P,12),u=(c=Yr(c^(z=u+P|0),8))+b|0,g=Yr((v=C)^(C=a+g|0),16),a=Yr((D=g+D|0)^a,12),v=j,j=Yr((y=d+y|0)^l,16),d=Yr((l=v+j|0)^d,12),P=(b=f+B|0)+(B=Yr(u^P,7))|0,p=Yr((v=g)^(g=a+C|0),8),C=Yr(P^p,16),v=P,P=l,l=Yr((y=d+y|0)^j,8),k=Yr((P=C+(E=P+l|0)|0)^B,12),C=Yr(C^(B=v+k|0),8),P=Yr((j=C+P|0)^k,7),v=u,k=l,l=g,u=Yr(s^b,8),g=Yr((s=u+h|0)^f,7),b=Yr(k^(l=l+g|0),16),h=Yr((f=v+b|0)^g,12),l=Yr(b^(g=h+l|0),8),f=Yr((b=f+l|0)^h,7),v=s,k=c,s=y,y=Yr((c=D+p|0)^a,7),D=Yr(k^(s=s+y|0),16),h=Yr((a=v+D|0)^y,12),p=Yr(D^(y=h+s|0),8),a=Yr((s=a+p|0)^h,7),v=c,k=u,u=Yr(d^E,7),D=Yr(k^(c=u+z|0),16),h=Yr(u^(d=v+D|0),12),u=Yr(D^(c=h+c|0),8),d=Yr((D=d+u|0)^h,7),o=o+1|0}break}i[r+512>>2]=0,i[r+568>>2]=m,i[r+572>>2]=S,w=A- -64|0}function B(r,A,n,e,t,f,a,o){var u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,C=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,I=0;if(!a){for(t=0,a=1048575&(f=i[e+4>>2])|1048576,o=(0-(0!=(0|(f=1&(p=(D=f>>>20&2047)-1023|0))))&a)+a|0,o=(e=(e=i[e>>2])+(u=0-f&e)|0)>>>0<u>>>0?o+1|0:o,v=e,e=2097152,u=0,a=0;;){if(f=o<<1|(l=v)>>>31,o=l<<1,54==(0|t)){t=0-(e=D+2047>>>11|0)|0,y=0-(0!=(0|e))|0,e=fr(0,(p>>1)-54|0,((o=0!=(f|o))|(e=u)<<1)&t,(f=a<<1|e>>>31)&y),t=g;break}l=f,f=e+y|0,v=o-(C=(v=c+s|0)&(w=(b=(w=l-((f=v>>>0<c>>>0?f+1|0:f)+(o>>>0<v>>>0)|0)|0)>>>31|0)-1|0))|0,o=(P=l)-(((l=0-!b|0)&f)+(o>>>0<C>>>0)|0)|0,b=c,f=((f=e<<1|(c=s)>>>31)&l)+y|0,y=f=(c=b+(P=w&c<<1)|0)>>>0<P>>>0?f+1|0:f,t=t+1|0,f=a+(e&l)|0,f=(P=u+(s&w)|0)>>>0<u>>>0?f+1|0:f,u=P,a=f,s=(1&e)<<31|s>>>1,e=e>>>1|0}return e=R(e,t,-1066729002,1064818311),t=g,f=h(r,i[A>>2],i[A+4>>2],e,t),i[A>>2]=O(f,f>>31),i[A+4>>2]=g,r=h(r,i[n>>2],i[n+4>>2],e,t),i[n>>2]=O(r,r>>31),void(i[n+4>>2]=g)}for(p=1<<a>>>1|0;(0|y)!=(0|p);)T=i[(u=b=(P=y+p<<3)+f|0)>>2],z=i[u+4>>2],E=i[(u=C=(s=y<<3)+f|0)>>2],I=i[u+4>>2],l=i[(u=m=t+P|0)>>2],v=i[u+4>>2],u=i[(c=S=t+s|0)>>2],c=i[c+4>>2],P=i[(w=e+P|0)>>2],w=i[w+4>>2],s=i[4+(D=e+s|0)>>2],D=R(D=i[D>>2],s,s=X(j(k=_r(D,s),g,_r(P,w),g),g),d=g),k=g,w=R(qr(P,w),g,s,d),d=g,P=Gr(R(u,c,D,k),g,R(l,v,w,d),g),s=g,w=j(R(u,c,w,d),g,R(l,v,D,k),g),D=g,l=qr(l,v),v=g,k=Gr(R(P,s,u,c),g,R(w,D,l,v),g),d=g,u=j(R(P,s,l,v),g,R(w,D,u,c),g),c=g,l=Gr(E,I,k,d),v=g,u=Gr(T,z,u,c),i[C>>2]=l,i[C+4>>2]=v,i[b>>2]=u,i[b+4>>2]=g,i[S>>2]=P,i[S+4>>2]=s,i[m>>2]=qr(w,D),i[m+4>>2]=g,y=y+1|0;Q(o,c=(y=(v=1<<a)<<2&-8)+o|0,e,a),l=Ur(e,o,u=v<<3),Q(o,c,f,a),f=Ur(f,o,u),e=Ur(o,t,u),P=Ur(t,l,y),s=Ur(P+y|0,f,y),Q(t=e+u|0,o=t+y|0,n,a),B(r,t,o,f,f+y|0,b=s,s=a-1|0,t+u|0),x(f=e+(v<<4)|0,t,o,a),gr(t=Ur(t,n,u),f,a),Ur(n,f,u),N(e,t,a),yr(A,e,a),Q(e,c,A,a),B(r,e,c,l,l+y|0,P,s,t),x(A,e,c,a)}function k(r,A,n,e,t){var f,a,o,u,s,l,P,v,w,y,g=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,S=0;for(a=i[24452+(n<<=2)>>2],h=(y=(d=c(a,l=(o=1<<A)>>>1|0)<<2)+r|0)+d|0,d=i[n+24448>>2],f=(s=(u=(v=(P=dr(h,r,c(d,o)<<3))+(n=d<<A<<2)|0)+n|0)+(n=o<<2)|0)+n|0,w=A-1|0;(0|d)!=(0|C);){for(n=c(C,12),D=i[n+18176>>2],V(u,s,A,n=i[n+18180>>2],D,b=xr(D)),g=0,n=j=(h=C<<2)+P|0;(0|g)!=(0|o);)i[(g<<2)+f>>2]=i[n>>2],g=g+1|0,n=(d<<2)+n|0;for(B=Tr(D,b),e||G(f,1,u,A,D,b),g=0,n=p=r+h|0;(0|g)!=(0|l);)k=(g<<3)+f|0,i[n>>2]=vr(vr(i[k>>2],i[k+4>>2],D,b),B,D,b),g=g+1|0,n=(a<<2)+n|0;for(e&&Y(j,d,s,A,D,b),g=0,n=j=h+v|0;(0|g)!=(0|o);)i[(g<<2)+f>>2]=i[n>>2],g=g+1|0,n=(d<<2)+n|0;for(e||G(f,1,u,A,D,b),g=0,n=h=h+y|0;(0|g)!=(0|l);)k=(g<<3)+f|0,i[n>>2]=vr(vr(i[k>>2],i[k+4>>2],D,b),B,D,b),g=g+1|0,n=(a<<2)+n|0;e&&Y(j,d,s,A,D,b),t||(Y(p,a,s,w,D,b),Y(h,a,s,w,D,b)),C=C+1|0}m(P,d,d,o,1,u),m(v,d,d,o,1,u),j=d>>>0>a>>>0?d:a,e=d;r:for(;;){if((0|e)!=(0|j)){for(n=c(e,12),B=Cr(d,D=i[n+18176>>2],b=xr(D),C=Tr(D,b)),V(u,s,A,i[n+18180>>2],D,b),g=0,n=P;(0|g)!=(0|o);)i[(g<<2)+f>>2]=Or(n,d,D,b,C,B),g=g+1|0,n=(d<<2)+n|0;for(G(f,1,u,A,D,b),g=0,h=k=(p=e<<2)+r|0,n=0;;){if((0|n)==(0|l)){for(n=v;(0|g)!=(0|o);)i[(g<<2)+f>>2]=Or(n,d,D,b,C,B),g=g+1|0,n=(d<<2)+n|0;for(G(f,1,u,A,D,b),g=0,n=h=p+y|0;(0|g)!=(0|l);)B=(g<<3)+f|0,i[n>>2]=vr(vr(i[B>>2],i[B+4>>2],D,b),C,D,b),g=g+1|0,n=(a<<2)+n|0;t||(Y(k,a,s,w,D,b),Y(h,a,s,w,D,b)),e=e+1|0;continue r}S=(n<<3)+f|0,i[h>>2]=vr(vr(i[S>>2],i[S+4>>2],D,b),C,D,b),n=n+1|0,h=(a<<2)+h|0}}break}}function j(r,A,n,e){var t,f,i,a,o,u=0,c=0,s=0,l=0,P=0,v=0;return s=r^(l=0-(c=((0|r)==(0|n)&(0|(c=(2147483647&A)-((2147483647&e)+(r>>>0<n>>>0)|0)|0))<=0|(0|c)<0)&A>>>31|c>>>31)&(r^n)),f=(r=A^(P=0-(0!=(0|c))&(A^e)))>>>31|0,c=0,i=(A=s)<<3&-8,a=8388607&(u=r<<3|A>>>29)|2047+(t=r>>>20&2047)>>>11<<23,A=r=e^P,e=n^l,P=63&(u=t-(l=r>>>20&2047)|0),v=0-(u=u-60>>>31|0)|0,o=0-(0!=(0|u))|0,s=r=(n=cr(1,0,P))-1|0,u=(n=g-!n|0)+((r=((r=l+2047>>>11<<23)|8388607&(u=A<<3|e>>>29))&o)&n)|0,r=wr((s=s+(v=s&(l=e<<3&-8&v))|0)|l,r|(s>>>0<v>>>0?u+1|0:u),P),u=0-(A=A>>>31^f)|0,s=r-(u&=r<<1)|0,r=((n=g)-(((e=n<<1|r>>>31)&(c=0-((0!=(0|A))+c|0)|0))+(r>>>0<u>>>0)|0)|0)+a|0,e=0!=(0|(r=(A=s+i|0)>>>0<s>>>0?r+1|0:r)),n=r,r=A,A=e?r:0,e=((n=(r=e?n:r)>>>0>65535)<<4)+(c=(e<<5)+t|0)|0,c=r,u=r<<16|A>>>16,r=n?A:A<<16,c=((n=(A=n?c:u)>>>0>16777215)<<3)+e|0,u=A,e=A<<8|r>>>24,A=n?r:r<<8,e=(r=n?u:e)>>>0>268435455,n=r,r=r<<4|A>>>28,A=e?A:A<<4,e=((n=(r=e?n:r)>>>0>1073741823)<<1)+(c=(e<<2)+c|0)|0,c=r,u=r<<2|A>>>30,r=n?A:A<<2,c=((n=(A=n?c:u)>>>31|0)+e|0)-1132|0,A^=(A^(e=A<<1|r>>>31))&(u=0-!n|0),u=0,fr(f,c,(511&(A|=u=(n=511+(511&(r^=(n=n-1|0)&(r^r<<1)))|0)>>>0<511?u+1|0:u))<<23|(r|=n)>>>9,u=A>>>9|0)}function p(r,A,n,e,t,f,a,o,u,s,l){var P,v,w,y,g,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0;for(w=(C=(y=(d=(v=1<<s)<<2)+l|0)+d|0)+((P=t+1|0)<<s<<2)|0,g=f<<2;(0|P)!=(0|B);){for(f=c(B,12),p=Cr(t,D=i[f+18176>>2],h=xr(D),k=Tr(D,h)),V(l,y,s,i[f+18180>>2],D,h),b=0;(0|b)!=(0|v);)i[(f=b<<2)+w>>2]=rA(i[f+a>>2],D),b=b+1|0;for(G(w,1,l,s,D,h),b=0,f=e,j=d=(B<<2)+C|0;(0|b)!=(0|v);)i[j>>2]=Or(f,t,D,h,k,p),b=b+1|0,j=(P<<2)+j|0,f=f+g|0;for(G(d,P,l,s,D,h),b=0,f=d;(0|b)!=(0|v);)i[f>>2]=vr(vr(i[(b<<2)+w>>2],i[f>>2],D,h),k,D,h),b=b+1|0,f=(P<<2)+f|0;Y(d,P,y,s,D,h),B=B+1|0}for(m(C,P,P,v,1,w),f=0,l=n<<2;(0|f)!=(0|v);){e=r,a=0,s=0;r:if(P)for(d=A>>>0<o>>>0?o:A,b=31-u|0,t=0-(i[((P<<2)+C|0)-4>>2]>>>30|0)>>>1|0,r=o;;){if((0|r)==(0|d))break r;n=t,(D=r-o|0)>>>0<P>>>0&&(n=i[(D<<2)+C>>2]),a=(i[(D=e+(r<<2)|0)>>2]-(n<<u&2147483647|s)|0)+a|0,i[D>>2]=2147483647&a,a>>=31,r=r+1|0,s=n>>>b|0}f=f+1|0,C=(P<<2)+C|0,r=e+l|0}}function m(r,A,n,e,t,f){var a,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0;for(i[f>>2]=2147473409,a=A>>>0>1?A:1,u=1;(0|u)!=(0|a);){for(o=c(u,12),h=i[o+18184>>2],y=0,C=Tr(v=i[o+18176>>2],D=xr(v)),l=r;(0|e)!=(0|y);){for(o=0,B=vr(h,Nr(i[(u<<2)+l>>2],mr(l,u,v,D,C),v),v,D),P=0;(0|u)!=(0|P);)s=0,s=(o=(d=i[(b=(w=P<<2)+l|0)>>2])+o|0)>>>0<d>>>0?1:s,w=or(B,0,i[f+w>>2],0),s=g+s|0,s=(o=w+o|0)>>>0<w>>>0?s+1|0:s,i[b>>2]=2147483647&o,o=(2147483647&s)<<1|o>>>31,P=P+1|0;i[(u<<2)+l>>2]=o,y=y+1|0,l=(n<<2)+l|0}i[(u<<2)+f>>2]=ir(f,u,v),u=u+1|0}r:if(t)for(l=0,v=n<<2;;){if((0|e)==(0|l))break r;for(n=0,u=0,t=A;t;)n=(s=n)|(P=(1&n)-1|0)&((n=(u<<30|(o=i[(n=(t=t-1|0)<<2)+f>>2])>>>1)-i[r+n>>2]|0)>>31|0-n>>>31),u=1&o;for(t=0,u=0-(n>>>31|0)|0,n=0;(0|A)!=(0|n);)o=(s=t)+((t=i[(P=(o=n<<2)+r|0)>>2])-i[f+o>>2]|0)|0,i[P>>2]=t^u&(t^2147483647&o),t=o>>31,n=n+1|0;l=l+1|0,r=r+v|0}}function S(r,A){var n,e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0;for(e=(n=1<<A)>>>1|0,D=n,c=1,b=A;b>>>0>=2;){for(P=c<<1,D=D>>>1|0,o=0,d=0;o>>>0<e>>>0;){for(z=o+c|0,h=i[(t=1472+(D+d<<4)|0)>>2],C=i[t+4>>2],B=qr(i[t+8>>2],i[t+12>>2]),k=g,t=o;t>>>0<z>>>0;)s=i[(f=a=(t+e<<3)+r|0)>>2],l=i[f+4>>2],w=i[(v=((f=t+c|0)+e<<3)+r|0)>>2],y=i[v+4>>2],E=j(p=i[(u=(t<<3)+r|0)>>2],m=i[u+4>>2],S=i[(f=(f<<3)+r|0)>>2],T=i[f+4>>2]),Q=g,I=j(s,l,w,y),i[u>>2]=E,i[u+4>>2]=Q,i[a>>2]=I,i[a+4>>2]=g,a=Gr(p,m,S,T),u=g,s=Gr(s,l,w,y),l=g,w=Gr(R(a,u,h,C),g,R(s,l,B,k),g),y=g,a=j(R(a,u,B,k),g,R(s,l,h,C),g),i[f>>2]=w,i[f+4>>2]=y,i[v>>2]=a,i[v+4>>2]=g,t=t+1|0;o=o+P|0,d=d+1|0}b=b-1|0,c=P}r:if(A)for(c=i[(A=17856+(A<<3)|0)>>2],P=i[A+4>>2],t=0;;){if((0|t)==(0|n))break r;o=R(i[(A=(t<<3)+r|0)>>2],i[A+4>>2],c,P),i[A>>2]=o,i[A+4>>2]=g,t=t+1|0}}function T(r,A,n){var e,t,i,u=0,c=0,s=0,l=0,P=0,v=0,y=0,g=0;for(w=e=w-144|0,l=1,i=(t=o[673])+512|0;;){if((0|u)==(0|i)){for(;;){if(P=0,u=0,l>>>0>t>>>0){w=e+144|0;break}for(;(0|u)!=(0|i);)r=(u<<1)+A|0,u>>>0<512||(r=(u-512<<1)+n|0,u>>>0<1024||(r=((u<<1)+e|0)-2032|0)),v=((c=o[r>>1])>>>15|0)-1|0,u>>>0>=l>>>0&&(y=r,g=c,(s=u-l|0)>>>0<512?r=(s<<1)+A|0:(r=(s-512<<1)+n|0,s>>>0<1024||(r=((s<<1)+e|0)-2032|0)),c=0-(511+(u-P&l)>>>9|0)&v&((r=o[(s=r)>>1])^c),f[y>>1]=g^c,f[s>>1]=r^c),P=P-v|0,u=u+1|0;l<<=1}break}F(e+14|0,2,r),c=((c=a[e+15|0]|a[e+14|0]<<8)-61445>>>31|0)-1|(s=(s=c-((c-24578>>>31|0)-1&24578)|0)-((s-24578>>>31|0)-1&24578)|0)-((s-12289>>>31|0)-1&12289),u>>>0<512?f[(u<<1)+A>>1]=c:u>>>0<1024?f[(u-512<<1)+n>>1]=c:f[((u<<1)+e|0)-2032>>1]=c,u=u+1|0}}function z(r,A,n){var e,t=0,f=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0;for(e=i[r>>2];;){r:{if(u=0,r=0,f=o=i[e+204>>2],!(!(f=(c=n+(t=i[e+200>>2])|0)>>>0<n>>>0?f+1|0:f)&c>>>0<136)){for(;!r&u>>>0<(f=136-t|0)>>>0;)o=c=(f=t)+u|0,c=i[4+(f=e+(-8&c)|0)>>2],v=l=i[f>>2],l=a[A+u|0],o=31&(t=o<<3),(63&t)>>>0>=32?(t=l<<o,o=0):(t=(1<<o)-1&l>>>32-o,o=l<<o),i[f>>2]=v^o,i[f+4>>2]=t^c,r=(t=u+1|0)?r:r+1|0,u=t,t=i[e+200>>2],o=i[e+204>>2];i[e+200>>2]=0,i[e+204>>2]=0,b(e),A=A+f|0,n=n-f|0;continue}for(;;){if(!s&(0|n)==(0|P))break r;u=r=(f=i[e+200>>2])+P|0,f=i[4+(r=e+(-8&r)|0)>>2],o=c=i[r>>2],c=a[A+P|0],t=31&(u<<=3),(63&u)>>>0>=32?(u=c<<t,t=0):(u=(1<<t)-1&c>>>32-t,t=c<<t),i[r>>2]=o^t,i[r+4>>2]=f^u,r=s,P=s=P+1|0,s=r=s?r:r+1|0}}break}r=i[e+204>>2],A=(A=n)+(n=i[e+200>>2])|0,i[e+200>>2]=A,i[e+204>>2]=A>>>0<n>>>0?r+1|0:r}function E(r,A){var n,e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,p=0,m=0,S=0,T=0,z=0,E=0,Q=0,I=0;for(e=A>>>0>1?A:1,c=2,D=n=1<<A>>>1|0,b=1;(0|b)!=(0|e);){for(E=c>>>1|0,d=D>>>1|0,s=0,l=0;(0|l)!=(0|E);){for(Q=s+d|0,h=i[(A=1472+(c+l<<4)|0)>>2],C=i[A+4>>2],B=i[A+8>>2],k=i[A+12>>2],A=s;A>>>0<Q>>>0;)P=i[(t=f=(A+n<<3)+r|0)>>2],p=i[t+4>>2],m=i[(t=a=(A<<3)+r|0)>>2],S=i[t+4>>2],o=i[(v=((t=A+d|0)+n<<3)+r|0)>>2],u=i[v+4>>2],T=Gr(R(w=i[(t=(t<<3)+r|0)>>2],y=i[t+4>>2],h,C),g,R(o,u,B,k),g),z=g,o=j(R(w,y,B,k),g,R(o,u,h,C),g),u=g,w=j(m,S,T,z),y=g,I=j(P,p,o,u),i[a>>2]=w,i[a+4>>2]=y,i[f>>2]=I,i[f+4>>2]=g,f=Gr(m,S,T,z),a=g,P=Gr(P,p,o,u),i[t>>2]=f,i[t+4>>2]=a,i[v>>2]=P,i[v+4>>2]=g,A=A+1|0;s=s+D|0,l=l+1|0}c<<=1,b=b+1|0,D=d}}function Q(r,A,n,e){var t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0;for(s=i[n+4>>2],i[r>>2]=i[n>>2],i[r+4>>2]=s,w=i[4+(t=n+((s=(e=1<<e)>>>1|0)<<3)|0)>>2],i[A>>2]=i[t>>2],i[A+4>>2]=w,w=e>>>2|0,e=0;(0|e)!=(0|w);)t=i[(o=((f=e<<1)+s<<3)+n|0)>>2],o=i[o+4>>2],f=i[(u=((a=1|f)+s<<3)+n|0)>>2],u=i[u+4>>2],y=j(P=i[(c=(e<<4)+n|0)>>2],c=i[c+4>>2],v=i[(a=(a<<3)+n|0)>>2],a=i[a+4>>2]),l=g,D=j(t,o,f,u),h=g,i[(d=(b=e<<3)+r|0)>>2]=kr(y,l),i[d+4>>2]=g,i[(l=(y=e+w<<3)+r|0)>>2]=kr(D,h),i[l+4>>2]=g,a=Gr(P,c,v,a),c=g,o=Gr(t,o,f,u),f=g,u=qr(i[8+(t=1472+(e+s<<4)|0)>>2],i[t+12>>2]),P=g,l=Gr(R(a,c,v=i[t>>2],t=i[t+4>>2]),g,R(o,f,u,P),g),D=g,t=j(R(a,c,u,P),g,R(o,f,v,t),g),o=g,i[(f=A+b|0)>>2]=kr(l,D),i[f+4>>2]=g,i[(f=A+y|0)>>2]=kr(t,o),i[f+4>>2]=g,e=e+1|0}function I(r,A,n,e,t,f,a,o,u,s,l,P,v){var w,y,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0;for(D=i[A>>2],k=i[r>>2],w=2147483647&c(c(D,P)+c(s,k)|0,t),y=2147483647&c(c(o,D)+c(f,k)|0,t),t=0;(0|e)!=(0|t);)b=or(j=i[(k=t<<2)+r>>2],0,s,l)+C|0,D=d+g|0,D=C>>>0>b>>>0?D+1|0:D,C=or(p=i[A+k>>2],0,P,v),D=g+D|0,D=C>>>0>(d=C+b|0)>>>0?D+1|0:D,C=(b=or(w,0,m=i[n+k>>2],0))+d|0,d=g+D|0,d=C>>>0<b>>>0?d+1|0:d,b=or(f,a,j,0)+B|0,D=h+g|0,D=B>>>0>b>>>0?D+1|0:D,B=or(o,u,p,0),D=g+D|0,D=B>>>0>(h=B+b|0)>>>0?D+1|0:D,B=(b=or(y,0,m,0))+h|0,h=g+D|0,h=B>>>0<b>>>0?h+1|0:h,t&&(i[(D=k-4|0)+r>>2]=2147483647&B,i[A+D>>2]=2147483647&C),t=t+1|0,C=(2147483647&d)<<1|C>>>31,d>>=31,B=(2147483647&h)<<1|B>>>31,h>>=31;i[(t=(e<<2)-4|0)+r>>2]=B,i[A+t>>2]=C,nr(r,e,n,h>>>31|0),nr(A,e,n,d>>>31|0)}function x(r,A,n,e){var t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0,D=0,b=0,d=0,h=0;for(s=i[A+4>>2],i[r>>2]=i[A>>2],i[r+4>>2]=s,w=i[n+4>>2],i[(t=((s=(e=1<<e)>>>1|0)<<3)+r|0)>>2]=i[n>>2],i[t+4>>2]=w,w=e>>>2|0,e=0;(0|e)!=(0|w);)y=i[(f=(t=e+w<<3)+A|0)>>2],f=i[f+4>>2],D=i[(a=(o=e<<3)+A|0)>>2],a=i[a+4>>2],l=i[(t=n+t|0)>>2],P=i[t+4>>2],o=R(u=i[(t=n+o|0)>>2],c=i[t+4>>2],b=i[(t=1472+(e+s<<4)|0)>>2],v=i[t+4>>2]),d=i[t+8>>2],h=i[t+12>>2],t=Gr(o,g,R(l,P,d,h),g),o=g,l=j(R(u,c,d,h),g,R(l,P,b,v),g),P=g,u=j(D,a,t,o),c=g,b=j(y,f,l,P),i[(v=(e<<4)+r|0)>>2]=u,i[v+4>>2]=c,i[(c=((u=e<<1)+s<<3)+r|0)>>2]=b,i[c+4>>2]=g,t=Gr(D,a,t,o),D=g,y=Gr(y,f,l,P),i[(a=((f=1|u)<<3)+r|0)>>2]=t,i[a+4>>2]=D,i[(t=(f+s<<3)+r|0)>>2]=y,i[t+4>>2]=g,e=e+1|0}function U(r,A,n,e,t,f,a,o,u,s){var l,P,v,w=0,y=0,D=0,b=0,d=0,h=0,C=0,B=0,k=0,j=0,p=0,m=0,S=0,T=0;for(P=(l=1<<s)-1|0,v=f<<2;(0|d)!=(0|l);){for(B=(c(n,d)<<2)+r|0,f=0,s=0-i[(d<<2)+a>>2]|0,b=e;(0|f)!=(0|l);){k=b,h=s,y=0,D=0;r:if(t)for(p=A>>>0<o>>>0?o:A,m=31-u|0,S=0-(i[((t<<2)+k|0)-4>>2]>>>30|0)>>>1|0,T=h>>31,s=o;;){if((0|s)==(0|p))break r;b=S,(w=s-o|0)>>>0<t>>>0&&(b=i[(w<<2)+k>>2]),C=y>>31,j=y,C=(y=y+i[(w=(s<<2)+B|0)>>2]|0)>>>0<j>>>0?C+1|0:C,j=w,w=or(h,T,b<<u&2147483647|D,0)+y|0,D=C+g|0,D=y>>>0>w>>>0?D+1|0:D,i[j>>2]=2147483647&w,y=(2147483647&D)<<1|w>>>31,s=s+1|0,D=b>>>m|0}B=(s=(f+d|0)==(0|P))?r:(n<<2)+B|0,s=s?0-h|0:h,f=f+1|0,b=k+v|0}d=d+1|0}}function F(r,A,n){var t,f=0,a=0,o=0,u=0,c=0,s=0,l=0;t=i[n>>2],a=A;r:{for(;;){if(f=i[t+200>>2],u=i[t+204>>2],!o&(0|a)==(0|c)){n=A;break r}if(!((0|o)==(0|u)&f>>>0>(n=c)>>>0|o>>>0<u>>>0))break;l=r+n|0,s=i[(f=(-8&(u=s=(136-f|0)+c|0))+t|0)>>2],f=i[f+4>>2],n=31&(u<<=3),e[0|l]=(63&u)>>>0>=32?f>>>n|0:((1<<n)-1&f)<<32-n|s>>>n,o=(n=c+1|0)?o:o+1|0,c=n}a=c}for(c=f-a|0,o=u-((f>>>0<a>>>0)+0|0)|0,A=A-n|0,r=r+n|0;i[t+200>>2]=c,i[t+204>>2]=o,A;){for(b(t),n=0;!(A>>>0<=n>>>0|n>>>0>=136);)c=i[(a=(-8&n)+t|0)>>2],o=i[a+4>>2],a=31&(f=n<<3&56),e[r+n|0]=(63&f)>>>0>=32?o>>>a|0:((1<<a)-1&o)<<32-a|c>>>a,n=n+1|0;A=A-n|0,r=r+n|0,c=136-n|0,o=0}}function R(r,A,n,e){var t,f,i,a=0,o=0,u=0,c=0,s=0;return f=(A^e)>>>31|0,s=or(u=134217727&((33554431&e)<<7|n>>>25)|134217728,o=a,a=134217727&((33554431&A)<<7|r>>>25)|134217728,0),i=g,a=or(c=33554431&n,0,a,o),n=g,o=or(t=33554431&r,r=0,u,o),u=g,c=or(t,r,c,r),r=s,u=((33554431&n)<<7|a>>>25)+((33554431&u)<<7|o>>>25)+((s=((33554431&a)+((33554431&g)<<7|c>>>25)|0)+(33554431&o)|0)>>>25)|0,a=i,a=(o=r+u|0)>>>0<u>>>0?a+1|0:a,u=o,n=((o=a>>>23|0)+((r=A>>>20&2047)+(A=e>>>20&2047)|0)|0)-2100|0,A=0-(r=(r+2047&A+2047)>>>11|0)|0,e=0-(0!=(0|r))|0,fr(f,n,(0-o&((1&(r=33554431+(33554431&(c|s))>>>25|u)|(1&a)<<31|u>>>1)^r)^r)&A,(a^0-(0!=(0|o))&(a^a>>>1))&e)}function O(r,A){var n,e=0,t=0,f=0,i=0,a=0,o=0;return n=i=A>>>31|0,i=r^(e=t=A>>31),r=(A^e)+a|0,r=(t=n+i|0)>>>0<i>>>0?r+1|0:r,i=t,t=(e=0!=(0|r))<<5,a=r,o=(r=e?r:i)<<16|(A=e?i:0)>>>16,t=((f=(r=(e=r>>>0>65535)?r:o)>>>0>16777215)<<3)+(t=(e<<4)+t|0)|0,e=r<<8|(A=e?A:A<<16)>>>24,A=f?A:A<<8,e=((f=(r=f?r:e)>>>0>268435455)<<2)+t|0,t=r,r=r<<4|A>>>28,A=f?A:A<<4,t=(f=(r=f?t:r)>>>0>1073741823)?A:A<<2,e=(((f<<1)+e|0)+(A=(r=f?r:r<<2|A>>>30)>>>31|0)|0)-54|0,i=(f=!(a|i))?0:e,a=A-1|0,A=(r^(e=r<<1|t>>>31))&(A=0-!A|0)^r,o=0,o=(r=511+(511&(a=a&(t^t<<1)^t))|0)>>>0<511?o+1|0:o,r|=a,e=(A|=o)>>>9|0,fr(n,i,f?0:(511&A)<<23|r>>>9,f?0:e)}function H(r,A){for(var n=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0;512!=(0|c);){r:{for(;;){for(s=0,t=0;!(s>>>1|0);){for(n=lr(r),a=f=g,f=f>>>31|0,P=lr(r),v=2147483647&g,a=(2147483647&a)-((n>>>0<770878296)+298923992|0)>>>31|0,n=1,o=0;27!=(0|n);)w=o,o=i[(u=17952+(n<<3)|0)>>2],o=w|0-((u=!(v-(i[u+4>>2]+(o>>>0>P>>>0)|0)>>>31|0))&(1^a))&n,n=n+1|0,a|=u;t=(t+f|0)+(0-f^o)|0,s=s+1|0}if(!(t+127>>>0>254)){if(n=1&t,511==(0|c)){if((0|n)==(0|l))continue;break r}break}}l^=n}e[A+c|0]=t,c=c+1|0}}function M(r){var A=0,n=0,e=0,t=0,i=0,a=0,u=0,c=0,s=0,l=0,P=0,v=0;e=512,n=1;r:for(;;){if(e>>>0<2){for(n=4091,A=512;;){if(A>>>0<2){for(A=0;512!=(0|A);)f[(t=(A<<1)+r|0)>>1]=Mr(o[t>>1],n),A=A+1|0;break}A=A>>>1|0,n=(0-(1&n)&12289)+n>>>1|0}return}for(t=n<<1,e=e>>>1|0,a=0,u=0;;){if((0|e)==(0|u)){n=t;continue r}for(l=n+a|0,P=o[28976+(e+u<<1)>>1],A=a;A>>>0<l>>>0;)c=o[(i=(A<<1)+r|0)>>1],v=i,s=o[(i=(A+n<<1)+r|0)>>1],f[v>>1]=Vr(c,s),f[i>>1]=Mr(Wr(c,s),P),A=A+1|0;a=t+a|0,u=u+1|0}}}function Y(r,A,n,e,t,f){var a=0,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,g=0,D=0,b=0,d=0;r:if(e){o=y=1<<e,s=1;A:for(;;){if(o>>>0>=2)for(b=c(A,s),g=s<<1,o=o>>>1|0,l=0,v=0;;){if((0|o)==(0|l)){s=g;continue A}for(P=(a=(c(A,v)<<2)+r|0)+(b<<2)|0,d=i[(o+l<<2)+n>>2],w=0;(0|s)!=(0|w);)u=i[a>>2],D=i[P>>2],i[a>>2]=Xr(u,D,t),i[P>>2]=vr(Nr(u,D,t),d,t,f),w=w+1|0,P=(u=A<<2)+P|0,a=a+u|0;v=v+g|0,l=l+1|0}break}for(n=-2147483648>>>e|0,a=0,A<<=2;;){if((0|a)==(0|y))break r;i[r>>2]=vr(i[r>>2],n,t,f),a=a+1|0,r=r+A|0}}}function J(r,A,n,e,t){var f,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0;f=1<<t;r:{if(!n)for(t=0;;){if((0|t)==(0|f))break r;i[(A=(t<<3)+r|0)>>2]=0,i[A+4>>2]=0,t=t+1|0}for(v=n-1<<2,w=e<<2;;){if((0|u)==(0|f))break r;for(t=0,P=1&(c=0-(i[A+v>>2]>>>30|0)|0),y=c>>>1|0,e=0,s=1072693248,a=0,l=0;(0|n)!=(0|t);)o=t<<2,t=t+1|0,P=(o=(i[A+o>>2]^y)+P|0)>>>31|0,a=j(a,l,R(O(a=(2147483647&o)-(c&o<<1)|0,a>>31),g,e,s),g),l=g,e=R(e,s,0,1105199104),s=g;i[(e=(u<<3)+r|0)>>2]=a,i[e+4>>2]=l,u=u+1|0,A=A+w|0}}}function L(r,A,n,t,f){var a,o=0,u=0;for(a=r+2048|0;512!=(0|o);)i[(u=o<<2)+r>>2]=rA(e[A+o|0],2147473409),i[a+u>>2]=rA(e[n+o|0],2147473409),o=o+1|0;if(!(!f|t))return V(A=a+2048|0,A+2048|0,9,383167813,2147473409,n=xr(2147473409)),G(r,1,A,9,2147473409,n),void G(a,1,A,9,2147473409,n);if(t){if(1==(0|t))return void k(r,9,0,0,f);for(k(r,9,0,0,1),A=t-1|0,o=1;(0|A)!=(0|o);)k(r,9-o|0,o,1,1),o=o+1|0;k(r,10-t|0,A,1,f)}}function V(r,A,n,e,t,f){var a,u,c,s=0,l=0,P=0,v=0;for(s=n>>>0>10?n:10,l=vr(e,v=Tr(t,f),t,f),e=n;(0|e)!=(0|s);)e=e+1|0,l=vr(l,l,t,f);for(u=10-n|0,e=0,a=l,s=l=AA(t),c=t-2|0,P=30;(0|P)>=0;)s=vr(s,s,t,f),s=0-(c>>>P&1)&(vr(s,a,t,f)^s)^s,P=P-1|0;for(P=vr(v,vr(s,1,t,f),t,f),s=l;!(e>>>n|0);)v=o[24640+(e<<u<<1)>>1]<<2,i[v+r>>2]=l,i[A+v>>2]=s,e=e+1|0,l=vr(l,a,t,f),s=vr(s,P,t,f)}function G(r,A,n,e,t,f){var a=0,o=0,u=0,s=0,l=0,P=0,v=0,w=0,y=0,g=0,D=0,b=0;r:if(e)for(a=1,l=y=1<<e;;){if(a>>>0>=y>>>0)break r;for(D=c(P=l>>>1|0,A),u=0,v=0;(0|a)!=(0|u);){for(s=(e=(c(A,v)<<2)+r|0)+(D<<2)|0,b=i[(a+u<<2)+n>>2],w=0;(0|w)!=(0|P);)o=i[e>>2],g=vr(i[s>>2],b,t,f),i[e>>2]=Xr(o,g,t),i[s>>2]=Nr(o,g,t),w=w+1|0,s=(o=A<<2)+s|0,e=e+o|0;v=l+v|0,u=u+1|0}a<<=1,l=P}}function X(r,A){var n,e=0,t=0,f=0,i=0,a=0,o=0,u=0,c=0;for(n=1048575&A|1048576,t=1048576;55!=(0|i);)i=i+1|0,a=f,c=(f=c|1&(u=(o=t-((r>>>0>e>>>0)+n|0)>>>31|0)-1|0))<<1,f=a<<1|f>>>31,a=(t=t-(((o=0-!o|0)&n)+((a=r&u)>>>0>e>>>0)|0)|0)<<1|(e=e-a|0)>>>31,e<<=1,t=a;return fr((1072693248^A)>>>31|0,968+((i=f>>>23|0)-(A>>>20&2047)|0)|0,(e=(t=0!=(e|t))|c)^((t|(1&f)<<31|c>>>1)^e)&(u=0-i|0),0-(0!=(0|i))&(f>>>1^f)^f)}function Z(r,A,n,t){var f=0,i=0,o=0,u=0,c=0;u=-1^(i=-1<<t-1);r:{for(;;){if(512!=(0|f)){if((0|i)>=(0|(c=e[n+f|0])))break r;if(f=f+1|0,(0|u)>=(0|c))continue;break r}break}if(i=7+(t<<9)>>>3|0,r){if(A>>>0<i>>>0)break r;for(u=-1<<t^-1,A=0,f=0;512!=(0|o);){for(A=u&a[n+o|0]|A<<t,f=t+f|0;f>>>0>=8;)f=f-8|0,e[0|r]=A>>>f,r=r+1|0;o=o+1|0}f&&(e[0|r]=A<<8-f)}o=i}return o}function W(r,A,n){var e=0,t=0,f=0,i=0;return t=31&(f=i=63&n),f=f>>>0>=32?-1>>>t|0:(e=-1>>>t|0)|(1<<t)-1<<32-t,f&=r,e&=A,t=31&i,i>>>0>=32?(e=f<<t,i=0):(e=(1<<t)-1&f>>>32-t|e<<t,i=f<<t),f=e,e=31&(t=0-n&63),t>>>0>=32?(e=-1<<e,n=0):e=(n=-1<<e)|(1<<e)-1&-1>>>32-e,r&=n,A&=e,e=31&t,t>>>0>=32?(n=0,r=A>>>e|0):(n=A>>>e|0,r=((1<<e)-1&A)<<32-e|r>>>e),g=n|f,r|i}function N(r,A,n){var e,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0,y=0;for(e=1<<n>>>1|0,n=0;(0|n)!=(0|e);)o=i[(a=(f=n+e<<3)+A|0)>>2],a=i[a+4>>2],c=i[(f=r+f|0)>>2],s=i[f+4>>2],w=Gr(R(l=i[(u=(t=n<<3)+r|0)>>2],P=i[u+4>>2],v=i[(t=A+t|0)>>2],t=i[t+4>>2]),g,R(c,s,o,a),g),y=g,o=j(R(l,P,o,a),g,R(c,s,v,t),g),i[u>>2]=w,i[u+4>>2]=y,i[f>>2]=o,i[f+4>>2]=g,n=n+1|0}function q(r,A){for(var n=0,e=0,t=0,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0,v=0,w=0;256!=(0|f);)o=i[(a=(n=f+256<<3)+r|0)>>2],u=i[a+4>>2],c=i[(t=(e=f<<3)+A|0)>>2],t=i[t+4>>2],s=i[(e=r+e|0)>>2],l=i[e+4>>2],n=qr(i[(n=A+n|0)>>2],i[n+4>>2]),P=g,v=Gr(R(s,l,c,t),g,R(o,u,n,P),g),w=g,o=j(R(s,l,n,P),g,R(o,u,c,t),g),i[e>>2]=v,i[e+4>>2]=w,i[a>>2]=o,i[a+4>>2]=g,f=f+1|0}function K(r){var A=0,n=0,e=0,t=0,i=0,a=0,u=0,c=0,s=0,l=0,P=0,v=0;for(A=1,a=512;A>>>0<512;){for(u=a>>>1|0,t=0,i=0;(0|A)!=(0|i);){for(l=t+u|0,P=o[26928+(A+i<<1)>>1],n=t;n>>>0<l>>>0;)c=o[(e=(n<<1)+r|0)>>1],v=e,s=Mr(o[(e=(n+u<<1)+r|0)>>1],P),f[v>>1]=Vr(c,s),f[e>>1]=Wr(c,s),n=n+1|0;t=t+a|0,i=i+1|0}A<<=1,a=u}}function _(r,A,n,t){var f=0,i=0,o=0,u=0,c=0,s=0,l=0,P=0;r:if(!((o=7+(A<<9)>>>3|0)>>>0>t>>>0))for(c=-1<<A^-1,s=0-(u=1<<A-1)|0,t=0;;){A:{if(f>>>0<512)for(t=t+8|0,l=n+1|0,i=a[0|n]|i<<8;;){if(A>>>0>t>>>0|f>>>0>=512)break A;if(n=i>>>(t=t-A|0)&c,(0|(n|=0-(n&u)))==(0|s))break r;e[r+f|0]=n,f=f+1|0}P=(-1<<t^-1)&i?0:o;break r}n=l}return P}function $(r,A,n,e){var t,f=0,a=0,o=0,u=0,c=0,s=0,l=0,P=0;for(t=1<<e>>>1|0,e=0;(0|e)!=(0|t);)c=i[(f=(a=e+t<<3)+n|0)>>2],s=i[f+4>>2],l=i[(o=(f=e<<3)+n|0)>>2],o=i[o+4>>2],P=i[(a=A+a|0)>>2],a=i[a+4>>2],u=r+f|0,f=A+f|0,i[u>>2]=X(j(j(_r(i[f>>2],i[f+4>>2]),g,_r(P,a),g),g,j(_r(l,o),g,_r(c,s),g),g),g),i[u+4>>2]=g,e=e+1|0}function rr(r,A){var n,e=0,t=0,f=0;return e=A<<10|r>>>22,t=cr(r=(f=(2046&(t=A>>>20|0))>>>0>1021)?r<<10&-1024:0,f=f?1073741823&e|1073741824:0,63^(n=61-t&63)),e=g,f=wr(r,f,n),r=200>>>(e>>>29|((r=t)|0-(r|536870911&e))>>>31)&1,e=g,e=r>>>0>(t=f+r|0)>>>0?e+1|0:e,f=t,e^=t=r=A>>31,g=e=(r=(f^r)+(A=A>>>31|0)|0)>>>0<A>>>0?e+1|0:e,r}function Ar(r){var A,n,e,t=0,f=0;r=i[r>>2],t=i[r+200>>2],f=i[(A=(-8&t)+r|0)>>2],n=i[A+4>>2],e=f,t=31&(f=t<<3),(63&f)>>>0>=32?(f=31<<t,t=0):(f=(1<<t)-1&31>>>32-t,t=31<<t),i[A>>2]=e^t,i[A+4>>2]=f^n,t=-2147483648^i[r+132>>2],i[r+128>>2]=i[r+128>>2],i[r+132>>2]=t,i[r+200>>2]=0,i[r+204>>2]=0}function nr(r,A,n,e){for(var t=0,f=0,a=0,o=0,u=0;(0|A)!=(0|t);)a=i[(f=t<<2)+r>>2]-(i[n+f>>2]+a|0)>>>31|0,t=t+1|0;for(t=0,f=0-e>>>1|0,a=0-(!a|e)|0;(0|A)!=(0|t);)e=i[(u=(o=t<<2)+r|0)>>2]-((a&(f^i[n+o>>2]))+e|0)|0,i[u>>2]=2147483647&e,e=e>>>31|0,t=t+1|0}function er(r,A,n){var e,t=0,f=0;for(e=1<<n>>>1|0,n=0;(0|n)!=(0|e);)f=(t=n<<3)+r|0,t=A+t|0,i[f>>2]=R(i[f>>2],i[f+4>>2],i[t>>2],i[t+4>>2]),i[f+4>>2]=g,t=R(i[(f=(n+e<<3)+r|0)>>2],i[f+4>>2],i[t>>2],i[t+4>>2]),i[f>>2]=t,i[f+4>>2]=g,n=n+1|0}function tr(r,A){var n,e,t,f=0,i=0;return n=A<<10|r>>>22,e=r<<10&-1024,i=r=A>>31,f=(2046&(r=A>>>20|0))>>>0>1021,r=i^(t=wr(e,1073741823&n|1073741824,61-r&63),f?t:0),i^=f?g:0,A=(f=A>>>31|0)+r|0,r=i,g=r=A>>>0<f>>>0?r+1|0:r,A}function fr(r,A,n,e){var t,f=0;return f=r<<31,A=n&(r=(t=A+1076|0)>>>31|0)-1,n=e&0-!r,e=200>>>(7&A)&1,r=(r=(t&0-(n>>>22|0))<<20)+(f|=n>>>2)|0,r=(A=(A=(3&n)<<30|A>>>2)+(n=0)|0)>>>0<n>>>0?r+1|0:r,g=r=(A=(n=A)+e|0)>>>0<n>>>0?r+1|0:r,A}function ir(r,A,n){var e,t=0,f=0,a=0,o=0;for(e=n,n=0;(0|A)!=(0|n);)o=or(e,0,i[(a=(n<<2)+r|0)>>2],0),f=g,f=(t=o+t|0)>>>0<o>>>0?f+1|0:f,i[a>>2]=2147483647&t,n=n+1|0,t=(2147483647&f)<<1|t>>>31;return t}function ar(r){for(var A=0,n=0,e=0,t=0,f=0;256!=(0|n);)t=i[(A=e=(n+256<<3)+r|0)>>2],f=i[A+4>>2],i[(A=(n<<3)+r|0)>>2]=j(_r(i[A>>2],i[A+4>>2]),g,_r(t,f),g),i[A+4>>2]=g,i[e>>2]=0,i[e+4>>2]=0,n=n+1|0}function or(r,A,n,e){var t,f,i,a,o=0,u=0;return a=c(o=n>>>16|0,u=r>>>16|0),o=(65535&(u=((i=c(t=65535&n,f=65535&r))>>>16|0)+c(u,t)|0))+c(o,f)|0,g=(c(A,n)+a|0)+c(r,e)+(u>>>16)+(o>>>16)|0,65535&i|o<<16}function ur(r,A,n){var t,f=0,i=0,a=0;for(t=0-n|0;;){if(f>>>9|0)a=1;else if(!((0|t)>(0|(i=Zr((f<<2)+A|0)))|(0|n)<(0|i))){e[r+f|0]=i,f=f+1|0;continue}break}return a}function cr(r,A,n){var e,t,f=0;return e=(f=0-(n>>5)|0)>>31,t=f,f=A^(A^(f=r))&e,A=r^=t&r,(63&(r=n&=31))>>>0>=32?(n=A<<r,r=0):(n=(1<<r)-1&A>>>32-r|f<<r,r=A<<r),g=n,r}function sr(r){var A=0,n=0;for(A=r,r=D(208),i[A>>2]=r,r||(v(111),s());25!=(0|n);)i[(A=r+(n<<3)|0)>>2]=0,i[A+4>>2]=0,n=n+1|0;i[r+200>>2]=0,i[r+204>>2]=0}function lr(r){var A;return w=A=w-16|0,F(A+8|0,8,r),w=A+16|0,g=a[A+12|0]|a[A+13|0]<<8|a[A+14|0]<<16|a[A+15|0]<<24,a[A+8|0]|a[A+9|0]<<8|a[A+10|0]<<16|a[A+11|0]<<24}function Pr(r){var A,e;return(r=(A=i[7756])+(e=r+3&-4)|0)>>>0<=A>>>0&&e||r>>>0>(n.byteLength/65536|0)<<16>>>0&&!(0|P(0|r))?(i[8381]=48,-1):(i[7756]=r,A)}function vr(r,A,n,e){return r=or(A,0,r,0),e=or(n,0,2147483647&or(e,0,A=r,r=g),0),r=g+r|0,(r=((2147483647&(r=(A=A+e|0)>>>0<e>>>0?r+1|0:r))<<1|A>>>31)-n|0)+(r>>31&n)|0}function wr(r,A,n){var e=0;return r^=(r^A)&(e=0-(n>>5)|0),A^=A&e>>31,e=r,(63&(r=n&=31))>>>0>=32?(n=0,r=A>>>r|0):(n=A>>>r|0,r=((1<<r)-1&A)<<32-r|e>>>r),g=n,r}function yr(r,A,n){for(var e=0,t=0,f=0;!(f>>>n|0);)t=(e=f<<3)+r|0,e=A+e|0,i[t>>2]=j(i[t>>2],i[t+4>>2],i[e>>2],i[e+4>>2]),i[t+4>>2]=g,f=f+1|0}function gr(r,A,n){for(var e=0,t=0,f=0;!(f>>>n|0);)t=(e=f<<3)+r|0,e=A+e|0,i[t>>2]=Gr(i[t>>2],i[t+4>>2],i[e>>2],i[e+4>>2]),i[t+4>>2]=g,f=f+1|0}function Dr(r,A){var n=0,e=0;return A=Mr(A,10952),e=Mr(n=nA(A),A),n=nA(nA(nA(nA(nA(Mr(e,n)))))),e=Mr(n,e),n=Mr(e,n),Mr(Mr(nA(Mr(nA(nA(Mr(nA(nA(n)),e))),n)),A),r)}function br(r,A,n){var e,t=0,f=0;for(e=0-n>>>1|0;(0|A)!=(0|t);)n=(i[(f=(t<<2)+r|0)>>2]^e)+n|0,i[f>>2]=2147483647&n,t=t+1|0,n=n>>>31|0}function dr(r,A,n){var t=0;if(r>>>0<A>>>0)return Ur(r,A,n);if(n)for(t=r+n|0,A=A+n|0;A=A-1|0,e[0|(t=t-1|0)]=a[0|A],n=n-1|0;);return r}function hr(r,A,n,e,t){var f,a=0;for(f=A-1|0,A=0;!(A>>>f|0);)a=(A<<3)+r|0,i[(A<<2)+r>>2]=vr(vr(i[a>>2],i[a+4>>2],n,e),t,n,e),A=A+1|0}function Cr(r,A,n,e){var t,f=0,i=0;for(t=r-1|0,r=0,f=AA(A);(i=1<<r)>>>0<=t>>>0;)t&i&&(f=vr(f,e,A,n)),r=r+1|0,e=vr(e,e,A,n);return f}function Br(r,A,n,e){var t,f=0;return t=f=(A^e)>>31,((0|r)!=(0|(f=n&(-1^f)))|(0|A)!=(0|(n=e&(-1^t))))&(A&e)>>>31^(r>>>0<f>>>0&(0|A)<=(0|n)|(0|A)<(0|n))}function kr(r,A){var n,e=0,t=0;return n=e=A+-1048576|0,A=0,t=e=1+(e>>>20&2047)|0,g=(e=(A=e?A:A+1|0)>>>11|0)-!(A=(2047&A)<<21|t>>>11)&n,r&(A-1|0)}function jr(r,A){var n,e=0;for(A=(n=1<<A)>>>1|0;(0|A)!=(0|n);)i[(e=(A<<3)+r|0)>>2]=qr(i[e>>2],i[e+4>>2]),i[e+4>>2]=g,A=A+1|0}function pr(r,A){for(var n=0,t=0,f=0;(0|A)!=(0|t);)w=n=w-16|0,e[n+15|0]=0,f=0|l(31028,n+15|0,0),w=n+16|0,e[r+t|0]=f,t=t+1|0}function mr(r,A,n,e,t){for(var f=0;A;)f=Xr(vr(f,t,n,e),((f=i[((A=A-1|0)<<2)+r>>2]-n|0)>>31&n)+f|0,n);return f}function Sr(r,A){for(var n=0,t=0,f=0;!(n>>>9|0);)t=(n<<3)+r|0,f=e[A+n|0],i[t>>2]=O(f,f>>31),i[t+4>>2]=g,n=n+1|0}function Tr(r,A){var n=0;return n=vr(n=Xr(n=AA(r),n,r),n,r,A),n=vr(n,n,r,A),n=vr(n,n,r,A),n=vr(n,n,r,A),(A=vr(n,n,r,A))+(0-(1&A)&r)>>>1|0}function zr(r,A,n){for(var e=0,t=0;!(t>>>9|0);)i[(e=(t<<3)+r|0)>>2]=R(i[e>>2],i[e+4>>2],A,n),i[e+4>>2]=g,t=t+1|0}function Er(r){for(var A=0,n=0,t=0,f=0;!(n>>>9|0);)f=A,A=e[r+n|0],t|=A=f+c(A,A)|0,n=n+1|0;return t>>31|A}function Qr(r){for(var A=0,n=0;!(n>>>9|0);)i[(A=(n<<3)+r|0)>>2]=qr(i[A>>2],i[A+4>>2]),i[A+4>>2]=g,n=n+1|0}function Ir(r,A){for(var n=0,e=0,t=0;!(n>>>9|0);)f[(t=(e=n<<1)+r|0)>>1]=Mr(o[t>>1],o[A+e>>1]),n=n+1|0}function xr(r){var A=0;return A=c(A=2-r|0,2-c(r,A)|0),A=c(A,2-c(r,A)|0),A=c(A,2-c(r,A)|0),2147483647&c(A,c(r,A)-2|0)}function Ur(r,A,n){var t=0;if(n)for(t=r;e[0|t]=a[0|A],t=t+1|0,A=A+1|0,n=n-1|0;);return r}function Fr(r){for(var A=0,n=0;!(A>>>9|0);)f[(n=(A<<1)+r|0)>>1]=Mr(o[n>>1],10952),A=A+1|0}function Rr(r){var A,n=0;return A=(n=i[r+512>>2])+1|0,i[r+512>>2]=A,n=a[r+n|0],512==(0|A)&&C(r),n}function Or(r,A,n,e,t,f){return A?Nr(mr(r,A,n,e,t),0-(i[((A<<2)+r|0)-4>>2]>>>30|0)&f,n):0}function Hr(r,A){var n=0;if(A)for(n=r;e[0|n]=0,n=n+1|0,A=A-1|0;);return r}function Mr(r,A){return(r=((r=c(r,A))+c(65535&c(r,12287),12289)>>>16|0)-12289|0)+(r>>31&12289)|0}function Yr(r,A){var n=0;return(-1>>>(n=31&A)&r)<<n|((n=r)&-1<<(r=0-A&31))>>>r}function Jr(r,A){var n;return(((A=7&(n=A-r|0))?8-A|0:0)+n|0)+r|0}function Lr(r){return r-((r-1073736705>>>31|0)-1&2147473409)|0}function Vr(r,A){return(r=(r+A|0)-12289|0)+(r>>31&12289)|0}function Gr(r,A,n,e){return j(r,A,n,-2147483648^e)}function Xr(r,A,n){return(r=(r+A|0)-n|0)+(r>>31&n)|0}function Zr(r){return(r=i[r>>2])<<1&-2147483648|r}function Wr(r,A){return(r=r-A|0)+(r>>31&12289)|0}function Nr(r,A,n){return(r=r-A|0)+(r>>31&n)|0}function qr(r,A){return g=-2147483648^A,r}function Kr(){u[y>>2]>u[y+4>>2]&&s()}function _r(r,A){return R(r,A,r,A)}function $r(r){return(r>>31&12289)+r|0}function rA(r,A){return(r>>31&A)+r|0}function AA(r){return-2147483648-r|0}function nA(r){return Mr(r,r)}function eA(r){d(i[r>>2])}t(A=a,1024,\"AQAAAAAAAACCgAAAAAAAAIqAAAAAAACAAIAAgAAAAICLgAAAAAAAAAEAAIAAAAAAgYAAgAAAAIAJgAAAAAAAgIoAAAAAAAAAiAAAAAAAAAAJgACAAAAAAAoAAIAAAAAAi4AAgAAAAACLAAAAAAAAgImAAAAAAACAA4AAAAAAAIACgAAAAAAAgIAAAAAAAACACoAAAAAAAAAKAACAAAAAgIGAAIAAAACAgIAAAAAAAIABAACAAAAAAAiAAIAAAACAcmFuZG9tYnl0ZXMAbGlic29kaXVtL3NyYy9saWJzb2RpdW0vcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwBidWZfbGVuIDw9IFNJWkVfTUFYAAAICAgICAcHBgYFAAgICAgICAgICAg=\"),t(A,1330,\"QQBDAEcATQBWAGQAegCaAM0AHwE=\"),t(A,1360,\"o4MRdAQAAAAG/IxUNgAAAAoUv9xPAgAAReCdkx0XAACEb4/1DNAAAOOW9xxogAYA6g9bMNiCLQDQbwYOERERAQAPB1VVVVUFAP+BVVVVVRUAtAIAAAAAQABI//////9/AAAAAAAAAIA=\"),t(A,1495,\"\"),t(A,18176,\"\"),t(A,24448,\"AQAAAAEAAAACAAAAAgAAAAQAAAAHAAAADgAAABsAAAA1AAAAagAAANEAAAAAAAAAAgAAAAIAAAAFAAAABwAAAAwAAAAVAAAAKAAAAE4AAACdAAAANAE=\"),t(A,24544,\"BAAAAAAAAAALAAAAAQAAABgAAAABAAAAMgAAAAEAAABmAAAAAQAAAMoAAAACAAAAkQEAAAQAAAAaAwAABQAAACkGAAAIAAAAQgwAAA0AAACkGAAAGQ==\"),t(A,24643,\"AgABAAOAAIACgAGAA0AAQAJAAUADwADAAsABwAMgACACIAEgA6AAoAKgAaADYABgAmABYAPgAOAC4AHgAxAAEAIQARADkACQApABkANQAFACUAFQA9AA0ALQAdADMAAwAjABMAOwALACsAGwA3AAcAJwAXAD8ADwAvAB8AMIAAgCCAEIA4gAiAKIAYgDSABIAkgBSAPIAMgCyAHIAygAKAIoASgDqACoAqgBqANoAGgCaAFoA+gA6ALoAegDGAAYAhgBGAOYAJgCmAGYA1gAWAJYAVgD2ADYAtgB2AM4ADgCOAE4A7gAuAK4AbgDeAB4AngBeAP4APgC+AH4AwQABAIEAQQDhACEAoQBhANEAEQCRAFEA8QAxALEAcQDJAAkAiQBJAOkAKQCpAGkA2QAZAJkAWQD5ADkAuQB5AMUABQCFAEUA5QAlAKUAZQDVABUAlQBVAPUANQC1AHUAzQANAI0ATQDtAC0ArQBtAN0AHQCdAF0A/QA9AL0AfQDDAAMAgwBDAOMAIwCjAGMA0wATAJMAUwDzADMAswBzAMsACwCLAEsA6wArAKsAawDbABsAmwBbAPsAOwC7AHsAxwAHAIcARwDnACcApwBnANcAFwCXAFcA9wA3ALcAdwDPAA8AjwBPAO8ALwCvAG8A3wAfAJ8AXwD/AD8AvwB/AMCAAICAgECA4IAggKCAYIDQgBCAkIBQgPCAMICwgHCAyIAIgIiASIDogCiAqIBogNiAGICYgFiA+IA4gLiAeIDEgASAhIBEgOSAJICkgGSA1IAUgJSAVID0gDSAtIB0gMyADICMgEyA7IAsgKyAbIDcgByAnIBcgPyAPIC8gHyAwoACgIKAQoDigCKAooBigNKAEoCSgFKA8oAygLKAcoDKgAqAioBKgOqAKoCqgGqA2oAagJqAWoD6gDqAuoB6gMaABoCGgEaA5oAmgKaAZoDWgBaAloBWgPaANoC2gHaAzoAOgI6AToDugC6AroBugN6AHoCegF6A/oA+gL6AfoDBgAGAgYBBgOGAIYChgGGA0YARgJGAUYDxgDGAsYBxgMmACYCJgEmA6YApgKmAaYDZgBmAmYBZgPmAOYC5gHmAxYAFgIWARYDlgCWApYBlgNWAFYCVgFWA9YA1gLWAdYDNgA2AjYBNgO2ALYCtgG2A3YAdgJ2AXYD9gD2AvYB9gMOAA4CDgEOA44AjgKOAY4DTgBOAk4BTgPOAM4CzgHOAy4ALgIuAS4DrgCuAq4BrgNuAG4CbgFuA+4A7gLuAe4DHgAeAh4BHgOeAJ4CngGeA14AXgJeAV4D3gDeAt4B3gM+AD4CPgE+A74AvgK+Ab4DfgB+An4BfgP+AP4C/gH+AwEAAQIBAQEDgQCBAoEBgQNBAEECQQFBA8EAwQLBAcEDIQAhAiEBIQOhAKECoQGhA2EAYQJhAWED4QDhAuEB4QMRABECEQERA5EAkQKRAZEDUQBRAlEBUQPRANEC0QHRAzEAMQIxATEDsQCxArEBsQNxAHECcQFxA/EA8QLxAfEDCQAJAgkBCQOJAIkCiQGJA0kASQJJAUkDyQDJAskByQMpACkCKQEpA6kAqQKpAakDaQBpAmkBaQPpAOkC6QHpAxkAGQIZARkDmQCZApkBmQNZAFkCWQFZA9kA2QLZAdkDOQA5AjkBOQO5ALkCuQG5A3kAeQJ5AXkD+QD5AvkB+QMFAAUCBQEFA4UAhQKFAYUDRQBFAkUBRQPFAMUCxQHFAyUAJQIlASUDpQClAqUBpQNlAGUCZQFlA+UA5QLlAeUDFQAVAhUBFQOVAJUClQGVA1UAVQJVAVUD1QDVAtUB1QM1ADUCNQE1A7UAtQK1AbUDdQB1AnUBdQP1APUC9QH1Aw0ADQINAQ0DjQCNAo0BjQNNAE0CTQFNA80AzQLNAc0DLQAtAi0BLQOtAK0CrQGtA20AbQJtAW0D7QDtAu0B7QMdAB0CHQEdA50AnQKdAZ0DXQBdAl0BXQPdAN0C3QHdAz0APQI9AT0DvQC9Ar0BvQN9AH0CfQF9A/0A/QL9Af0DAwADAgMBAwODAIMCgwGDA0MAQwJDAUMDwwDDAsMBwwMjACMCIwEjA6MAowKjAaMDYwBjAmMBYwPjAOMC4wHjAxMAEwITARMDkwCTApMBkwNTAFMCUwFTA9MA0wLTAdMDMwAzAjMBMwOzALMCswGzA3MAcwJzAXMD8wDzAvMB8wMLAAsCCwELA4sAiwKLAYsDSwBLAksBSwPLAMsCywHLAysAKwIrASsDqwCrAqsBqwNrAGsCawFrA+sA6wLrAesDGwAbAhsBGwObAJsCmwGbA1sAWwJbAVsD2wDbAtsB2wM7ADsCOwE7A7sAuwK7AbsDewB7AnsBewP7APsC+wH7AwcABwIHAQcDhwCHAocBhwNHAEcCRwFHA8cAxwLHAccDJwAnAicBJwOnAKcCpwGnA2cAZwJnAWcD5wDnAucB5wMXABcCFwEXA5cAlwKXAZcDVwBXAlcBVwPXANcC1wHXAzcANwI3ATcDtwC3ArcBtwN3AHcCdwF3A/cA9wL3AfcDDwAPAg8BDwOPAI8CjwGPA08ATwJPAU8DzwDPAs8BzwMvAC8CLwEvA68ArwKvAa8DbwBvAm8BbwPvAO8C7wHvAx8AHwIfAR8DnwCfAp8BnwNfAF8CXwFfA98A3wLfAd8DPwA/Aj8BPwO/AL8CvwG/A38AfwJ/AX8D/wD/Av8B/wNleHBhbmQgMzItYnl0ZSBr9PejAKzTLgACGDkAK9NUAD8fGACC230AzX0iAEiT0AD/wSkAddEKAMd3QwDkSpkAhJUCAPOubABvHz8ASncAAO1UxwBfvXQAJBAAACtU3QDkancAoQEAAGXc/wDaY60AHwAAAIrYgAAoZHsAAQAAALL9wwBpDAQAAAAAACTPEgD7MdAAAAAAAJ+UAAAfCYsAAAAAAGYDAACYqV0AAAAAAA4AAAC7br8=\"),t(A,26880,\"fl0v\"),t(A,26892,\"mHA=\"),t(A,26904,\"xg==\"),t(A,26916,\"AQ==\"),t(A,26928,\"+w/QHjQryCswG/YQgxgfJjcG/xgFJZIUSgLBFnId7iVuBAcZrwbFA7sb+h2fDioZriikH10HmAZUBVkotCfcI7IvYBjlA3UArxI3EQ0GoBsNCzoZTxGtIugbBAogFsoPnS+wAf8p1QS6Hf4Fjw+3HoUIpBgQIqoZ6xKaBg4AIA/BFZgkgy/jB3cdCwlBEqwcEQaEBNEgfSz8A5cLFCqFG/QM5CulFDotjSlmJxUlJBg9JPIX+wxzA+Uo6QHeBSMLNSsBJrYK0S9qE/EoXierBNoC4gYOD+4HBBeqKjwjmhTbIxQOxg7eJ2wMiw08Eo4JvR2qJEIDFx60GksN5xT0L/wNywZEKjsm4SfmD9ovTSGhKL0KqhxOKZgXrwNyJMUF0RrEJQEO6RlxL98PZA4AHvwf9hrNDU8myhfXAnMnWxshG50HAyY/KakXegG/HjsixSINJI4ixxF1JZAtzh11IjAWXBNrGMQgrCcTIiUJVwy7BVQVaSFnHlkKEAlMIywY4QJyDlsSeRZWI2cOEACSA0IUIynIEawHtQ30IFwdBRXtKdEMfRskBE8L9Bu3Iu0UCRkFIJIL5xjIE+oZ+RUWAaQD9SffItodXwFSJO0A4hYMHkoMXi+iHQUIFSzaDlQU+hHUBiQsVAF/DgYSLAHxKs4TQSdgLdcv/RzTKXIWFhb7DrEVyAQcIRUkBQ/6AMkrgRC2GNAl3i8oENoKtAJoIgoZPhp5J7Iorw68HGEs8SAlGUQOxhgSIw8V4AhMGfgc4iBIKtIuZRZsA3YbdwiECXINASQOIPoSTBe6CgocmgXdHK8ipSnBLHwQmAVQKugQbSFLB+4kcAnoDnQjrgIRFdsJ8xDjF2sCqQMSC18ezww7CUAd4BfAEzgD3CeqLVkEpwp4JoAD7AfTE14K4CjMHokvOhX+CwAZrCOYLXkvqBH5BAsmzCzRJjcn+CXWCLckuCs7AZ8RhgStF18aWS5lAcccxhHXA1YhoCCOJ2odJSQPEWUUnw9JIlkMThsiEIQtLg3VLNkGJAHpIfYKiiicL6gWIy5tDMQHAAR8JK0JsCrmEV4aIw5/FXEUnwkWIeIdHB/7GC8E+ASSDSUr2wxQLDYhBiVtJuUEQQdZGHASKS2SF1kmCw0FBz8LYhhQFEIIGh+JJGMsYxXEF4ElDBCbHMYo/yT3BJgB/xoHDGgBVCAPLcQjWSMTLVIDqSEQA+8ejiCKLzYH5SeYL5Mefy7gFTMm9APRAuAKFBqYGeQUSBGgGtUg5yYeFDQJsBWTFDUFYSK9JYwcnBYuE40DXS0rES4gHhrOEOQL7QjZL6sHACTIEI4utwITEUEmFBNrCfYnWgpJAzIP9ydQHDkhvCsgGtsPrBdmDnISTS64FpIb1BqBK/YeHhP8LwYQRA8aDn0ZAh8uH8kuYxoZAtIRVwYjIL0seB2KAyguTCVqKucl/wrYLZ0aQxszA8cifxhbKlwBWh2TICcZtgJUAxsW3QqEDkUt0AvzBdMhEhDyKecM/RaiC3kcbC6jI2skNi5iAN4JRAgjEI8sNAc9DkwPxR+wCHcqnB+zJWUX5BsgIYYGnwCrKjYTgACQHNUCxSOOE/kYpg2bF9wqJRg+Ll8NEin0HW0OAhr5GrEu5CeSLo0jrSD2Ey0AYAmBBxkRoAqfBjMA+AqKAmgHDSfzJswuoh/hEicQoRDOFp0S6SoMLU4Cpi/iAY0v1geYGyInSA/wLhcpYiwqG6IIHAElFckZGQ9jKLQrVxgFAlwlESwXD7oE/BHgH7csmQAkHIMW4RMgJHov5C1KBRAaswCcFVYKNReZL14DVgzdAW8cLhbqHp4QLgFNC4In6hpYJa8lgS4CEGAmHShJBdspzRRuGG8PDwcxGScUHAV7IEwNVQfPBHAA/hjMLfAvdhyzBfIvqCaADSADdQW2KWcA/BwoH6gD/AJ4AjwfHyD9IE4edipjJcwJmgd8Ga4nFATyEJkJOQ57BisQUBIFJowrag8iCI0U9AdKLtQdzC/2FEwJdwUoHjQIkQygKsIimh3bLucKvwQbDZcK2wjUB3ghwCeODCEJ1gZ5EoUT9xyrGAwvFhH1G+wS0wBDH68nSiTZLMcGIAmhFpMmACDaA2cdeQVmAx8OESHECiom8ge4J8AM9Bc2AEALmxIdLgIMXiDUJBETFRtCBDYnBwrEAn0DQRliEygnKghWFvcpDAN9Eg8SVggnCMISdAP8FKMWMhftEJ8ZfR2VFKgpnBC8DB0XPiqIFv8moB9vHpAaQx2AGHMHwyqRGBsukBe5LJME8SP9Hq8JIh9JLJYbzyJIGo4Zsh98IsMZ2Q38EAISnQhXG6ofuBWWKGkkwwltCWgc4RpWKVwk3STiDf4MZxfBLlcN+y9uJh8v7BCWHkEszRnvL/wHWy25HMErPi2VDu8i+iZbBgAcXw+6E8oKSB2PKPMCdgYVL1gTlicqEcAZ2h5JHcgi/S79DfwpKhZ2KCUT9hxDIsYCbBoOIRkc+xRqHEwrIgG4HqsaLi7NCbIZug+vFrIFWRaCFlIQOQhlLfQSwSIoC/YsMCTYCUgiYxtXCmoHfxs+F5srcBWFGN4jwCx5Aj4nIi0BFnMlHQlgG6wbtxMfHIkmJSM5AvYYXSrPJUwg0CxrEM0HAgBzJKIAJhjQB0EOQCbbGIUdKxg+Ic8moBU7I3oO6S6sBfsLdhXcJQETgxfCG4ol7BG1J3UY/xZcCrwnLAaLKB4S3Sb7DzEROQTNBOIJfhcLH9EUEwqPEkAZty1vG/wKAhfKKSUMTQioB60qaSmkKF0QUwfXFmIhBxJGFDwsUin6FpMr4SDzL2cpFh1XFvENXRd8J0oRciADKkcSLCsCBlEuZAA3IOEZ/SUZFFQNsh7HFvQkYRT0KcoeUh2MLxwsoRdPAA0AGhu2Ik0V6hG/LFcLRBJzJsUddiKVIyMIOyHtISYMZxvFDFcF/RgTKPMgHyknLVYrowgQB5ccMABLJQAKzATeJCMqGC4cB44sBiMPGMQL3RfsCpsIdAbHAlwbHQQNI3wU7QVqJAUshAMwD30r8ClVE8Ad9iaKEh4ofgBpC0Aa6xmPGS4GBBMqAKECwAgzHBAF1S77HYIhrS7dAy0pBx6tGych7AP8J18SowC3I/URHxkUL68Loi4nEiINDAhdLOsuCBoXFjkcGhdvJPwP+BYUG0oNDRSyJN0rhBQwIxQG/BqlEg0PTCJVKDke3ga/G28s8S+aIasMiBmmHY8hIC3VF7UM8SaoJZoRmA6tGkYqqiPcJu4NVQg9D5YXpRzRGYwNMxJxAowKOh5zDfQLPA3GDUIRhy5YGMIG/glkKOAUphSOCCotNxiyCTQiCxUFEAESnSEiIJAAGBYAIj0KMBU8Ko8LUixpGLMGVxNEJWAHtA4nABsgIAjGCb0FNikFIuEVRQTIDrETCgjPILgspyULCJYm7RzACe4eSi1zATkfAQxWKCgAFCcdJDMf4xXTD9YepAJ0LNMcZRl1E0QKoA3MKm4bURrNJuMbGgksD2EVuR4dG2kW7RUhJTAtDSzOCSEaggFuEWkAHAjLKHcAcw8SEfEsWA6vLO4CqAw9DPICrQ+ZLvojAhVpLgorAgs7B2YT9R+ACj0YnhqeA3gL5xC/J7EbnxfCJPwo9iKoCW8Y2AKRHagXwCgcK5QJ+wrLDrEDJiPcBG8iCSvSKwYX5RAfEusOYiaQG4Ia3iGjFRseUQVUJoULASw9KJQj3gFZGWUAdwcLJRgO3S4oKSwD0yJ9At8fsxSoI7gNYiCcG/Ie3AuXEnMIYQ+rDiosOx46E5wuqAGiFVQYeytiHsYuSQRKCysnCQrKCDAJNQP2CQgrWR6IAGkCVQwBFwMkxxp4ADURIQejJS4cFSiBLIkJWiWoK1cCJQjJLEEcIRjBEsYmMiOiEe8kWCyWLR4YDh8mJvAaUy2NDBkhkSYTC7YolA4ZH7EFaSqFH0ADXAZSDSQTZyr3E0cltRgHHfMPAAyPIn0miieLFJUsnBkvAbkFHw8JE7UWISfyGu8MOxe9IdwWEA+gA0UTUiFPB4gIwxX3FpkNTS0nJdkfIwAxCksXgB84BAcv/CDsC+UOOStQGgYhJAnjHXYH1SlFCKUlAhmMF0wIFR53Cj8UfhgAHSUKixoGJFUqGAGHIcYMYRoyCcMO1hd8EiYXwQnAITEo2xdfL44L/y80KJYfMQO1DzIKpAULF8gt3Ax4CeITShxVFKEU5CaOCgAa3wLDCIgtQQMjDHwXkRpmBMMYghSXKKolnhS5DSkm0QsLA9kkQA0NHZwCyCevH38ZqBlPKlIZRyBPFjQm0wFWFUkR3y61BJcTBhvoE/MOlRU7Lb4NCxPcHIsH1xkFBgQiBAE5DbgSJxFBFtceawipHOwAiykOLXIHuRI3JUccoiABFKYpBwkSDWwhwwJABEgTpgIFKBIANBbAA2sRFR/iAJMJBgCqIkABmhgDIx8iJAulC6sGIBWZE5QmPiaYC2sHSRpXEKoUZCf/HQUfKCI+FoUNTxBzFrkVMg1rFLgD3xBSJgQREAxuK0gDcRjmAXAXPgWOKIEXvhJxFZIRYRACCXkZwwXkGEUjZR9ZBmwbhBJiFhQfzxheGQUbjSw/HdonqyfyHYQd9SwKBqsZ1yfZCJ8cwBaELD0t+iXLCL8r7BTwHC0Low//I+QBZh3BJMsvDRhBI0kIDyjXCT0l8A7iIZssiCqaEicsARBuCWAZ4SY6KSgDtwtSCL4QLi8VHQwU6x71AFYXChN8HIgdKyngJnMjQQiJDi0oJidqJeYiQisaJSYBZxI/DWEFcCPNJ9kRiiq1JgsbNQAtErcBDSh0G98nlyB1BPwJsR3WH4YpyCFoJg8f7StTCIUWZyg1Jp4KiwWzEQQP4g/FEIktBS1ZLNkQBROaL0sGjCrhLIEiWQkPAE4qixMRADUCAxeRLzIrrCi1IoYP5SraG9AW8iiSIJMXNBsmBrgq5AehCf8fgAFSCqkKFxV/CLQk0y5jHxcR0xmSEyQuqyOjLGgAzBirJWUaTi/xFbcqHQKHAOELIBx+Gd0TaC9KAyEQBR5HK+og8AOlCvwtqhdNBJ4H6CA4Ftwa5S5fJ9cUnwPqBhEBuSDfCGkUKyh0AB8uWwCzLfUCGAVkHTMZYB/aHyAdXxA1AQ4J9AiZKHctCSXOL2IpYSXoHoAooSbULwscVA90DG8BHQhQAQgV/xWUIQ0S7waiIsMB3BclBWYYWyIIF3McPAwsLXETgS/LHFYFYi97KeEOHRScGE4KZRCKBVEnPBC1IMQhzShyA94fvScjJp8vywGWC14MlQGIE18kBBkaIw8G7x8uDg4qMSS8An0hJCXmGa0sSy3aFm4PpxKlLqYFghc6Dc4svhRkFSkCAiUaCpcFtQrZAXcsiRJEA94PqikvHugtnhU4AdMQ/xCEFuchvSD7HwUA4xwLEYAELRVvFEkZtAGPHZshVRgmIA==\"),t(A,31024,\"8ISA\");var tA,fA=((tA=[]).set=function(r,A){this[r]=A},tA.get=function(r){return this[r]},tA);return{f:function(){},g:D,h:d,i:fA,j:function(){var r;w=r=w-16|0,e[r+15|0]=0,l(31064,r+15|0,0),w=r+16|0},k:function(){return 897},l:function(){return 1281},m:function(){return 690},n:function(r,A){r|=0,A|=0;var n,t,u,s,l,P,v,y,D,b,d,h,C,B=0,k=0,T=0,Q=0,x=0,F=0,W=0,q=0,_=0,nr=0,tr=0,fr=0,ar=0,cr=0,lr=0,Pr=0,wr=0,kr=0,mr=0,Qr=0,Ir=0,Fr=0,Rr=0,Mr=0,Yr=0,Vr=0,Wr=0,Kr=0,AA=0,nA=0,tA=0,fA=0,iA=0,aA=0,oA=0,uA=0,cA=0,sA=0,lA=0,PA=0;w=s=w-16960|0,pr(B=s+16|0,48),sr(P=s+8|0),z(P,B,48),Ar(P),t=s+2112|0,u=s+1600|0,b=s+1088|0,y=4096+(l=4096+(n=s+2624|0)|0)|0,v=(B=s- -64|0)||n,D=((B?0:512)<<1)+n|0,C=31==(0|(d=a[1307]-1|0)),h=-1<<a[1318]-1^-1;r:for(;;){for(H(P,t),H(P,u),Q=0-(k=1<<d)|0,B=0;;){if(512!=(0|B)){if((0|(T=e[B+t|0]))<=(0|Q)|(0|k)<=(0|T))continue r;if((0|(T=e[B+u|0]))>=(0|k))continue r;if(B=B+1|0,(0|T)>(0|Q))continue;continue r}break}if(!(C||((B=Er(t))+(k=Er(u))|(B|k)>>31)>>>0>16822)){for(Sr(n,t),Sr(l,u),E(n,9),E(l,9),$(y,n,l,9),jr(n,9),jr(l,9),zr(n,0,1086849152),zr(l,0,1086849152),er(n,y,9),er(l,y,9),S(n,9),S(l,9),B=0,ar=0,W=0;512!=(0|B);)Q=(k=B<<3)+n|0,k=k+l|0,ar=j(j(ar,W,_r(i[Q>>2],i[Q+4>>2]),g),g,_r(i[k>>2],i[k+4>>2]),g),W=g,B=B+1|0;if(Br(ar,W,1608035756,1087401370)){for(B=0;512!=(0|B);)f[(k=B<<1)+D>>1]=$r(e[B+t|0]),f[k+v>>1]=$r(e[B+u|0]),B=B+1|0;K(v),K(D),B=0;A:{for(;;){if(512!=(0|B)){if(Q=o[(k=B<<1)+D>>1]){f[(k=k+v|0)>>1]=Dr(o[k>>1],Q),B=B+1|0;continue}B=0;break A}break}M(v),B=1}if(B){if(cA=0,Yr=0,L(Kr=(B=(x=i[6121])<<2)+(Ir=B+n|0)|0,t,u,9,0),m(Kr,x,x,2,0,k=(Rr=B+Kr|0)+B|0),x){for(lA=xr(i[Kr>>2]),Fr=xr(i[Rr>>2]),mr=Ur((B=x<<2)+(Q=B+k|0)|0,Kr,B),Mr=Ur(mr+B|0,Rr,B),i[Ir>>2]=1,Hr(Ir+4|0,B-4|0),PA=Hr(n,B),Wr=Ur(k,Rr,B),tA=Ur(Q,Kr,B),i[tA>>2]=i[tA>>2]-1,Vr=c(x,62)+30|0;W=0,nr=0,F=0,fr=0,k=-1,Q=-1,T=x,Vr>>>0>=30;){for(;T;)W^=((B=i[(q=(T=T-1|0)<<2)+Mr>>2])^W)&k,nr^=(B^nr)&Q,F^=((q=i[q+mr>>2])^F)&k,fr^=(q^fr)&Q,Q=(k=Q)&(2147483647+(B|q)>>>31|0)-1;for(B=(Q=(T=-1^k)&nr)>>>1|0,wr=Q=(nr=k&nr|W)+(W=Q<<31)|0,q=Q>>>0<W>>>0?B+1|0:B,k=k&fr|F,Q=(B=T&fr)<<31,B=F=B>>>1|0,kr=k=k+Q|0,F=k>>>0<Q>>>0?B+1|0:B,k=i[Mr>>2],nr=i[mr>>2],Q=0,tr=0,lr=0,cr=1,T=0,ar=0,W=0,_=1,fr=0;31!=(0|Q);)k=((k=k-((nA=(AA=nr)-(0-(B=(Pr=(((Pr=q-((wr>>>0<kr>>>0)+F|0)|0)^F)&(F^q)^Pr)>>>31|0)&(Qr=(nr=nr>>>Q&1)&k>>>Q))&k)|0)&0-(Pr=Qr&(-1^Pr)))|0)&0-(nr=B|!nr))+k|0,uA=_-(aA=(AA=0-Pr|0)&(oA=tr-(iA=_&(fA=0-B|0))|0))|0,B=(B=fr-(((Pr=0-(0!=(0|Pr))|0)&(iA=lr-((fr&(lr=0-(0!=(0|B))|0))+((Qr=tr)>>>0<iA>>>0)|0)|0))+(_>>>0<aA>>>0)|0)|0)+(_=B&(Qr=0-(0!=(0|(tr=nr)))|0))|0,_=fr=(fr=nr=uA&(sA=0-tr|0))+uA|0,fr=B=nr>>>0>fr>>>0?B+1|0:B,aA=cr-(B=ar&fA)|0,B=(B=W-((Pr&(cr=T-((W&lr)+(B>>>0>cr>>>0)|0)|0))+(ar>>>0<(nr=AA&aA)>>>0)|0)|0)+(W=B&Qr)|0,nr=T=(uA=ar-nr|0)&sA,ar=T=T+uA|0,W=B=nr>>>0>T>>>0?B+1|0:B,B=AA,T=q-(((nr=Pr)&(Pr=F-((q&lr)+((T=wr&fA)>>>0>kr>>>0)|0)|0))+((B&=AA=kr-T|0)>>>0>wr>>>0)|0)|0,wr=(q=wr-B|0)^(kr=tr-1|0)&(((1&T)<<31|q>>>1)^q),q=T^(fA=0-!tr|0)&(T>>>1^T),nr=nA+(nA&tr-1)|0,F=(fA&iA)+iA|0,tr=B=(T=kr&oA)+oA|0,lr=B>>>0<T>>>0?F+1|0:F,B=(cr&fA)+cr|0,cr=T=(F=kr&aA)+aA|0,T=T>>>0<F>>>0?B+1|0:B,kr=AA^(AA^((1&Pr)<<31|AA>>>1))&sA,F=Pr^(Pr^Pr>>>1)&Qr,Q=Q+1|0;for(k=0,wr=0,q=0,kr=0,F=0;(0|k)!=(0|x);)Q=(B=wr)+(Pr=or(ar,W,wr=i[(nr=k<<2)+mr>>2],0))|0,B=g+q|0,B=Q>>>0<Pr>>>0?B+1|0:B,q=or(_,fr,Pr=i[nr+Mr>>2],0),B=g+B|0,B=(Q=q+Q|0)>>>0<q>>>0?B+1|0:B,q=Q,Q=B,wr=or(wr,0,cr,T),F=g+F|0,F=(B=wr+kr|0)>>>0<wr>>>0?F+1|0:F,wr=(kr=or(Pr,0,tr,lr))+B|0,B=g+F|0,B=wr>>>0<kr>>>0?B+1|0:B,kr=wr,F=B,k&&(i[(B=nr-4|0)+mr>>2]=2147483647&kr,i[B+Mr>>2]=2147483647&q),k=k+1|0,wr=(2147483647&Q)<<1|q>>>31,q=Q>>31,F=(B=F)>>31,kr=(2147483647&B)<<1|kr>>>31;i[(B=(x<<2)-4|0)+mr>>2]=kr,i[B+Mr>>2]=wr,br(mr,x,Q=F>>>31|0),br(Mr,x,q=q>>>31|0),nr=B=0-(Q=1&(F=(B=Q)|(Q=q)<<1))|0,Pr=0-(F=F>>>1|0)|0,wr=B=0-(0!=(0|F))|0,B=T-(((F=T<<1|(B=k=cr)>>>31)&nr)+(B>>>0<(cr=B<<1&(kr=0-Q|0))>>>0)|0)|0,cr=k-cr|0,k=B,Q=B=tr,B=lr-(((F=lr<<1|B>>>31)&nr)+((T=B<<1&kr)>>>0>B>>>0)|0)|0,F=Q-T|0,Q=B,B=W-(((B=W<<1|(T=ar)>>>31)&wr)+((T=T<<1&Pr)>>>0>(q=ar)>>>0)|0)|0,q=q-T|0,T=B,B=fr<<1|(W=_)>>>31,I(Ir,Wr,Rr,x,Fr,cr,k,F,Q,q,T,lr=_-(W=W<<1&Pr)|0,B=fr-((B&wr)+(W>>>0>_>>>0)|0)|0),I(PA,tA,Kr,x,lA,cr,k,F,Q,q,T,lr,B),Vr=Vr-30|0}for(k=1^i[mr>>2],Q=1;(0|Q)!=(0|x);)k=i[mr+(Q<<2)>>2]|k,Q=Q+1|0;B=i[Rr>>2]&i[Kr>>2]&!k}else B=0;B&&(ir(n,x,12289)||(Yr=!ir(Ir,x,12289)));A:if(Yr){for(Yr=9;;){if(Yr>>>0>=3){for(Q=n,_=i[24452+(B=(Yr=Yr-1|0)<<2)>>2],L(T=Q+((k=c(_,Rr=(wr=1<<(cr=9-Yr|0))>>>1|0))<<3)|0,t,u,Yr,1),kr=(x=(q=i[B+24496>>2])<<cr<<2)+Q|0,tr=i[B+24448>>2],lr=dr(kr+x|0,T,c(wr,tr)<<3),ar=(fr=dr((B=tr<<cr<<2)+(F=lr+B|0)|0,Q,c(_,wr<<2&-8)))+(k<<2)|0,T=0;;){if((0|T)==(0|q)){Vr=(Wr=(Qr=(Pr=(B=wr<<2)+(Ir=B+fr|0)|0)+B|0)+B|0)+(Rr<<2)|0,Kr=q<<3,mr=0,k=cr-1|0;break}for(x=(B=T<<2)+kr|0,nr=B+Q|0,k=0,Qr=Cr(_,mr=i[c(T,12)+18176>>2],Ir=xr(mr),Pr=Tr(mr,Ir)),B=ar,W=fr;(0|k)!=(0|Rr);)i[nr>>2]=Or(W,_,mr,Ir,Pr,Qr),i[x>>2]=Or(B,_,mr,Ir,Pr,Qr),k=k+1|0,x=(Fr=q<<2)+x|0,nr=nr+Fr|0,B=(Fr=_<<2)+B|0,W=W+Fr|0;T=T+1|0}for(;;){n:{e:{if((0|q)!=(0|mr)){if(B=c(mr,12),Fr=Tr(ar=i[B+18176>>2],_=xr(ar)),(0|tr)==(0|mr)&&(m(lr,tr,tr,wr,1,fr),m(F,tr,tr,wr,1,fr)),V(fr,Ir,cr,i[B+18180>>2],ar,_),tr>>>0>mr>>>0){for(x=0,nr=T=(B=mr<<2)+F|0,B=W=B+lr|0;(0|x)!=(0|wr);)i[(Mr=x<<2)+Pr>>2]=i[B>>2],i[Qr+Mr>>2]=i[nr>>2],x=x+1|0,nr=(Mr=tr<<2)+nr|0,B=B+Mr|0;Y(W,tr,Ir,cr,ar,_),Y(T,tr,Ir,cr,ar,_)}else{for(x=0,T=Cr(tr,ar,_,Fr),nr=F,B=lr;(0|x)!=(0|wr);)i[(W=x<<2)+Pr>>2]=Or(B,tr,ar,_,Fr,T),i[W+Qr>>2]=Or(nr,tr,ar,_,Fr,T),x=x+1|0,nr=(W=tr<<2)+nr|0,B=B+W|0;G(Pr,1,fr,cr,ar,_),G(Qr,1,fr,cr,ar,_)}for(x=0,nr=T=(B=mr<<2)+kr|0,B=W=B+Q|0;(0|x)!=(0|Rr);)i[(Mr=x<<2)+Wr>>2]=i[B>>2],i[Mr+Vr>>2]=i[nr>>2],x=x+1|0,nr=(Mr=q<<2)+nr|0,B=B+Mr|0;for(G(Wr,1,fr,k,ar,_),G(Vr,1,fr,k,ar,_),x=0,nr=T,B=W;;){if((0|x)==(0|Rr))break e;AA=i[(Mr=x<<3)+Pr>>2],fA=i[(tA=4|Mr)+Pr>>2],oA=i[Qr+Mr>>2],Mr=vr(i[(nA=x<<2)+Wr>>2],Fr,ar,_),nA=vr(i[Vr+nA>>2],Fr,ar,_),i[B>>2]=vr(i[Qr+tA>>2],Mr,ar,_),i[(tA=q<<2)+B>>2]=vr(oA,Mr,ar,_),i[nr>>2]=vr(fA,nA,ar,_),i[nr+tA>>2]=vr(AA,nA,ar,_),x=x+1|0,nr=nr+Kr|0,B=B+Kr|0}}m(Q,q,q,wr,1,fr),m(kr,q,q,wr,1,fr),B=wr<<3,Pr=Jr(Q,fr),k=Jr(Q,Wr=(Qr=(((T=3&(k=(Rr=(Fr=B+(Ir=B+Pr|0)|0)+(Rr<<3)|0)-Q|0))?4-T|0:0)+k|0)+Q|0)+(wr<<2)|0),J(Pr,(x=(Vr=tr-(T=tr>>>0<10?tr:10)|0)<<2)+lr|0,T,tr,cr),J(Ir,x+F|0,T,tr,cr),E(Pr,cr),E(Ir,cr),$(Fr,Pr,Ir,cr),jr(Pr,cr),jr(Ir,cr),mr=(B=B+Rr|0)>>>0>k>>>0?B:k,x=((T=c(q,31))-(k=i[24544+(B=Yr<<3)>>2])|0)+(B=c(i[B+24548>>2],6))|0,Kr=B+k|0,Mr=wr<<1,nA=Yr>>>0>4,B=q;t:{for(;;){for(J(Rr,(fr=(W=B-(k=B>>>0<10?B:10)|0)<<2)+Q|0,k,q,cr),J(mr,fr+kr|0,k,q,cr),E(Rr,cr),E(mr,cr),N(Rr,Pr,cr),N(mr,Ir,cr),yr(mr,Rr,cr),er(mr,Fr,cr),S(mr,cr),k=(W=c(Vr-W|0,31)+x|0)>>31,k^=k+W,ar=0&(W=(0|W)<0),W=W?1073741824:1071644672,_=0,fr=1072693248;;){if(!k){for(k=0;(0|k)!=(0|wr);){if(nr=0,!Br(-4194304,-1042284545,W=R(i[(W=mr+(k<<3)|0)>>2],i[W+4>>2],_,fr),ar=g))break t;if(!Br(W,ar,-4194304,1105199103))break t;i[Qr+(k<<2)>>2]=rr(W,ar),k=k+1|0}break}1&k&&(_=R(_,fr,ar,W),fr=g),k=k>>>1|0,ar=_r(ar,W),W=g}if(W=x-c(k=(0|x)/31|0,31)|0,nA?(U(Q,B,q,lr,tr,tr,Qr,k,W,cr),U(kr,B,q,F,tr,tr,Qr,k,W,cr)):(p(Q,B,q,lr,tr,tr,Qr,k,W,cr,Wr),p(kr,B,q,F,tr,tr,Qr,k,W,cr,Wr)),(0|T)<=(0|(k=10+(W=x+Kr|0)|0))?k=T:B=B-((W+41|0)<=(0|c(B,31)))|0,!((0|x)>0))break;x=((0|x)>25?x:25)-25|0,T=k}f:if(!(B>>>0>=tr>>>0))for(x=B-1<<2,T=Q,nr=0;;){if((0|nr)==(0|wr))break f;for(W=0-(i[T+x>>2]>>>30|0)>>>1|0,k=B;(0|k)!=(0|tr);)i[(k<<2)+T>>2]=W,k=k+1|0;for(W=0-(i[x+kr>>2]>>>30|0)>>>1|0,k=B;(0|k)!=(0|tr);)i[(k<<2)+kr>>2]=W,k=k+1|0;nr=nr+1|0,kr=(k=q<<2)+kr|0,T=k+T|0}for(B=tr<<2,k=0,nr=1,x=Q;;){if((0|k)==(0|Mr))break t;T=dr(x,Q,B),k=k+1|0,Q=(q<<2)+Q|0,x=B+T|0}}break n}Y(W,q,Ir,cr,ar,_),Y(T,q,Ir,cr,ar,_),mr=mr+1|0;continue}break}if(nr)continue;break A}break}for(Vr=0,W=0,ar=2048+(lr=1024+(fr=n+1024|0)|0)|0;2!=(0|Vr);){for(Q=(B=Vr<<2)+ar|0,k=B+lr|0,x=0,tr=Cr(2,q=i[c(Vr,12)+18176>>2],F=xr(q),_=Tr(q,F)),T=n,B=fr;128!=(0|x);)i[k>>2]=Or(T,2,q,F,_,tr),i[Q>>2]=Or(B,2,q,F,_,tr),Q=Q+8|0,k=k+8|0,B=B+8|0,T=T+8|0,x=x+1|0;Vr=Vr+1|0}for(_=dr(n,lr,2048),cr=2048+(tr=1024+(Qr=2048+(ar=1024+(q=1024+(T=(Pr=dr(_+2048|0,ar,2048))+2048|0)|0)|0)|0)|0)|0,Rr=512+(Ir=1024+(Kr=1024+(Vr=1024+(Yr=ar+1024|0)|0)|0)|0)|0;2!=(0|W);){for(B=c(W,12),F=i[B+18176>>2],V(ar,Qr,9,B=i[B+18180>>2],F,lr=xr(F)),k=0;512!=(0|k);)i[(B=k<<2)+tr>>2]=rA(e[k+t|0],F),i[B+cr>>2]=rA(e[k+u|0],F),k=k+1|0;for(nr=Tr(F,lr),G(tr,1,ar,9,F,lr),G(cr,1,ar,9,F,lr),k=9;k>>>0>8;)hr(tr,k,F,lr,nr),hr(cr,k,F,lr,nr),k=k-1|0;for(wr=dr(Yr,Qr,1024),kr=dr(Vr,tr,1024),mr=dr(Kr,cr,1024),k=0,B=x=(Q=W<<2)+Pr|0,Q=fr=Q+_|0;128!=(0|k);)i[(Fr=k<<2)+Ir>>2]=i[Q>>2],i[Rr+Fr>>2]=i[B>>2],B=B+8|0,Q=Q+8|0,k=k+1|0;for(G(Ir,1,ar,7,F,lr),G(Rr,1,ar,7,F,lr),k=0,B=x,Q=fr;128!=(0|k);)Mr=i[(Fr=k<<3)+kr>>2],AA=i[(nA=4|Fr)+kr>>2],tA=i[mr+Fr>>2],Fr=vr(i[(Wr=k<<2)+Ir>>2],nr,F,lr),Wr=vr(i[Rr+Wr>>2],nr,F,lr),i[Q>>2]=vr(i[mr+nA>>2],Fr,F,lr),i[Q+8>>2]=vr(tA,Fr,F,lr),i[B>>2]=vr(AA,Wr,F,lr),i[B+8>>2]=vr(Mr,Wr,F,lr),B=B+16|0,Q=Q+16|0,k=k+1|0;Y(fr,2,wr,8,F,lr),Y(x,2,wr,8,F,lr);n:if(!W)for(Y(kr,1,wr,8,F,lr),Y(mr,1,wr,8,F,lr),x=0,Q=q,k=T;;){if(256==(0|x))break n;B=x<<2,i[k>>2]=i[B+kr>>2],i[Q>>2]=i[B+mr>>2],Q=Q+4|0,k=k+4|0,x=x+1|0}W=W+1|0}for(m(_,2,2,512,1,ar),m(T,1,1,512,1,ar),J(k=Jr(_,ar),_,2,2,8),J(k+2048|0,Pr,2,2,8),B=dr(_,T,2048),J(k=(ar=dr(Jr(B,1024+(F=B+1024|0)|0),k,4096))+4096|0,B,1,1,8),J(k+2048|0,F,1,1,8),E(k=dr(B,ar,8192),8),E(fr=k+2048|0,8),E(T=fr+2048|0,8),E(W=T+2048|0,8),B=W+2048|0,Q=0;128!=(0|Q);)lr=i[(q=(x=Q+128<<3)+fr|0)>>2],_=i[q+4>>2],tr=i[(cr=(q=Q<<3)+W|0)>>2],cr=i[cr+4>>2],nr=i[(wr=q+fr|0)>>2],wr=i[wr+4>>2],Yr=i[(kr=x+W|0)>>2],Vr=i[kr+4>>2],kr=i[(mr=k+x|0)>>2],mr=i[mr+4>>2],Ir=i[(Rr=T+q|0)>>2],Rr=i[Rr+4>>2],Pr=i[(Qr=k+q|0)>>2],Qr=i[Qr+4>>2],Fr=qr(i[(Fr=T+x|0)>>2],i[Fr+4>>2]),Wr=g,Kr=Gr(R(Pr,Qr,Ir,Rr),g,R(kr,mr,Fr,Wr),g),Mr=g,Ir=j(R(Pr,Qr,Fr,Wr),g,R(kr,mr,Ir,Rr),g),Rr=g,kr=qr(Yr,Vr),mr=g,Pr=Gr(R(nr,wr,tr,cr),g,R(lr,_,kr,mr),g),Qr=g,lr=j(R(nr,wr,kr,mr),g,R(lr,_,tr,cr),g),_=g,i[(q=B+q|0)>>2]=j(Kr,Mr,Pr,Qr),i[q+4>>2]=g,i[(x=B+x|0)>>2]=j(Ir,Rr,lr,_),i[x+4>>2]=g,Q=Q+1|0;$(Q=B+2048|0,T,W,8),er(B,Q,8),S(B,8),x=0;n:{for(;256!=(0|x);){if(Q=0,!Br(lr=i[(q=B+(x<<3)|0)>>2],_=i[q+4>>2],0,1138753536))break n;if(!Br(0,-1008730112,lr,_))break n;i[q>>2]=O(rr(lr,_),g),i[q+4>>2]=g,x=x+1|0}for(E(B,8),N(T,B,8),N(W,B,8),gr(k,T,8),gr(fr,W,8),S(k,8),S(fr,8),B=dr(ar,k,4096),x=0,Q=1;;){if(256==(0|x))break n;W=B+(x<<3)|0,i[(T=x<<2)+k>>2]=rr(i[W>>2],i[W+4>>2]),nr=T+F|0,T=B+(x+256<<3)|0,i[nr>>2]=rr(i[T>>2],i[T+4>>2]),x=x+1|0}}if(Q){for(B=0,V(x=2048+(T=2048+(Q=1024+(W=n+1024|0)|0)|0)|0,fr=x+2048|0,9,383167813,2147473409,k=xr(2147473409));256!=(0|B);)i[(F=(q=B<<2)+n|0)>>2]=rA(Zr(F),2147473409),i[(q=W+q|0)>>2]=rA(Zr(q),2147473409),B=B+1|0;for(G(n,1,x,8,2147473409,k),G(W,1,x,8,2147473409,k),B=0;512!=(0|B);)i[(q=B<<2)+Q>>2]=rA(e[B+t|0],2147473409),i[T+q>>2]=rA(e[B+u|0],2147473409),B=B+1|0;for(lr=Tr(2147473409,k),G(Q,1,x,9,2147473409,k),G(T,1,x,9,2147473409,k),B=0;B>>>0<512;)ar=i[(F=(x=B<<2)+Q|0)>>2],cr=i[(tr=(_=4|x)+Q|0)>>2],wr=i[(nr=T+x|0)>>2],x=vr(i[(q=B<<1)+n>>2],lr,2147473409,k),q=vr(i[W+q>>2],lr,2147473409,k),kr=F,F=T+_|0,i[kr>>2]=vr(i[F>>2],x,2147473409,k),i[tr>>2]=vr(wr,x,2147473409,k),i[nr>>2]=vr(cr,q,2147473409,k),i[F>>2]=vr(ar,q,2147473409,k),B=B+2|0;for(Y(Q,1,fr,9,2147473409,k),Y(T,1,fr,9,2147473409,k),V(T=2048+(ar=(q=dr(n,Q,4096))+2048|0)|0,x=T+2048|0,9,383167813,2147473409,k),G(q,1,T,9,2147473409,k),G(ar,1,T,9,2147473409,k),W=2048+(Q=2048+(fr=x+2048|0)|0)|0,B=rA(e[0|t],2147473409),i[W>>2]=B,i[Q>>2]=B,B=1;512!=(0|B);)F=B+t|0,i[Q+(B<<2)>>2]=rA(e[0|F],2147473409),i[W+(512-B<<2)>>2]=rA(0-e[0|F]|0,2147473409),B=B+1|0;for(G(Q,1,T,9,2147473409,k),G(W,1,T,9,2147473409,k),B=0;512!=(0|B);)_=vr(i[(F=B<<2)+W>>2],lr,2147473409,k),i[x+F>>2]=vr(_,i[F+q>>2],2147473409,k),i[F+fr>>2]=vr(_,i[Q+F>>2],2147473409,k),B=B+1|0;for(B=rA(e[0|u],2147473409),i[W>>2]=B,i[Q>>2]=B,B=1;512!=(0|B);)F=B+u|0,i[Q+(B<<2)>>2]=rA(e[0|F],2147473409),i[W+(512-B<<2)>>2]=rA(0-e[0|F]|0,2147473409),B=B+1|0;for(G(Q,1,T,9,2147473409,k),G(W,1,T,9,2147473409,k),B=0;512!=(0|B);)tr=i[(_=(F=B<<2)+x|0)>>2],nr=_,_=vr(i[F+W>>2],lr,2147473409,k),i[nr>>2]=Xr(tr,vr(_,i[F+ar>>2],2147473409,k),2147473409),cr=i[(tr=F+fr|0)>>2],i[tr>>2]=Xr(cr,vr(_,i[Q+F>>2],2147473409,k),2147473409),B=B+1|0;for(V(T,Q,9,383167813,2147473409,k),Y(x,1,Q,9,2147473409,k),Y(fr,1,Q,9,2147473409,k),B=0;512!=(0|B);)_=(F=B<<2)+x|0,i[T+F>>2]=Lr(i[_>>2]),i[_>>2]=Lr(i[F+fr>>2]),B=B+1|0;for(B=0,F=Jr(q,fr);512!=(0|B);)_=F+(B<<3)|0,tr=i[x+(B<<2)>>2],i[_>>2]=O(tr,tr>>31),i[_+4>>2]=g,B=B+1|0;for(E(F,9),F=(cr=dr(Jr(q,x),F,2048))+2048|0,B=0;512!=(0|B);)_=F+(B<<3)|0,tr=i[T+(B<<2)>>2],i[_>>2]=O(tr,tr>>31),i[_+4>>2]=g,B=B+1|0;for(E(F,9),B=0;256!=(0|B);)tr=X(i[(tr=(_=B<<3)+cr|0)>>2],i[tr+4>>2]),wr=nr=i[(_=F+_|0)>>2],nr=g,i[_>>2]=R(wr,i[_+4>>2],tr,nr),i[_+4>>2]=g,tr=R(i[(_=F+(B+256<<3)|0)>>2],i[_+4>>2],tr,nr),i[_>>2]=tr,i[_+4>>2]=g,B=B+1|0;for(S(F,9),B=0;512!=(0|B);)_=F+(B<<3)|0,i[T+(B<<2)>>2]=rA(rr(i[_>>2],i[_+4>>2]),2147473409),B=B+1|0;for(V(x,fr,9,383167813,2147473409,k),B=0;512!=(0|B);)i[(F=B<<2)+Q>>2]=rA(e[B+t|0],2147473409),i[F+W>>2]=rA(e[B+u|0],2147473409),B=B+1|0;for(G(T,1,x,9,2147473409,k),G(Q,1,x,9,2147473409,k),G(W,1,x,9,2147473409,k),B=0;512!=(0|B);)_=i[(F=(x=B<<2)+q|0)>>2],nr=F,F=vr(i[T+x>>2],lr,2147473409,k),i[nr>>2]=Nr(_,vr(F,i[Q+x>>2],2147473409,k),2147473409),tr=i[(_=x+ar|0)>>2],i[_>>2]=Nr(tr,vr(F,i[x+W>>2],2147473409,k),2147473409),B=B+1|0;for(Y(q,1,fr,9,2147473409,k),Y(ar,1,fr,9,2147473409,k),B=0;512!=(0|B);)i[(Q=(k=B<<2)+q|0)>>2]=Lr(i[Q>>2]),i[(k=k+ar|0)>>2]=Lr(i[k>>2]),B=B+1|0;if(ur(b,n,h)&&ur(fr=n+4096|0,Q=n+2048|0,h)){for(V(T=2048+(W=2048+(x=Q+2048|0)|0)|0,n,9,383167813,2147473409,k=xr(2147473409)),Yr=0,B=0;;){if(512==(0|B)){for(;512!=(0|Yr);)i[(B=Yr<<2)+Q>>2]=rA(e[Yr+t|0],2147473409),i[B+x>>2]=rA(e[Yr+u|0],2147473409),i[B+W>>2]=rA(e[Yr+b|0],2147473409),Yr=Yr+1|0;for(cA=1,G(Q,1,T,9,2147473409,k),G(x,1,T,9,2147473409,k),G(W,1,T,9,2147473409,k),G(n,1,T,9,2147473409,k),B=0,fr=vr(12289,1,2147473409,k);;){if(512==(0|B))break A;if(T=B<<2,B=B+1|0,(0|Nr(vr(i[T+Q>>2],i[T+n>>2],2147473409,k),vr(i[T+x>>2],i[T+W>>2],2147473409,k),2147473409))!=(0|fr))break}break}i[(B<<2)+n>>2]=rA(e[B+fr|0],2147473409),B=B+1|0}cA=0}}}if(cA)break}}}}if(eA(P),e[0|A]=89,T=-1,(B=Z(A+1|0,1280,t,k=a[1307]))&&(B=Z((Q=B+1|0)+A|0,1280-B|0,s+1600|0,k))&&!(!(B=Z((k=A)+(A=B+Q|0)|0,1281-A|0,s+1088|0,a[1318]))|1281!=(A+B|0))){e[0|r]=9,A=r+1|0,k=s- -64|0,r=0,T=0;r:{A:{for(;;){if(512!=(0|r)){if(B=r<<1,r=r+1|0,o[B+k>>1]<=12288)continue;break A}break}if(A){for(B=0,r=0;512!=(0|B);){for(T=o[k+(B<<1)>>1]|T<<14,r=r+14|0;(0|r)>=8;)r=r-8|0,e[0|A]=T>>>r,A=A+1|0;B=B+1|0}(0|r)<=0||(e[0|A]=T<<8-r)}r=896;break r}r=0}T=896!=(0|r)?-1:0}return w=s+16960|0,0|T},o:function(r,A,n,t,u){r|=0,A|=0,n|=0,t|=0,u|=0;var s,l,P,v,y=0,D=0,b=0,d=0,h=0,k=0,j=0,p=0,m=0,Q=0,I=0,x=0,U=0,R=0;if(w=l=(w=P=w-16|0)-16|0,i[l+12>>2]=647,p=r+1|0,v=r+41|0,w=s=w-4e4|0,b=-1,89==a[0|u]&&(d=_(s+2624|0,h=a[1307],u+1|0,1280))&&(d=_(s+2112|0,D=h,(h=d+1|0)+u|0,1280-d|0))&&(D=u,u=d+h|0,!(!(d=_(s+1600|0,a[1318],D+u|0,1281-u|0))|1281!=(u+d|0)))){for(h=s+1088|0,D=s+2624|0,k=s+2112|0,Q=s+1600|0,d=1024+(u=s+3136|0)|0;512!=(0|y);)f[(m=y<<1)+u>>1]=$r(e[y+k|0]),f[d+m>>1]=$r(e[y+Q|0]),y=y+1|0;for(K(u),K(d),Fr(u),Ir(u,d),y=0;512!=(0|y);)f[d+(y<<1)>>1]=$r(e[y+D|0]),y=y+1|0;K(d),y=0;r:{A:{for(;512!=(0|y);){if(!(k=o[(D=y<<1)+d>>1]))break A;f[(D=u+D|0)>>1]=Dr(o[D>>1],k),y=y+1|0}for(M(u),y=0,d=1;;){if(512==(0|y))break r;if(128+(D=(D=o[u+(y<<1)>>1])+(D-6144>>31|-12290)|0)>>>0>254)break A;e[y+h|0]=D+1,y=y+1|0}}d=0}if(d){for(pr(p,40),sr(u=s+8|0),z(u,p,40),z(u,n,t),Ar(u),T(u,s- -64|0,s+3136|0),eA(u),pr(n=s+16|0,48),sr(u),z(u,n,48),Ar(u);;){for(p=s- -64|0,U=s+8|0,Q=s+2624|0,m=s+2112|0,I=s+1600|0,x=s+1088|0,t=s+3136|0,w=h=w-800|0;;){for(i[h+792>>2]=-1301511182,i[h+796>>2]=1072998908,w=u=w+-64|0,F(u,56,U),y=520+(k=h+8|0)|0,n=0;14!=(0|n);)i[(b=n<<2)+y>>2]=i[u+b>>2],n=n+1|0;for(C(k),w=u- -64|0,Sr(y=t+4096|0,Q),Sr(t,m),Sr(d=4096+(b=y+4096|0)|0,I),Sr(b,x),E(y,9),E(t,9),E(d,9),E(b,9),Qr(y),Qr(d),ar(n=Ur(d+4096|0,y,4096)),q(u=Ur(n+4096|0,t,4096),b),ar(t),yr(t,n,9),D=Ur(n,y,4096),q(y,d),yr(y,u,9),ar(b),ar(u=Ur(u,d,4096)),yr(b,u,9),n=0;512!=(0|n);)i[(j=u+(n<<3)|0)>>2]=O(o[p+(n<<1)>>1],0),i[j+4>>2]=g,n=n+1|0;for(E(u,9),N(j=Ur(u+4096|0,u,4096),D,9),zr(j,qr(-1869109374,1058362595),g),N(u,d,9),zr(u,-1869109374,1058362595),B(k,n=Ur(d,u,8192),D,t,y,b,9,u),D=dr(D,n,8192),Sr(y,Q),Sr(t,m),Sr(n,I),Sr(b,x),E(y,9),E(t,9),E(n,9),E(b,9),Qr(y),Qr(n),d=Ur(j,D,4096),k=Ur(d+4096|0,u,4096),N(d,t,9),N(k,b,9),yr(d,k,9),N(b=Ur(k,D,4096),y,9),k=Ur(D,d,4096),N(u,n,9),yr(u,b,9),S(k,9),S(u,9),b=0,y=0,n=0;512!=(0|n);)D=k+(n<<3)|0,D=o[(j=n<<1)+p>>1]-rr(i[D>>2],i[D+4>>2])|0,f[d+j>>1]=D,y|=b=c(D,D)+b|0,n=n+1|0;for(y>>=31,n=0;512!=(0|n);)D=u+(n<<3)|0,f[t+(n<<1)>>1]=0-rr(i[D>>2],i[D+4>>2]),n=n+1|0;for(n=0,y=(u=y|b)>>31;!(n>>>9|0);)D=u,u=f[t+(n<<1)>>1],y|=u=D+c(u,u)|0,n=n+1|0;if((y>>31|u)>>>0<43533782?(Ur(p,t,1024),Ur(t,d,1024),n=1):n=0,n)break}w=h+800|0,d=i[l+12>>2],b=0,n=0,y=0;r:{A:{for(;;){if(512!=(0|b)){if(t=b<<1,b=b+1|0,(o[t+p>>1]+2047&65535)>>>0<=4094)continue;break A}t=0,b=0;break}for(;;){n:{if(512!=(0|y))for(n=(127&(D=(h=(u=f[p+(y<<1)>>1])>>31)^u+h)|u>>>8&128|n<<8)<<(h=1+((65408&D)>>>7|0)|0)|1,b=8+(b+h|0)|0;;){if(b>>>0<8)break n;if(b=b-8|0,v){if(t>>>0>=d>>>0)break A;e[t+v|0]=n>>>b}t=t+1|0}if(!b)break r;e:{if(v){if(u=0,t>>>0>=d>>>0)break e;e[t+v|0]=n<<8-b}u=t+1|0}t=u;break r}y=y+1|0}}t=0}if(t)break}eA(s+8|0),i[l+12>>2]=t,b=0}}return w=s+4e4|0,(0|b)<0?R=-1:(e[0|r]=57,i[P+12>>2]=i[l+12>>2]+41),w=l+16|0,i[A>>2]=i[P+12>>2],w=P+16|0,0|R},p:function(r,A,n,e,t){A|=0,n|=0,e|=0,t|=0;var i=0,u=0,s=0,l=0,P=0,v=0,y=0,g=0,D=0,b=0;if(g=-1,!(57!=a[0|(r|=0)]|A>>>0<41)){if(b=r+1|0,D=r+41|0,v=A-41|0,w=A=w-4112|0,9==a[0|t]){P=A+2064|0,i=t+1|0,t=0;r:{for(;;){y=u>>>9|0;A:{for(;;){if(r=t,y)break A;if(t=r+8|0,s=a[0|i]|s<<8,i=i+1|0,!((0|r)<6))break}if((r=s>>>(t=r-6|0)&16383)>>>0>12288)break r;f[P+(u<<1)>>1]=r,u=u+1|0;continue}break}l=(-1<<r^-1)&s?0:896}if(896==(0|l)&&(K(r=A+2064|0),Fr(r),v)){t=A+16|0,u=0,s=0,i=0,r=0;r:{for(;;){if(r>>>9|0)break r;A:if(!(u>>>0>=v>>>0)){for(l=127&(P=(s=a[u+D|0]|s<<8)>>>i|0),P&=128,u=u+1|0;;){if(!i){if(u>>>0>=v>>>0)break A;s=a[u+D|0]|s<<8,i=8,u=u+1|0}if(s>>>(i=i-1|0)&1)break;if(y=l>>>0>1919,l=l+128|0,y)break A}f[t+(r<<1)>>1]=P?0-l|0:l,r=r+1|0;continue}break}u=0}if((0|u)==(0|v)){for(sr(r=A+8|0),z(r,b,40),z(r,n,e),Ar(r),T(r,t=A+1040|0,e=A+3088|0),eA(r),u=A+16|0,i=A+2064|0,r=0;512!=(0|r);)n=f[(s=r<<1)+u>>1],f[e+s>>1]=(n>>>15&12289)+n,r=r+1|0;for(K(e),Ir(e,i),M(e),n=0;!(n>>>9|0);)f[(i=(r=n<<1)+e|0)>>1]=Wr(o[i>>1],o[r+t>>1]),n=n+1|0;for(r=0;512!=(0|r);)n=o[(t=e+(r<<1)|0)>>1],f[t>>1]=(n>>>0>6144?-12289:0)+n,r=r+1|0;for(n=0,r=0,t=0;!(t>>>9|0);)s=n,i=f[(n=t<<1)+e>>1],i=s+c(i,i)|0,n=f[n+u>>1],r=(n=i+c(n,n)|0)|r|i,t=t+1|0;g=(r>>31|n)>>>0<43533782?0:-1}}}w=A+4112|0}return 0|g},q:function(){return 0|w},r:function(r){w=r|=0},s:function(r){return w=r=w-(r|=0)&-16,0|r},t:function(r){u[(y=r|=0)>>2]>u[y+4>>2]&&s()},u:Kr,v:function(r){u[(y=r|=0)>>2]>u[y+4>>2]&&s()},w:Kr}}(r)}(nr)},instantiate:function(r,A){return{then:function(A){var n=new h.Module(r);A({instance:new h.Instance(n)})}}},RuntimeError:Error};D=[],\"object\"!=typeof h&&Y(\"no native wasm support detected\");var C,B=!1;function k(r,A){r||Y(A)}var j,p,m,S,T,z=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function E(r,A){return r?function(r,A,n){for(var e=A+n,t=A;r[t]&&!(t>=e);)++t;if(t-A>16&&r.subarray&&z)return z.decode(r.subarray(A,t));for(var f=\"\";A<t;){var i=r[A++];if(128&i){var a=63&r[A++];if(192!=(224&i)){var o=63&r[A++];if((i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&r[A++])<65536)f+=String.fromCharCode(i);else{var u=i-65536;f+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else f+=String.fromCharCode((31&i)<<6|a)}else f+=String.fromCharCode(i)}return f}(m,r,A):\"\"}function Q(r,A){p.set(r,A)}var I,x=16777216;(d=new h.Memory({initial:x/65536,maximum:x/65536}))&&(j=d.buffer),x=j.byteLength,j=I=j,e.HEAP8=p=new Int8Array(I),e.HEAP16=new Int16Array(I),e.HEAP32=S=new Int32Array(I),e.HEAPU8=m=new Uint8Array(I),e.HEAPU16=new Uint16Array(I),e.HEAPU32=new Uint32Array(I),e.HEAPF32=new Float32Array(I),e.HEAPF64=T=new Float64Array(I);var U=[],F=[],R=[],O=0,H=null,M=null;function Y(r){b(r=\"Aborted(\"+r+\")\"),B=!0,C=1,r+=\". Build with -s ASSERTIONS=1 for more info.\";var A=new h.RuntimeError(r);throw n(A),A}e.preloadedImages={},e.preloadedAudios={};var J,L,V=\"data:application/octet-stream;base64,\";function G(r){return r.startsWith(V)}function X(r){return r.startsWith(\"file://\")}function Z(r){try{if(r==J&&D)return new Uint8Array(D);var A=rr(r);if(A)return A;if(a)return a(r);throw\"both async and sync fetching of the wasm failed\"}catch(r){Y(r)}}G(J=\"<<< WASM_BINARY_FILE >>>\")||(L=J,J=e.locateFile?e.locateFile(L,g):g+L);var W={31028:function(){return e.getRandomValue()},31064:function(){if(void 0===e.getRandomValue)try{var r=\"object\"==typeof window?window:self,A=void 0!==r.crypto?r.crypto:r.msCrypto,n=function(){var r=new Uint32Array(1);return A.getRandomValues(r),r[0]>>>0};n(),e.getRandomValue=n}catch(r){try{var t=require(\"crypto\"),f=function(){var r=t.randomBytes(4);return(r[0]<<24|r[1]<<16|r[2]<<8|r[3])>>>0};f(),e.getRandomValue=f}catch(r){throw\"No secure random number generator found\"}}}};function N(r){for(;r.length>0;){var A=r.shift();if(\"function\"!=typeof A){var n=A.func;\"number\"==typeof n?void 0===A.arg?dynCall_v.call(null,n):(t=A.arg,dynCall_vi.apply(null,[n,t])):n(void 0===A.arg?null:A.arg)}else A(e)}var t}var q=[];function K(r){try{return r()}catch(r){Y(r)}}var _={State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(r){var A=_.callStackNameToId[r];return void 0===A&&(A=_.callStackId++,_.callStackNameToId[r]=A,_.callStackIdToName[A]=r),A},instrumentWasmExports:function(r){var A={};for(var n in r)!function(n){var e=r[n];A[n]=\"function\"==typeof e?function(){_.exportCallStack.push(n);try{return e.apply(null,arguments)}finally{if(!B){var r=_.exportCallStack.pop();k(r===n),_.maybeStopUnwind()}}}:e}(n);return A},maybeStopUnwind:function(){_.currData&&_.state===_.State.Unwinding&&0===_.exportCallStack.length&&(_.state=_.State.Normal,K(e._asyncify_stop_unwind),\"undefined\"!=typeof Fibers&&Fibers.trampoline())},whenDone:function(){return new Promise(((r,A)=>{_.asyncPromiseHandlers={resolve:r,reject:A}}))},allocateData:function(){var r=er(12+_.StackSize);return _.setDataHeader(r,r+12,_.StackSize),_.setDataRewindFunc(r),r},setDataHeader:function(r,A,n){S[r>>2]=A,S[r+4>>2]=A+n},setDataRewindFunc:function(r){var A=_.exportCallStack[0],n=_.getCallStackId(A);S[r+8>>2]=n},getDataRewindFunc:function(r){var A=S[r+8>>2],n=_.callStackIdToName[A];return e.asm[n]},doRewind:function(r){return _.getDataRewindFunc(r)()},handleSleep:function(r){if(!B){if(_.state===_.State.Normal){var A=!1,n=!1;r((r=>{if(!B&&(_.handleSleepReturnValue=r||0,A=!0,n)){_.state=_.State.Rewinding,K((()=>e._asyncify_start_rewind(_.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.resume();var t,f=!1;try{t=_.doRewind(_.currData)}catch(r){t=r,f=!0}var i=!1;if(!_.currData){var a=_.asyncPromiseHandlers;a&&(_.asyncPromiseHandlers=null,(f?a.reject:a.resolve)(t),i=!0)}if(f&&!i)throw t}})),n=!0,A||(_.state=_.State.Unwinding,_.currData=_.allocateData(),K((()=>e._asyncify_start_unwind(_.currData))),\"undefined\"!=typeof Browser&&Browser.mainLoop.func&&Browser.mainLoop.pause())}else _.state===_.State.Rewinding?(_.state=_.State.Normal,K(e._asyncify_stop_rewind),tr(_.currData),_.currData=null,_.sleepCallbacks.forEach((r=>function(r,A){if(!B)if(A)r();else try{r()}catch(r){!function(r){if(r instanceof or||\"unwind\"==r)return C;P(1,r)}(r)}}(r)))):Y(\"invalid state: \"+_.state);return _.handleSleepReturnValue}},handleAsync:function(r){return _.handleSleep((A=>{r().then(A)}))}},$=\"function\"==typeof atob?atob:function(r){var A,n,e,t,f,i,a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"\",u=0;r=r.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{A=a.indexOf(r.charAt(u++))<<2|(t=a.indexOf(r.charAt(u++)))>>4,n=(15&t)<<4|(f=a.indexOf(r.charAt(u++)))>>2,e=(3&f)<<6|(i=a.indexOf(r.charAt(u++))),o+=String.fromCharCode(A),64!==f&&(o+=String.fromCharCode(n)),64!==i&&(o+=String.fromCharCode(e))}while(u<r.length);return o};function rr(r){if(G(r))return function(r){if(\"boolean\"==typeof y&&y){var A=Buffer.from(r,\"base64\");return new Uint8Array(A.buffer,A.byteOffset,A.byteLength)}try{for(var n=$(r),e=new Uint8Array(n.length),t=0;t<n.length;++t)e[t]=n.charCodeAt(t);return e}catch(r){throw new Error(\"Converting base64 string to bytes failed.\")}}(r.slice(V.length))}var Ar,nr={d:function(r,A,n,e){Y(\"Assertion failed: \"+E(r)+\", at: \"+[A?E(A):\"unknown filename\",n,e?E(e):\"unknown function\"])},__asyncjs__aes_ctr_subtle_crypto:function(r,A,n,t,f,i,a){return _.handleAsync((async()=>{const o=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,n,t<<4)),u=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,i,a)),c=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,f,16)),s=await e.subtleCrypto.importKey(\"raw\",u.buffer,\"AES-CTR\",!1,[\"encrypt\"]),l=await e.subtleCrypto.encrypt({name:\"AES-CTR\",counter:c.buffer,length:32},s,o.buffer);Q(new Uint8Array(l).slice(0,A),r)}))},__asyncjs__sha256_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-256\",t);Q(new Uint8Array(f),r)}))},__asyncjs__sha384_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-384\",t);Q(new Uint8Array(f),r)}))},__asyncjs__sha512_subtle_crypto:function(r,A,n){return _.handleAsync((async()=>{const t=new Uint8Array(new Uint8Array(e.HEAPU8.buffer,A,n)).buffer,f=await e.subtleCrypto.digest(\"SHA-512\",t);Q(new Uint8Array(f),r)}))},b:function(r,A,n){var e=function(r,A){var n;for(q.length=0,A>>=2;n=m[r++];){var e=n<105;e&&1&A&&A++,q.push(e?T[A++>>1]:S[A]),++A}return q}(A,n);return W[r].apply(null,e)},c:function(r){m.length,Y(\"OOM\")},e:function(r){!function(r,A){var n;C=r,C=n=r,P(n,new or(n))}(r)},a:d},er=(function(){var r={a:nr};function A(r,A){var n,t=r.exports;t=_.instrumentWasmExports(t),e.asm=t,e.asm.i,n=e.asm.f,F.unshift(n),function(r){if(0==--O&&(null!==H&&(clearInterval(H),H=null),M)){var A=M;M=null,A()}}()}function t(r){A(r.instance)}function f(A){return function(){if(!D&&(v||w)){if(\"function\"==typeof fetch&&!X(J))return fetch(J,{credentials:\"same-origin\"}).then((function(r){if(!r.ok)throw\"failed to load wasm binary file at '\"+J+\"'\";return r.arrayBuffer()})).catch((function(){return Z(J)}));if(i)return new Promise((function(r,A){i(J,(function(A){r(new Uint8Array(A))}),A)}))}return Promise.resolve().then((function(){return Z(J)}))}().then((function(A){return h.instantiate(A,r)})).then((function(r){return r})).then(A,(function(r){b(\"failed to asynchronously prepare wasm: \"+r),Y(r)}))}if(O++,e.instantiateWasm)try{var a=e.instantiateWasm(r,A);return _.instrumentWasmExports(a)}catch(r){return b(\"Module.instantiateWasm callback failed with error: \"+r),!1}(D||\"function\"!=typeof h.instantiateStreaming||G(J)||X(J)||\"function\"!=typeof fetch?f(t):fetch(J,{credentials:\"same-origin\"}).then((function(A){return h.instantiateStreaming(A,r).then(t,(function(r){return b(\"wasm streaming compile failed: \"+r),b(\"falling back to ArrayBuffer instantiation\"),f(t)}))}))).catch(n)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.f).apply(null,arguments)},e._malloc=function(){return(er=e._malloc=e.asm.g).apply(null,arguments)}),tr=e._free=function(){return(tr=e._free=e.asm.h).apply(null,arguments)},fr=(e._sign_init=function(){return(e._sign_init=e.asm.j).apply(null,arguments)},e._sign_public_key_bytes=function(){return(e._sign_public_key_bytes=e.asm.k).apply(null,arguments)},e._sign_private_key_bytes=function(){return(e._sign_private_key_bytes=e.asm.l).apply(null,arguments)},e._sign_signature_bytes=function(){return(e._sign_signature_bytes=e.asm.m).apply(null,arguments)},e._sign_keypair=function(){return(e._sign_keypair=e.asm.n).apply(null,arguments)},e._sign_signature=function(){return(e._sign_signature=e.asm.o).apply(null,arguments)},e._sign_verify=function(){return(e._sign_verify=e.asm.p).apply(null,arguments)},e.stackSave=function(){return(fr=e.stackSave=e.asm.q).apply(null,arguments)}),ir=e.stackRestore=function(){return(ir=e.stackRestore=e.asm.r).apply(null,arguments)},ar=e.stackAlloc=function(){return(ar=e.stackAlloc=e.asm.s).apply(null,arguments)};function or(r){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+r+\")\",this.status=r}function ur(r){r=r||l,O>0||(N(U),O>0||Ar||(Ar=!0,e.calledRun=!0,B||(N(F),A(e),N(R))))}return e._asyncify_start_unwind=function(){return(e._asyncify_start_unwind=e.asm.t).apply(null,arguments)},e._asyncify_stop_unwind=function(){return(e._asyncify_stop_unwind=e.asm.u).apply(null,arguments)},e._asyncify_start_rewind=function(){return(e._asyncify_start_rewind=e.asm.v).apply(null,arguments)},e._asyncify_stop_rewind=function(){return(e._asyncify_stop_rewind=e.asm.w).apply(null,arguments)},e.ccall=function(r,A,n,t,f){var i={string:function(r){var A=0;if(null!=r&&0!==r){var n=1+(r.length<<2);!function(r,A,n){!function(r,A,n,e){if(!(e>0))return 0;for(var t=n+e-1,f=0;f<r.length;++f){var i=r.charCodeAt(f);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&r.charCodeAt(++f)),i<=127){if(n>=t)break;A[n++]=i}else if(i<=2047){if(n+1>=t)break;A[n++]=192|i>>6,A[n++]=128|63&i}else if(i<=65535){if(n+2>=t)break;A[n++]=224|i>>12,A[n++]=128|i>>6&63,A[n++]=128|63&i}else{if(n+3>=t)break;A[n++]=240|i>>18,A[n++]=128|i>>12&63,A[n++]=128|i>>6&63,A[n++]=128|63&i}}A[n]=0}(r,m,A,n)}(r,A=ar(n),n)}return A},array:function(r){var A=ar(r.length);return Q(r,A),A}},a=function(r){return e[\"_\"+r]}(r),o=[],u=0;if(t)for(var c=0;c<t.length;c++){var s=i[n[c]];s?(0===u&&(u=fr()),o[c]=s(t[c])):o[c]=t[c]}var l=a.apply(null,o);function P(r){return 0!==u&&ir(u),function(r){return\"string\"===A?E(r):\"boolean\"===A?Boolean(r):r}(r)}var v=f&&f.async;return _.currData?_.whenDone().then(P):(l=P(l),v?Promise.resolve(l):l)},e.writeArrayToMemory=Q,M=function r(){Ar||ur(),Ar||(M=r)},e.run=ur,ur(),r.ready},i=new class{current;constructor(){this.current=Promise.resolve()}lock(){let r;const A=new Promise((A=>{r=()=>A()})),n=this.current.then((()=>r));return this.current=A,n}},a=async function(r=!1,n){let e,t,a,o={};if(n&&(o.locateFile=()=>n),r)o=await f(o);else try{o=await A(o)}catch(r){console.log(\"Failed to initialize SIGN WASM, using fallback instead\"),o=await f(o)}function u(r,A){if(0===r)return A;throw new Error(`SIGN error: ${r}`)}function c(r,A){return new Uint8Array(new Uint8Array(o.HEAPU8.buffer,r,A))}function s(r){try{o._free(r)}catch(r){setTimeout((()=>{throw r}),0)}}o.subtleCrypto||(o.subtleCrypto=self.crypto.subtle);const l=o.ready.then((()=>{o._sign_init(),e=o._sign_public_key_bytes(),t=o._sign_private_key_bytes(),a=o._sign_signature_bytes()}));return{publicKeyBytes:l.then((()=>e)),privateKeyBytes:l.then((()=>t)),signatureBytes:l.then((()=>a)),keypair:async()=>{const r=await i.lock();return l.then((async()=>{const A=o._malloc(e),n=o._malloc(t);try{return u(await o.ccall(\"sign_keypair\",\"number\",[\"number\",\"number\"],[A,n],{async:!0}),{publicKey:c(A,e),privateKey:c(n,t)})}finally{r(),s(A),s(n)}}))},sign:async(r,A)=>{const n=await i.lock();return l.then((async()=>{const e=o._malloc(a),f=o._malloc(8),i=o._malloc(r.length),l=o._malloc(t);o.writeArrayToMemory(r,i),o.writeArrayToMemory(A,l);try{return u(await o.ccall(\"sign_signature\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"],[e,f,i,r.byteLength,l],{async:!0}),{signature:c(e,new Uint32Array(o.HEAPU32.buffer,f,1)[0])})}finally{n(),s(e),s(f),s(i),s(l)}}))},verify:async(r,A,n)=>{const t=await i.lock();return l.then((async()=>{const f=o._malloc(r.length),i=o._malloc(A.length),a=o._malloc(e);o.writeArrayToMemory(r,f),o.writeArrayToMemory(A,i),o.writeArrayToMemory(n,a);try{return 0===await o.ccall(\"sign_verify\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"],[f,r.byteLength,i,A.byteLength,a],{async:!0})}finally{t(),s(f),s(i),s(a)}}))}}}})();var t=e.Z;\n\n//# sourceURL=webpack:///./PQC_WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js?");

/***/ }),

/***/ "./node_modules/@kurkle/color/dist/color.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@kurkle/color/dist/color.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   b2n: () => (/* binding */ b2n),\n/* harmony export */   b2p: () => (/* binding */ b2p),\n/* harmony export */   \"default\": () => (/* binding */ index_esm),\n/* harmony export */   hexParse: () => (/* binding */ hexParse),\n/* harmony export */   hexString: () => (/* binding */ hexString),\n/* harmony export */   hsl2rgb: () => (/* binding */ hsl2rgb),\n/* harmony export */   hslString: () => (/* binding */ hslString),\n/* harmony export */   hsv2rgb: () => (/* binding */ hsv2rgb),\n/* harmony export */   hueParse: () => (/* binding */ hueParse),\n/* harmony export */   hwb2rgb: () => (/* binding */ hwb2rgb),\n/* harmony export */   lim: () => (/* binding */ lim),\n/* harmony export */   n2b: () => (/* binding */ n2b),\n/* harmony export */   n2p: () => (/* binding */ n2p),\n/* harmony export */   nameParse: () => (/* binding */ nameParse),\n/* harmony export */   p2b: () => (/* binding */ p2b),\n/* harmony export */   rgb2hsl: () => (/* binding */ rgb2hsl),\n/* harmony export */   rgbParse: () => (/* binding */ rgbParse),\n/* harmony export */   rgbString: () => (/* binding */ rgbString),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   round: () => (/* binding */ round)\n/* harmony export */ });\n/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@kurkle/color/dist/color.esm.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/_assert.js":
/*!***************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_assert.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: () => (/* binding */ bool),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   exists: () => (/* binding */ exists),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   output: () => (/* binding */ output)\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\n\nconst assert = { number, bool, bytes, hash, exists, output };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);\n//# sourceMappingURL=_assert.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/_assert.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/_md.js":
/*!***********************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_md.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chi: () => (/* binding */ Chi),\n/* harmony export */   HashMD: () => (/* binding */ HashMD),\n/* harmony export */   Maj: () => (/* binding */ Maj)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/_md.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/_u64.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/_u64.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   add3H: () => (/* binding */ add3H),\n/* harmony export */   add3L: () => (/* binding */ add3L),\n/* harmony export */   add4H: () => (/* binding */ add4H),\n/* harmony export */   add4L: () => (/* binding */ add4L),\n/* harmony export */   add5H: () => (/* binding */ add5H),\n/* harmony export */   add5L: () => (/* binding */ add5L),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   rotlBH: () => (/* binding */ rotlBH),\n/* harmony export */   rotlBL: () => (/* binding */ rotlBL),\n/* harmony export */   rotlSH: () => (/* binding */ rotlSH),\n/* harmony export */   rotlSL: () => (/* binding */ rotlSL),\n/* harmony export */   rotr32H: () => (/* binding */ rotr32H),\n/* harmony export */   rotr32L: () => (/* binding */ rotr32L),\n/* harmony export */   rotrBH: () => (/* binding */ rotrBH),\n/* harmony export */   rotrBL: () => (/* binding */ rotrBL),\n/* harmony export */   rotrSH: () => (/* binding */ rotrSH),\n/* harmony export */   rotrSL: () => (/* binding */ rotrSL),\n/* harmony export */   shrSH: () => (/* binding */ shrSH),\n/* harmony export */   shrSL: () => (/* binding */ shrSL),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceMappingURL=_u64.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/_u64.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/crypto.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/crypto.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto)\n/* harmony export */ });\nconst crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/crypto.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/hmac.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/hmac.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HMAC: () => (/* binding */ HMAC),\n/* harmony export */   hmac: () => (/* binding */ hmac)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// HMAC (RFC 2104)\nclass HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.hash)(hash);\n        const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.bytes)(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/hmac.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/sha256.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha256.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha224: () => (/* binding */ sha224),\n/* harmony export */   sha256: () => (/* binding */ sha256)\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_md.js */ \"./node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/hashes/esm/utils.js\");\n\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);\n            const T2 = (sigma0 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());\nconst sha224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/sha256.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/sha3.js":
/*!************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha3.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keccak: () => (/* binding */ Keccak),\n/* harmony export */   keccakP: () => (/* binding */ keccakP),\n/* harmony export */   keccak_224: () => (/* binding */ keccak_224),\n/* harmony export */   keccak_256: () => (/* binding */ keccak_256),\n/* harmony export */   keccak_384: () => (/* binding */ keccak_384),\n/* harmony export */   keccak_512: () => (/* binding */ keccak_512),\n/* harmony export */   sha3_224: () => (/* binding */ sha3_224),\n/* harmony export */   sha3_256: () => (/* binding */ sha3_256),\n/* harmony export */   sha3_384: () => (/* binding */ sha3_384),\n/* harmony export */   sha3_512: () => (/* binding */ sha3_512),\n/* harmony export */   shake128: () => (/* binding */ shake128),\n/* harmony export */   shake256: () => (/* binding */ shake256)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);\n    }\n    keccak() {\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this);\n        const { blockLen, state } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this, false);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nconst sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nconst sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nconst sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nconst sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nconst keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nconst keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nconst keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nconst keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nconst shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nconst shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/sha3.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/sha512.js":
/*!**************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/sha512.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SHA512: () => (/* binding */ SHA512),\n/* harmony export */   sha384: () => (/* binding */ sha384),\n/* harmony export */   sha512: () => (/* binding */ sha512),\n/* harmony export */   sha512_224: () => (/* binding */ sha512_224),\n/* harmony export */   sha512_256: () => (/* binding */ sha512_256)\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_md.js */ \"./node_modules/@noble/hashes/esm/_md.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"./node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _md_js__WEBPACK_IMPORTED_MODULE_1__.HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nconst sha512 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512());\nconst sha512_224 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_224());\nconst sha512_256 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA512_256());\nconst sha384 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/sha512.js?");

/***/ }),

/***/ "./node_modules/@noble/hashes/esm/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/@noble/hashes/esm/utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),\n/* harmony export */   byteSwap: () => (/* binding */ byteSwap),\n/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),\n/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   rotl: () => (/* binding */ rotl),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),\n/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),\n/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/crypto */ \"./node_modules/@noble/hashes/esm/crypto.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/@noble/hashes/esm/_assert.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nconst byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/hashes/esm/utils.js?");

/***/ }),

/***/ "./node_modules/@noble/post-quantum/esm/_crystals.js":
/*!***********************************************************!*\
  !*** ./node_modules/@noble/post-quantum/esm/_crystals.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XOF128: () => (/* binding */ XOF128),\n/* harmony export */   XOF256: () => (/* binding */ XOF256),\n/* harmony export */   genCrystals: () => (/* binding */ genCrystals)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/post-quantum/esm/utils.js\");\n/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\n\n\n// TODO: benchmark\nfunction bitReversal(n, bits = 8) {\n    const padded = n.toString(2).padStart(8, '0');\n    const sliced = padded.slice(-bits).padStart(7, '0');\n    const revrsd = sliced.split('').reverse().join('');\n    return Number.parseInt(revrsd, 2);\n}\nconst genCrystals = (opts) => {\n    // isKyber: true means Kyber, false means Dilithium\n    const { newPoly, N, Q, F, ROOT_OF_UNITY, brvBits, isKyber } = opts;\n    const mod = (a, modulo = Q) => {\n        const result = a % modulo | 0;\n        return (result >= 0 ? result | 0 : (modulo + result) | 0) | 0;\n    };\n    // -(Q-1)/2 < a <= (Q-1)/2\n    const smod = (a, modulo = Q) => {\n        const r = mod(a, modulo) | 0;\n        return (r > modulo >> 1 ? (r - modulo) | 0 : r) | 0;\n    };\n    // Generate zettas\n    function getZettas() {\n        const out = newPoly(N);\n        for (let i = 0; i < N; i++) {\n            const b = bitReversal(i, brvBits);\n            const p = BigInt(ROOT_OF_UNITY) ** BigInt(b) % BigInt(Q);\n            out[i] = Number(p) | 0;\n        }\n        return out;\n    }\n    const nttZetas = getZettas();\n    // Number-Theoretic Transform\n    // Explained: https://electricdusk.com/ntt.html\n    // Kyber has slightly different params, since there is no 512th primitive root of unity mod q,\n    // only 256th primitive root of unity mod. Which also complicates MultiplyNTT.\n    // TODO: there should be less ugly way to define this.\n    const LEN1 = isKyber ? 128 : N;\n    const LEN2 = isKyber ? 1 : 0;\n    const NTT = {\n        encode: (r) => {\n            for (let k = 1, len = 128; len > LEN2; len >>= 1) {\n                for (let start = 0; start < N; start += 2 * len) {\n                    const zeta = nttZetas[k++];\n                    for (let j = start; j < start + len; j++) {\n                        const t = mod(zeta * r[j + len]);\n                        r[j + len] = mod(r[j] - t) | 0;\n                        r[j] = mod(r[j] + t) | 0;\n                    }\n                }\n            }\n            return r;\n        },\n        decode: (r) => {\n            for (let k = LEN1 - 1, len = 1 + LEN2; len < LEN1 + LEN2; len <<= 1) {\n                for (let start = 0; start < N; start += 2 * len) {\n                    const zeta = nttZetas[k--];\n                    for (let j = start; j < start + len; j++) {\n                        const t = r[j];\n                        r[j] = mod(t + r[j + len]);\n                        r[j + len] = mod(zeta * (r[j + len] - t));\n                    }\n                }\n            }\n            for (let i = 0; i < r.length; i++)\n                r[i] = mod(F * r[i]);\n            return r;\n        },\n    };\n    // Encode polynominal as bits\n    const bitsCoder = (d, c) => {\n        const mask = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getMask)(d);\n        const bytesLen = d * (N / 8);\n        return {\n            bytesLen,\n            encode: (poly) => {\n                const r = new Uint8Array(bytesLen);\n                for (let i = 0, buf = 0, bufLen = 0, pos = 0; i < poly.length; i++) {\n                    buf |= (c.encode(poly[i]) & mask) << bufLen;\n                    bufLen += d;\n                    for (; bufLen >= 8; bufLen -= 8, buf >>= 8)\n                        r[pos++] = buf & (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getMask)(bufLen);\n                }\n                return r;\n            },\n            decode: (bytes) => {\n                const r = newPoly(N);\n                for (let i = 0, buf = 0, bufLen = 0, pos = 0; i < bytes.length; i++) {\n                    buf |= bytes[i] << bufLen;\n                    bufLen += 8;\n                    for (; bufLen >= d; bufLen -= d, buf >>= d)\n                        r[pos++] = c.decode(buf & mask);\n                }\n                return r;\n            },\n        };\n    };\n    return { mod, smod, nttZetas, NTT, bitsCoder };\n};\nconst createXofShake = (shake) => (seed, blockLen) => {\n    if (!blockLen)\n        blockLen = shake.blockLen;\n    // Optimizations that won't mater:\n    // - cached seed update (two .update(), on start and on the end)\n    // - another cache which cloned into working copy\n    // Faster than multiple updates, since seed less than blockLen\n    const _seed = new Uint8Array(seed.length + 2);\n    _seed.set(seed);\n    const seedLen = seed.length;\n    const buf = new Uint8Array(blockLen); // == shake128.blockLen\n    let h = shake.create({});\n    let calls = 0;\n    let xofs = 0;\n    return {\n        stats: () => ({ calls, xofs }),\n        get: (x, y) => {\n            _seed[seedLen + 0] = x;\n            _seed[seedLen + 1] = y;\n            h.destroy();\n            h = shake.create({}).update(_seed);\n            calls++;\n            return () => {\n                xofs++;\n                return h.xofInto(buf);\n            };\n        },\n        clean: () => {\n            h.destroy();\n            buf.fill(0);\n            _seed.fill(0);\n        },\n    };\n};\nconst XOF128 = /* @__PURE__ */ createXofShake(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.shake128);\nconst XOF256 = /* @__PURE__ */ createXofShake(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.shake256);\n//# sourceMappingURL=_crystals.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/post-quantum/esm/_crystals.js?");

/***/ }),

/***/ "./node_modules/@noble/post-quantum/esm/ml-dsa.js":
/*!********************************************************!*\
  !*** ./node_modules/@noble/post-quantum/esm/ml-dsa.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PARAMS: () => (/* binding */ PARAMS),\n/* harmony export */   ml_dsa44: () => (/* binding */ ml_dsa44),\n/* harmony export */   ml_dsa65: () => (/* binding */ ml_dsa65),\n/* harmony export */   ml_dsa87: () => (/* binding */ ml_dsa87)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _crystals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_crystals.js */ \"./node_modules/@noble/post-quantum/esm/_crystals.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/post-quantum/esm/utils.js\");\n/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\n\n\n\n/*\nLattice-based digital signature algorithm. See\n[official site](https://www.pq-crystals.org/dilithium/index.shtml),\n[repo](https://github.com/pq-crystals/dilithium).\nDilithium has similar internals to Kyber, but their keys and params are different.\n\n*/\n// Constants\nconst N = 256;\n// 2**23 − 2**13 + 1, 23 bits: multiply will be 46. We have enough precision in JS to avoid bigints\nconst Q = 8380417;\nconst ROOT_OF_UNITY = 1753;\n// f = 256**−1 mod q, pow(256, -1, q) = 8347681 (python3)\nconst F = 8347681;\nconst D = 13;\n// Dilithium is kinda parametrized over GAMMA2, but everything will break with any other value.\nconst GAMMA2_1 = Math.floor((Q - 1) / 88) | 0;\nconst GAMMA2_2 = Math.floor((Q - 1) / 32) | 0;\n// prettier-ignore\nconst PARAMS = {\n    2: { K: 4, L: 4, D, GAMMA1: 2 ** 17, GAMMA2: GAMMA2_1, TAU: 39, ETA: 2, OMEGA: 80 },\n    3: { K: 6, L: 5, D, GAMMA1: 2 ** 19, GAMMA2: GAMMA2_2, TAU: 49, ETA: 4, OMEGA: 55 },\n    5: { K: 8, L: 7, D, GAMMA1: 2 ** 19, GAMMA2: GAMMA2_2, TAU: 60, ETA: 2, OMEGA: 75 },\n};\nconst newPoly = (n) => new Int32Array(n);\nconst { mod, smod, NTT, bitsCoder } = (0,_crystals_js__WEBPACK_IMPORTED_MODULE_0__.genCrystals)({\n    N,\n    Q,\n    F,\n    ROOT_OF_UNITY,\n    newPoly,\n    isKyber: false,\n    brvBits: 8,\n});\nconst polyCoder = (d, compress) => bitsCoder(d, {\n    encode: (i) => (compress ? compress(i) : i),\n    decode: (i) => (compress ? compress(i) : i),\n});\nconst polyAdd = (a, b) => {\n    for (let i = 0; i < a.length; i++)\n        a[i] = mod(a[i] + b[i]);\n    return a;\n};\nconst polySub = (a, b) => {\n    for (let i = 0; i < a.length; i++)\n        a[i] = mod(a[i] - b[i]);\n    return a;\n};\nconst polyShiftl = (p) => {\n    for (let i = 0; i < N; i++)\n        p[i] <<= D;\n    return p;\n};\nconst polyChknorm = (p, B) => {\n    // Not very sure about this, but FIPS204 doesn't provide any function for that :(\n    for (let i = 0; i < N; i++)\n        if (Math.abs(smod(p[i])) >= B)\n            return true;\n    return false;\n};\nconst MultiplyNTTs = (a, b) => {\n    // NOTE: we don't use montgomery reduction in code, since it requires 64 bit ints,\n    // which is not available in JS. mod(a[i] * b[i]) is ok, since Q is 23 bit,\n    // which means a[i] * b[i] is 46 bit, which is safe to use in JS. (number is 53 bits).\n    // Barrett reduction is slower than mod :(\n    const c = newPoly(N);\n    for (let i = 0; i < a.length; i++)\n        c[i] = mod(a[i] * b[i]);\n    return c;\n};\n// Return poly in NTT representation\nfunction RejNTTPoly(xof) {\n    // Samples a polynomial ∈ Tq.\n    const r = newPoly(N);\n    // NOTE: we can represent 3xu24 as 4xu32, but it doesn't improve perf :(\n    for (let j = 0; j < N;) {\n        const b = xof();\n        if (b.length % 3)\n            throw new Error('RejNTTPoly: unaligned block');\n        for (let i = 0; j < N && i <= b.length - 3; i += 3) {\n            const t = (b[i + 0] | (b[i + 1] << 8) | (b[i + 2] << 16)) & 0x7fffff; // 3 bytes\n            if (t < Q)\n                r[j++] = t;\n        }\n    }\n    return r;\n}\nfunction getDilithium(opts) {\n    const { K, L, GAMMA1, GAMMA2, TAU, ETA, OMEGA } = opts;\n    const { CRH_BYTES, TR_BYTES, C_TILDE_BYTES, XOF128, XOF256 } = opts;\n    if (![2, 4].includes(ETA))\n        throw new Error('Wrong ETA');\n    if (![1 << 17, 1 << 19].includes(GAMMA1))\n        throw new Error('Wrong GAMMA1');\n    if (![GAMMA2_1, GAMMA2_2].includes(GAMMA2))\n        throw new Error('Wrong GAMMA2');\n    const BETA = TAU * ETA;\n    const decompose = (r) => {\n        // Decomposes r into (r1, r0) such that r ≡ r1(2γ2) + r0 mod q.\n        const rPlus = mod(r);\n        const r0 = smod(rPlus, 2 * GAMMA2) | 0;\n        if (rPlus - r0 === Q - 1)\n            return { r1: 0 | 0, r0: (r0 - 1) | 0 };\n        const r1 = Math.floor((rPlus - r0) / (2 * GAMMA2)) | 0;\n        return { r1, r0 }; // r1 = HighBits, r0 = LowBits\n    };\n    const HighBits = (r) => decompose(r).r1;\n    const LowBits = (r) => decompose(r).r0;\n    const MakeHint = (z, r) => {\n        // Compute hint bit indicating whether adding z to r alters the high bits of r.\n        // From dilithium code\n        const res0 = z <= GAMMA2 || z > Q - GAMMA2 || (z === Q - GAMMA2 && r === 0) ? 0 : 1;\n        // from FIPS204:\n        // // const r1 = HighBits(r);\n        // // const v1 = HighBits(r + z);\n        // // const res1 = +(r1 !== v1);\n        // But they return different results! However, decompose is same.\n        // So, either there is a bug in Dilithium ref implementation or in FIPS204.\n        // For now, lets use dilithium one, so test vectors can be passed.\n        // See\n        // https://github.com/GiacomoPope/dilithium-py?tab=readme-ov-file#optimising-decomposition-and-making-hints\n        return res0;\n    };\n    const UseHint = (h, r) => {\n        // Returns the high bits of r adjusted according to hint h\n        const m = Math.floor((Q - 1) / (2 * GAMMA2));\n        const { r1, r0 } = decompose(r);\n        // 3: if h = 1 and r0 > 0 return (r1 + 1) mod m\n        // 4: if h = 1 and r0 ≤ 0 return (r1 − 1) mod m\n        if (h === 1)\n            return r0 > 0 ? mod(r1 + 1, m) | 0 : mod(r1 - 1, m) | 0;\n        return r1 | 0;\n    };\n    const Power2Round = (r) => {\n        // Decomposes r into (r1, r0) such that r ≡ r1*(2**d) + r0 mod q.\n        const rPlus = mod(r);\n        const r0 = smod(rPlus, 2 ** D) | 0;\n        return { r1: Math.floor((rPlus - r0) / 2 ** D) | 0, r0 };\n    };\n    const hintCoder = {\n        bytesLen: OMEGA + K,\n        encode: (h) => {\n            if (h === false)\n                throw new Error('hint.encode: hint is false'); // should never happen\n            const res = new Uint8Array(OMEGA + K);\n            for (let i = 0, k = 0; i < K; i++) {\n                for (let j = 0; j < N; j++)\n                    if (h[i][j] !== 0)\n                        res[k++] = j;\n                res[OMEGA + i] = k;\n            }\n            return res;\n        },\n        decode: (buf) => {\n            const h = [];\n            let k = 0;\n            for (let i = 0; i < K; i++) {\n                const hi = newPoly(N);\n                if (buf[OMEGA + i] < k || buf[OMEGA + i] > OMEGA)\n                    return false;\n                for (let j = k; j < buf[OMEGA + i]; j++) {\n                    if (j > k && buf[j] <= buf[j - 1])\n                        return false;\n                    hi[buf[j]] = 1;\n                }\n                k = buf[OMEGA + i];\n                h.push(hi);\n            }\n            for (let j = k; j < OMEGA; j++)\n                if (buf[j] !== 0)\n                    return false;\n            return h;\n        },\n    };\n    const ETACoder = polyCoder(ETA === 2 ? 3 : 4, (i) => ETA - i);\n    const T0Coder = polyCoder(13, (i) => (1 << (D - 1)) - i);\n    const T1Coder = polyCoder(10);\n    // Requires smod. Need to fix!\n    const ZCoder = polyCoder(GAMMA1 === 1 << 17 ? 18 : 20, (i) => smod(GAMMA1 - i));\n    const W1Coder = polyCoder(GAMMA2 === GAMMA2_1 ? 6 : 4);\n    const W1Vec = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(W1Coder, K);\n    // Main structures\n    const publicCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(32, (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(T1Coder, K));\n    const secretCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(32, 32, TR_BYTES, (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(ETACoder, L), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(ETACoder, K), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(T0Coder, K));\n    const sigCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(C_TILDE_BYTES, (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)(ZCoder, L), hintCoder);\n    const CoefFromHalfByte = ETA === 2\n        ? (n) => (n < 15 ? 2 - (n % 5) : false)\n        : (n) => (n < 9 ? 4 - n : false);\n    // Return poly in NTT representation\n    function RejBoundedPoly(xof) {\n        // Samples an element a ∈ Rq with coeffcients in [−η, η] computed via rejection sampling from ρ.\n        const r = newPoly(N);\n        for (let j = 0; j < N;) {\n            const b = xof();\n            for (let i = 0; j < N && i < b.length; i += 1) {\n                // half byte. Should be superfast with vector instructions. But very slow with js :(\n                const d1 = CoefFromHalfByte(b[i] & 0x0f);\n                const d2 = CoefFromHalfByte((b[i] >> 4) & 0x0f);\n                if (d1 !== false)\n                    r[j++] = d1;\n                if (j < N && d2 !== false)\n                    r[j++] = d2;\n            }\n        }\n        return r;\n    }\n    const SampleInBall = (seed) => {\n        // Samples a polynomial c ∈ Rq with coeffcients from {−1, 0, 1} and Hamming weight τ\n        const pre = newPoly(N);\n        const s = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({}).update(seed);\n        const buf = new Uint8Array(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.blockLen);\n        s.xofInto(buf);\n        const masks = buf.slice(0, 8);\n        for (let i = N - TAU, pos = 8, maskPos = 0, maskBit = 0; i < N; i++) {\n            let b = i + 1;\n            for (; b > i;) {\n                b = buf[pos++];\n                if (pos < _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.blockLen)\n                    continue;\n                s.xofInto(buf);\n                pos = 0;\n            }\n            pre[i] = pre[b];\n            pre[b] = 1 - (((masks[maskPos] >> maskBit++) & 1) << 1);\n            if (maskBit >= 8) {\n                maskPos++;\n                maskBit = 0;\n            }\n        }\n        return pre;\n    };\n    const polyPowerRound = (p) => {\n        const res0 = newPoly(N);\n        const res1 = newPoly(N);\n        for (let i = 0; i < p.length; i++) {\n            const { r0, r1 } = Power2Round(p[i]);\n            res0[i] = r0;\n            res1[i] = r1;\n        }\n        return { r0: res0, r1: res1 };\n    };\n    const polyUseHint = (u, h) => {\n        for (let i = 0; i < N; i++)\n            u[i] = UseHint(h[i], u[i]);\n        return u;\n    };\n    const polyMakeHint = (a, b) => {\n        const v = newPoly(N);\n        let cnt = 0;\n        for (let i = 0; i < N; i++) {\n            const h = MakeHint(a[i], b[i]);\n            v[i] = h;\n            cnt += h;\n        }\n        return { v, cnt };\n    };\n    const signRandBytes = 32;\n    const seedCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(32, 64, 32);\n    // API & argument positions are exactly as in FIPS204.\n    return {\n        signRandBytes,\n        keygen: (seed = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(32)) => {\n            // H(𝜉||IntegerToBytes(𝑘, 1)||IntegerToBytes(ℓ, 1), 128) 2: ▷ expand seed\n            const seedDst = new Uint8Array(32 + 2);\n            seedDst.set(seed);\n            seedDst[32] = K;\n            seedDst[33] = L;\n            const [rho, rhoPrime, K_] = seedCoder.decode((0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256)(seedDst, { dkLen: seedCoder.bytesLen }));\n            const xofPrime = XOF256(rhoPrime);\n            const s1 = [];\n            for (let i = 0; i < L; i++)\n                s1.push(RejBoundedPoly(xofPrime.get(i & 0xff, (i >> 8) & 0xff)));\n            const s2 = [];\n            for (let i = L; i < L + K; i++)\n                s2.push(RejBoundedPoly(xofPrime.get(i & 0xff, (i >> 8) & 0xff)));\n            const s1Hat = s1.map((i) => NTT.encode(i.slice()));\n            const t0 = [];\n            const t1 = [];\n            const xof = XOF128(rho);\n            const t = newPoly(N);\n            for (let i = 0; i < K; i++) {\n                // t ← NTT−1(A*NTT(s1)) + s2\n                t.fill(0); // don't-reallocate\n                for (let j = 0; j < L; j++) {\n                    const aij = RejNTTPoly(xof.get(j, i)); // super slow!\n                    polyAdd(t, MultiplyNTTs(aij, s1Hat[j]));\n                }\n                NTT.decode(t);\n                const { r0, r1 } = polyPowerRound(polyAdd(t, s2[i])); // (t1, t0) ← Power2Round(t, d)\n                t0.push(r0);\n                t1.push(r1);\n            }\n            const publicKey = publicCoder.encode([rho, t1]); // pk ← pkEncode(ρ, t1)\n            const tr = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256)(publicKey, { dkLen: TR_BYTES }); // tr ← H(BytesToBits(pk), 512)\n            const secretKey = secretCoder.encode([rho, K_, tr, s1, s2, t0]); // sk ← skEncode(ρ, K,tr, s1, s2, t0)\n            xof.clean();\n            xofPrime.clean();\n            // STATS\n            // Kyber512:  { calls: 4, xofs: 12 }, Kyber768: { calls: 9, xofs: 27 }, Kyber1024: { calls: 16, xofs: 48 }\n            // DSA44:    { calls: 24, xofs: 24 }, DSA65:    { calls: 41, xofs: 41 }, DSA87:    { calls: 71, xofs: 71 }\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.cleanBytes)(rho, rhoPrime, K_, s1, s2, s1Hat, t, t0, t1, tr, seedDst);\n            return { publicKey, secretKey };\n        },\n        // NOTE: random is optional.\n        sign: (secretKey, msg, random) => {\n            // This part can be pre-cached per secretKey, but there is only minor performance improvement,\n            // since we re-use a lot of variables to computation.\n            const [rho, _K, tr, s1, s2, t0] = secretCoder.decode(secretKey); // (ρ, K,tr, s1, s2, t0) ← skDecode(sk)\n            // Cache matrix to avoid re-compute later\n            const A = []; // A ← ExpandA(ρ)\n            const xof = XOF128(rho);\n            for (let i = 0; i < K; i++) {\n                const pv = [];\n                for (let j = 0; j < L; j++)\n                    pv.push(RejNTTPoly(xof.get(j, i)));\n                A.push(pv);\n            }\n            xof.clean();\n            for (let i = 0; i < L; i++)\n                NTT.encode(s1[i]); // sˆ1 ← NTT(s1)\n            for (let i = 0; i < K; i++) {\n                NTT.encode(s2[i]); // sˆ2 ← NTT(s2)\n                NTT.encode(t0[i]); // tˆ0 ← NTT(t0)\n            }\n            // This part is per msg\n            const mu = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({ dkLen: CRH_BYTES }).update(tr).update(msg).digest(); // 6: µ ← H(tr||M, 512) ▷ Compute message representative µ\n            // Compute private random seed\n            const rnd = random ? random : new Uint8Array(32);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)(rnd);\n            const rhoprime = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256\n                .create({ dkLen: CRH_BYTES })\n                .update(_K)\n                .update(rnd)\n                .update(mu)\n                .digest(); // ρ′← H(K||rnd||µ, 512)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)(rhoprime, CRH_BYTES);\n            const x256 = XOF256(rhoprime, ZCoder.bytesLen);\n            //  Rejection sampling loop\n            main_loop: for (let kappa = 0;;) {\n                const y = [];\n                // y ← ExpandMask(ρ , κ)\n                for (let i = 0; i < L; i++, kappa++)\n                    y.push(ZCoder.decode(x256.get(kappa & 0xff, kappa >> 8)()));\n                const z = y.map((i) => NTT.encode(i.slice()));\n                const w = [];\n                for (let i = 0; i < K; i++) {\n                    // w ← NTT−1(A ◦ NTT(y))\n                    const wi = newPoly(N);\n                    for (let j = 0; j < L; j++)\n                        polyAdd(wi, MultiplyNTTs(A[i][j], z[j]));\n                    NTT.decode(wi);\n                    w.push(wi);\n                }\n                const w1 = w.map((j) => j.map(HighBits)); // w1 ← HighBits(w)\n                // Commitment hash: c˜ ∈{0, 1 2λ } ← H(µ||w1Encode(w1), 2λ)\n                const cTilde = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256\n                    .create({ dkLen: C_TILDE_BYTES })\n                    .update(mu)\n                    .update(W1Vec.encode(w1))\n                    .digest();\n                // Verifer’s challenge\n                const cHat = NTT.encode(SampleInBall(cTilde)); // c ← SampleInBall(c˜1); cˆ ← NTT(c)\n                // ⟨⟨cs1⟩⟩ ← NTT−1(cˆ◦ sˆ1)\n                const cs1 = s1.map((i) => MultiplyNTTs(i, cHat));\n                for (let i = 0; i < L; i++) {\n                    polyAdd(NTT.decode(cs1[i]), y[i]); // z ← y + ⟨⟨cs1⟩⟩\n                    if (polyChknorm(cs1[i], GAMMA1 - BETA))\n                        continue main_loop; // ||z||∞ ≥ γ1 − β\n                }\n                // cs1 is now z (▷ Signer’s response)\n                let cnt = 0;\n                const h = [];\n                for (let i = 0; i < K; i++) {\n                    const cs2 = NTT.decode(MultiplyNTTs(s2[i], cHat)); // ⟨⟨cs2⟩⟩ ← NTT−1(cˆ◦ sˆ2)\n                    const r0 = polySub(w[i], cs2).map(LowBits); // r0 ← LowBits(w − ⟨⟨cs2⟩⟩)\n                    if (polyChknorm(r0, GAMMA2 - BETA))\n                        continue main_loop; // ||r0||∞ ≥ γ2 − β\n                    const ct0 = NTT.decode(MultiplyNTTs(t0[i], cHat)); // ⟨⟨ct0⟩⟩ ← NTT−1(cˆ◦ tˆ0)\n                    if (polyChknorm(ct0, GAMMA2))\n                        continue main_loop;\n                    polyAdd(r0, ct0);\n                    // ▷ Signer’s hint\n                    const hint = polyMakeHint(r0, w1[i]); // h ← MakeHint(−⟨⟨ct0⟩⟩, w− ⟨⟨cs2⟩⟩ + ⟨⟨ct0⟩⟩)\n                    h.push(hint.v);\n                    cnt += hint.cnt;\n                }\n                if (cnt > OMEGA)\n                    continue; // the number of 1’s in h is greater than ω\n                x256.clean();\n                const res = sigCoder.encode([cTilde, cs1, h]); // σ ← sigEncode(c˜, z mod±q, h)\n                // rho, _K, tr is subarray of secretKey, cannot clean.\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.cleanBytes)(cTilde, cs1, h, cHat, w1, w, z, y, rhoprime, mu, s1, s2, t0, ...A);\n                return res;\n            }\n            // @ts-ignore\n            throw new Error('Unreachable code path reached, report this error');\n        },\n        verify: (publicKey, msg, sig) => {\n            // ML-DSA.Verify(pk, M, σ): Verifes a signature σ for a message M.\n            const [rho, t1] = publicCoder.decode(publicKey); // (ρ, t1) ← pkDecode(pk)\n            const tr = (0,_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256)(publicKey, { dkLen: TR_BYTES }); // 6: tr ← H(BytesToBits(pk), 512)\n            if (sig.length !== sigCoder.bytesLen)\n                return false; // return false instead of exception\n            const [cTilde, z, h] = sigCoder.decode(sig); // (c˜, z, h) ← sigDecode(σ), ▷ Signer’s commitment hash c ˜, response z and hint\n            if (h === false)\n                return false; // if h = ⊥ then return false\n            for (let i = 0; i < L; i++)\n                if (polyChknorm(z[i], GAMMA1 - BETA))\n                    return false;\n            const mu = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({ dkLen: CRH_BYTES }).update(tr).update(msg).digest(); // 7: µ ← H(tr||M, 512)\n            // Compute verifer’s challenge from c˜\n            const c = NTT.encode(SampleInBall(cTilde)); // c ← SampleInBall(c˜1)\n            const zNtt = z.map((i) => i.slice()); // zNtt = NTT(z)\n            for (let i = 0; i < L; i++)\n                NTT.encode(zNtt[i]);\n            const wTick1 = [];\n            const xof = XOF128(rho);\n            for (let i = 0; i < K; i++) {\n                const ct12d = MultiplyNTTs(NTT.encode(polyShiftl(t1[i])), c); //c * t1 * (2**d)\n                const Az = newPoly(N); // // A * z\n                for (let j = 0; j < L; j++) {\n                    const aij = RejNTTPoly(xof.get(j, i)); // A[i][j] inplace\n                    polyAdd(Az, MultiplyNTTs(aij, zNtt[j]));\n                }\n                // wApprox = A*z - c*t1 * (2**d)\n                const wApprox = NTT.decode(polySub(Az, ct12d));\n                // Reconstruction of signer’s commitment\n                wTick1.push(polyUseHint(wApprox, h[i])); // w ′ ← UseHint(h, w'approx )\n            }\n            xof.clean();\n            // c˜′← H (µ||w1Encode(w′1), 2λ),  Hash it; this should match c˜\n            const c2 = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256\n                .create({ dkLen: C_TILDE_BYTES })\n                .update(mu)\n                .update(W1Vec.encode(wTick1))\n                .digest();\n            // Additional checks in FIPS-204:\n            // [[ ||z||∞ < γ1 − β ]] and [[c ˜ = c˜′]] and [[number of 1’s in h is ≤ ω]]\n            for (const t of h) {\n                const sum = t.reduce((acc, i) => acc + i, 0);\n                if (!(sum <= OMEGA))\n                    return false;\n            }\n            for (const t of z)\n                if (polyChknorm(t, GAMMA1 - BETA))\n                    return false;\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalBytes)(cTilde, c2);\n        },\n    };\n}\n// ML-DSA\nconst ml_dsa44 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[2],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 32,\n    XOF128: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF128,\n    XOF256: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF256,\n});\nconst ml_dsa65 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[3],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 48,\n    XOF128: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF128,\n    XOF256: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF256,\n});\nconst ml_dsa87 = /* @__PURE__ */ getDilithium({\n    ...PARAMS[5],\n    CRH_BYTES: 64,\n    TR_BYTES: 64,\n    C_TILDE_BYTES: 64,\n    XOF128: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF128,\n    XOF256: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF256,\n});\n//# sourceMappingURL=ml-dsa.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/post-quantum/esm/ml-dsa.js?");

/***/ }),

/***/ "./node_modules/@noble/post-quantum/esm/ml-kem.js":
/*!********************************************************!*\
  !*** ./node_modules/@noble/post-quantum/esm/ml-kem.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PARAMS: () => (/* binding */ PARAMS),\n/* harmony export */   ml_kem1024: () => (/* binding */ ml_kem1024),\n/* harmony export */   ml_kem512: () => (/* binding */ ml_kem512),\n/* harmony export */   ml_kem768: () => (/* binding */ ml_kem768)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"./node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _crystals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_crystals.js */ \"./node_modules/@noble/post-quantum/esm/_crystals.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/post-quantum/esm/utils.js\");\n/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\n\n\n\n\n/*\nLattice-based key encapsulation mechanism.\nSee [official site](https://www.pq-crystals.org/kyber/resources.shtml),\n[repo](https://github.com/pq-crystals/kyber),\n[spec](https://datatracker.ietf.org/doc/draft-cfrg-schwabe-kyber/).\n\nKey encapsulation is similar to DH / ECDH (think X25519), with important differences:\n\n- We can't verify if it was \"Bob\" who've sent the shared secret.\n  In ECDH, it's always verified\n- Kyber is probabalistic and relies on quality of randomness (CSPRNG).\n  ECDH doesn't (to this extent).\n- Kyber decapsulation never throws an error, even when shared secret was\n  encrypted by a different public key. It will just return a different\n  shared secret\n\nThere are some concerns with regards to security: see\n[djb blog](https://blog.cr.yp.to/20231003-countcorrectly.html) and\n[mailing list](https://groups.google.com/a/list.nist.gov/g/pqc-forum/c/W2VOzy0wz_E).\n\n*/\nconst N = 256; // Kyber (not FIPS-203) supports different lengths, but all std modes were using 256\nconst Q = 3329; // 13*(2**8)+1, modulo prime\nconst F = 3303; // 3303 ≡ 128**(−1) mod q (FIPS-203)\nconst ROOT_OF_UNITY = 17; // ζ = 17 ∈ Zq is a primitive 256-th root of unity modulo Q. ζ**128 ≡−1\nconst { mod, nttZetas, NTT, bitsCoder } = (0,_crystals_js__WEBPACK_IMPORTED_MODULE_0__.genCrystals)({\n    N,\n    Q,\n    F,\n    ROOT_OF_UNITY,\n    newPoly: (n) => new Uint16Array(n),\n    brvBits: 7,\n    isKyber: true,\n});\n// prettier-ignore\nconst PARAMS = {\n    512: { N, Q, K: 2, ETA1: 3, ETA2: 2, du: 10, dv: 4, RBGstrength: 128 },\n    768: { N, Q, K: 3, ETA1: 2, ETA2: 2, du: 10, dv: 4, RBGstrength: 192 },\n    1024: { N, Q, K: 4, ETA1: 2, ETA2: 2, du: 11, dv: 5, RBGstrength: 256 },\n};\n// FIPS-203: compress/decompress\nconst compress = (d) => {\n    // Special case, no need to compress, pass as is, but strip high bytes on compression\n    if (d >= 12)\n        return { encode: (i) => i, decode: (i) => i };\n    // NOTE: we don't use float arithmetic (forbidden by FIPS-203 and high chance of bugs).\n    // Comments map to python implementation in RFC (draft-cfrg-schwabe-kyber)\n    // const round = (i: number) => Math.floor(i + 0.5) | 0;\n    const a = 2 ** (d - 1);\n    return {\n        // const compress = (i: number) => round((2 ** d / Q) * i) % 2 ** d;\n        encode: (i) => ((i << d) + Q / 2) / Q,\n        // const decompress = (i: number) => round((Q / 2 ** d) * i);\n        decode: (i) => (i * Q + a) >>> d,\n    };\n};\n// NOTE: we merge encoding and compress because it is faster, also both require same d param\n// Converts between bytes and d-bits compressed representation. Kinda like convertRadix2 from @scure/base\n// decode(encode(t)) == t, but there is loss of information on encode(decode(t))\nconst polyCoder = (d) => bitsCoder(d, compress(d));\nfunction polyAdd(a, b) {\n    for (let i = 0; i < N; i++)\n        a[i] = mod(a[i] + b[i]); // a += b\n}\nfunction polySub(a, b) {\n    for (let i = 0; i < N; i++)\n        a[i] = mod(a[i] - b[i]); // a -= b\n}\n// FIPS-203: Computes the product of two degree-one polynomials with respect to a quadratic modulus\nfunction BaseCaseMultiply(a0, a1, b0, b1, zeta) {\n    const c0 = mod(a1 * b1 * zeta + a0 * b0);\n    const c1 = mod(a0 * b1 + a1 * b0);\n    return { c0, c1 };\n}\n// FIPS-203: Computes the product (in the ring Tq) of two NTT representations. NOTE: works inplace for f\n// NOTE: since multiply defined only for NTT representation, we need to convert to NTT, multiply and convert back\nfunction MultiplyNTTs(f, g) {\n    for (let i = 0; i < N / 2; i++) {\n        let z = nttZetas[64 + (i >> 1)];\n        if (i & 1)\n            z = -z;\n        const { c0, c1 } = BaseCaseMultiply(f[2 * i + 0], f[2 * i + 1], g[2 * i + 0], g[2 * i + 1], z);\n        f[2 * i + 0] = c0;\n        f[2 * i + 1] = c1;\n    }\n    return f;\n}\n// Return poly in NTT representation\nfunction SampleNTT(xof) {\n    const r = new Uint16Array(N);\n    for (let j = 0; j < N;) {\n        const b = xof();\n        if (b.length % 3)\n            throw new Error('SampleNTT: unaligned block');\n        for (let i = 0; j < N && i + 3 <= b.length; i += 3) {\n            const d1 = ((b[i + 0] >> 0) | (b[i + 1] << 8)) & 0xfff;\n            const d2 = ((b[i + 1] >> 4) | (b[i + 2] << 4)) & 0xfff;\n            if (d1 < Q)\n                r[j++] = d1;\n            if (j < N && d2 < Q)\n                r[j++] = d2;\n        }\n    }\n    return r;\n}\n// Sampling from the centered binomial distribution\n// Returns poly with small coefficients (noise/errors)\nfunction sampleCBD(PRF, seed, nonce, eta) {\n    const buf = PRF((eta * N) / 4, seed, nonce);\n    const r = new Uint16Array(N);\n    const b32 = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.u32)(buf);\n    let len = 0;\n    for (let i = 0, p = 0, bb = 0, t0 = 0; i < b32.length; i++) {\n        let b = b32[i];\n        for (let j = 0; j < 32; j++) {\n            bb += b & 1;\n            b >>= 1;\n            len += 1;\n            if (len === eta) {\n                t0 = bb;\n                bb = 0;\n            }\n            else if (len === 2 * eta) {\n                r[p++] = mod(t0 - bb);\n                bb = 0;\n                len = 0;\n            }\n        }\n    }\n    if (len)\n        throw new Error(`sampleCBD: leftover bits: ${len}`);\n    return r;\n}\n// K-PKE\n// As per FIPS-203, it doesn't perform any input validation and can't be used in standalone fashion.\nconst genKPKE = (opts) => {\n    const { K, PRF, XOF, HASH512, ETA1, ETA2, du, dv } = opts;\n    const poly1 = polyCoder(1);\n    const polyV = polyCoder(dv);\n    const polyU = polyCoder(du);\n    const publicCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.splitCoder)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.vecCoder)(polyCoder(12), K), 32);\n    const secretCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.vecCoder)(polyCoder(12), K);\n    const cipherCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.splitCoder)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.vecCoder)(polyU, K), polyV);\n    const seedCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.splitCoder)(32, 32);\n    return {\n        secretCoder,\n        secretKeyLen: secretCoder.bytesLen,\n        publicKeyLen: publicCoder.bytesLen,\n        cipherTextLen: cipherCoder.bytesLen,\n        keygen: (seed) => {\n            const seedDst = new Uint8Array(33);\n            seedDst.set(seed);\n            seedDst[32] = K;\n            const seedHash = HASH512(seedDst);\n            const [rho, sigma] = seedCoder.decode(seedHash);\n            const sHat = [];\n            const tHat = [];\n            for (let i = 0; i < K; i++)\n                sHat.push(NTT.encode(sampleCBD(PRF, sigma, i, ETA1)));\n            const x = XOF(rho);\n            for (let i = 0; i < K; i++) {\n                const e = NTT.encode(sampleCBD(PRF, sigma, K + i, ETA1));\n                for (let j = 0; j < K; j++) {\n                    const aji = SampleNTT(x.get(j, i)); // A[j][i], inplace\n                    polyAdd(e, MultiplyNTTs(aji, sHat[j]));\n                }\n                tHat.push(e); // t ← A ◦ s + e\n            }\n            x.clean();\n            const res = {\n                publicKey: publicCoder.encode([tHat, rho]),\n                secretKey: secretCoder.encode(sHat),\n            };\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(rho, sigma, sHat, tHat, seedDst, seedHash);\n            return res;\n        },\n        encrypt: (publicKey, msg, seed) => {\n            const [tHat, rho] = publicCoder.decode(publicKey);\n            const rHat = [];\n            for (let i = 0; i < K; i++)\n                rHat.push(NTT.encode(sampleCBD(PRF, seed, i, ETA1)));\n            const x = XOF(rho);\n            const tmp2 = new Uint16Array(N);\n            const u = [];\n            for (let i = 0; i < K; i++) {\n                const e1 = sampleCBD(PRF, seed, K + i, ETA2);\n                const tmp = new Uint16Array(N);\n                for (let j = 0; j < K; j++) {\n                    const aij = SampleNTT(x.get(i, j)); // A[i][j], inplace\n                    polyAdd(tmp, MultiplyNTTs(aij, rHat[j])); // t += aij * rHat[j]\n                }\n                polyAdd(e1, NTT.decode(tmp)); // e1 += tmp\n                u.push(e1);\n                polyAdd(tmp2, MultiplyNTTs(tHat[i], rHat[i])); // t2 += tHat[i] * rHat[i]\n                tmp.fill(0);\n            }\n            x.clean();\n            const e2 = sampleCBD(PRF, seed, 2 * K, ETA2);\n            polyAdd(e2, NTT.decode(tmp2)); // e2 += tmp2\n            const v = poly1.decode(msg); // encode plaintext m into polynomial v\n            polyAdd(v, e2); // v += e2\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(tHat, rHat, tmp2, e2);\n            return cipherCoder.encode([u, v]);\n        },\n        decrypt: (cipherText, privateKey) => {\n            const [u, v] = cipherCoder.decode(cipherText);\n            const sk = secretCoder.decode(privateKey); // s  ← ByteDecode_12(dkPKE)\n            const tmp = new Uint16Array(N);\n            for (let i = 0; i < K; i++)\n                polyAdd(tmp, MultiplyNTTs(sk[i], NTT.encode(u[i]))); // tmp += sk[i] * u[i]\n            polySub(v, NTT.decode(tmp)); // v += tmp\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(tmp, sk, u);\n            return poly1.encode(v);\n        },\n    };\n};\nfunction createKyber(opts) {\n    const KPKE = genKPKE(opts);\n    const { HASH256, HASH512, KDF } = opts;\n    const { secretCoder: KPKESecretCoder, cipherTextLen } = KPKE;\n    const publicKeyLen = KPKE.publicKeyLen; // 384*K+32\n    const secretCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.splitCoder)(KPKE.secretKeyLen, KPKE.publicKeyLen, 32, 32);\n    const secretKeyLen = secretCoder.bytesLen;\n    const msgLen = 32;\n    return {\n        publicKeyLen,\n        msgLen,\n        keygen: (seed = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(64)) => {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)(seed, 64);\n            const { publicKey, secretKey: sk } = KPKE.keygen(seed.subarray(0, 32));\n            const publicKeyHash = HASH256(publicKey);\n            // (dkPKE||ek||H(ek)||z)\n            const secretKey = secretCoder.encode([sk, publicKey, publicKeyHash, seed.subarray(32)]);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(sk, publicKeyHash);\n            return { publicKey, secretKey };\n        },\n        encapsulate: (publicKey, msg = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32)) => {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)(publicKey, publicKeyLen);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)(msg, msgLen);\n            // FIPS-203 includes additional verification check for modulus\n            const eke = publicKey.subarray(0, 384 * opts.K);\n            const ek = KPKESecretCoder.encode(KPKESecretCoder.decode(eke.slice())); // Copy because of inplace encoding\n            // (Modulus check.) Perform the computation ek ← ByteEncode12(ByteDecode12(eke)).\n            // If ek = ̸ eke, the input is invalid. (See Section 4.2.1.)\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBytes)(ek, eke)) {\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(ek);\n                throw new Error('ML-KEM.encapsulate: wrong publicKey modulus');\n            }\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(ek);\n            const kr = HASH512.create().update(msg).update(HASH256(publicKey)).digest(); // derive randomness\n            const cipherText = KPKE.encrypt(publicKey, msg, kr.subarray(32, 64));\n            kr.subarray(32).fill(0);\n            return { cipherText, sharedSecret: kr.subarray(0, 32) };\n        },\n        decapsulate: (cipherText, secretKey) => {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)(secretKey, secretKeyLen); // 768*k + 96\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.ensureBytes)(cipherText, cipherTextLen); // 32(du*k + dv)\n            const [sk, publicKey, publicKeyHash, z] = secretCoder.decode(secretKey);\n            const msg = KPKE.decrypt(cipherText, sk);\n            const kr = HASH512.create().update(msg).update(publicKeyHash).digest(); // derive randomness, Khat, rHat = G(mHat || h)\n            const Khat = kr.subarray(0, 32);\n            const cipherText2 = KPKE.encrypt(publicKey, msg, kr.subarray(32, 64)); // re-encrypt using the derived randomness\n            const isValid = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBytes)(cipherText, cipherText2); // if ciphertexts do not match, “implicitly reject”\n            const Kbar = KDF.create({ dkLen: 32 }).update(z).update(cipherText).digest();\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.cleanBytes)(msg, cipherText2, !isValid ? Khat : Kbar);\n            return isValid ? Khat : Kbar;\n        },\n    };\n}\nfunction shakePRF(dkLen, key, nonce) {\n    return _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.shake256\n        .create({ dkLen })\n        .update(key)\n        .update(new Uint8Array([nonce]))\n        .digest();\n}\nconst opts = {\n    HASH256: _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_256,\n    HASH512: _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.sha3_512,\n    KDF: _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_3__.shake256,\n    XOF: _crystals_js__WEBPACK_IMPORTED_MODULE_0__.XOF128,\n    PRF: shakePRF,\n};\n/**\n * FIPS-203 ML-KEM.\n */\nconst ml_kem512 = /* @__PURE__ */ createKyber({\n    ...opts,\n    ...PARAMS[512],\n});\nconst ml_kem768 = /* @__PURE__ */ createKyber({\n    ...opts,\n    ...PARAMS[768],\n});\nconst ml_kem1024 = /* @__PURE__ */ createKyber({\n    ...opts,\n    ...PARAMS[1024],\n});\n//# sourceMappingURL=ml-kem.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/post-quantum/esm/ml-kem.js?");

/***/ }),

/***/ "./node_modules/@noble/post-quantum/esm/slh-dsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/@noble/post-quantum/esm/slh-dsa.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PARAMS: () => (/* binding */ PARAMS),\n/* harmony export */   slh_dsa_sha2_128f: () => (/* binding */ slh_dsa_sha2_128f),\n/* harmony export */   slh_dsa_sha2_128s: () => (/* binding */ slh_dsa_sha2_128s),\n/* harmony export */   slh_dsa_sha2_192f: () => (/* binding */ slh_dsa_sha2_192f),\n/* harmony export */   slh_dsa_sha2_192s: () => (/* binding */ slh_dsa_sha2_192s),\n/* harmony export */   slh_dsa_sha2_256f: () => (/* binding */ slh_dsa_sha2_256f),\n/* harmony export */   slh_dsa_sha2_256s: () => (/* binding */ slh_dsa_sha2_256s),\n/* harmony export */   slh_dsa_shake_128f: () => (/* binding */ slh_dsa_shake_128f),\n/* harmony export */   slh_dsa_shake_128s: () => (/* binding */ slh_dsa_shake_128s),\n/* harmony export */   slh_dsa_shake_192f: () => (/* binding */ slh_dsa_shake_192f),\n/* harmony export */   slh_dsa_shake_192s: () => (/* binding */ slh_dsa_shake_192s),\n/* harmony export */   slh_dsa_shake_256f: () => (/* binding */ slh_dsa_shake_256f),\n/* harmony export */   slh_dsa_shake_256s: () => (/* binding */ slh_dsa_shake_256s)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/hmac */ \"./node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/sha2 */ \"./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/sha2 */ \"./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ \"./node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/post-quantum/esm/utils.js\");\n/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\n\n\n\n\n\nconst PARAMS = {\n    '128f': { W: 16, N: 16, H: 66, D: 22, K: 33, A: 6 },\n    '128s': { W: 16, N: 16, H: 63, D: 7, K: 14, A: 12 },\n    '192f': { W: 16, N: 24, H: 66, D: 22, K: 33, A: 8 },\n    '192s': { W: 16, N: 24, H: 63, D: 7, K: 17, A: 14 },\n    '256f': { W: 16, N: 32, H: 68, D: 17, K: 35, A: 9 },\n    '256s': { W: 16, N: 32, H: 64, D: 8, K: 22, A: 14 },\n};\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber((0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes));\n}\nfunction numberToBytesBE(n, len) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(n.toString(16).padStart(len * 2, '0'));\n}\n// Same as bitsCoder.decode, but maybe spec will change and unify with base2bBE.\nconst base2b = (outLen, b) => {\n    const mask = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getMask)(b);\n    return (bytes) => {\n        const baseB = new Uint32Array(outLen);\n        for (let out = 0, pos = 0, bits = 0, total = 0; out < outLen; out++) {\n            while (bits < b) {\n                total = (total << 8) | bytes[pos++];\n                bits += 8;\n            }\n            bits -= b;\n            baseB[out] = (total >>> bits) & mask;\n        }\n        return baseB;\n    };\n};\nfunction getMaskBig(bits) {\n    return (1n << BigInt(bits)) - 1n; // 4 -> 0b1111\n}\nfunction gen(opts, hashOpts) {\n    const { N, W, H, D, K, A } = opts;\n    const getContext = hashOpts.getContext(opts);\n    if (W !== 16)\n        throw new Error('Unsupported Winternitz parameter');\n    const WOTS_LOGW = 4;\n    const WOTS_LEN1 = Math.floor((8 * N) / WOTS_LOGW);\n    const WOTS_LEN2 = N <= 8 ? 2 : N <= 136 ? 3 : 4;\n    const TREE_HEIGHT = Math.floor(H / D);\n    const WOTS_LEN = WOTS_LEN1 + WOTS_LEN2;\n    let ADDR_BYTES = 22;\n    let OFFSET_LAYER = 0;\n    let OFFSET_TREE = 1;\n    let OFFSET_TYPE = 9;\n    let OFFSET_KP_ADDR2 = 12;\n    let OFFSET_KP_ADDR1 = 13;\n    let OFFSET_CHAIN_ADDR = 17;\n    let OFFSET_TREE_INDEX = 18;\n    let OFFSET_HASH_ADDR = 21;\n    if (!hashOpts.isCompressed) {\n        ADDR_BYTES = 32;\n        OFFSET_LAYER += 3;\n        OFFSET_TREE += 7;\n        OFFSET_TYPE += 10;\n        OFFSET_KP_ADDR2 += 10;\n        OFFSET_KP_ADDR1 += 10;\n        OFFSET_CHAIN_ADDR += 10;\n        OFFSET_TREE_INDEX += 10;\n        OFFSET_HASH_ADDR += 10;\n    }\n    const setAddr = (opts, addr = new Uint8Array(ADDR_BYTES)) => {\n        const { type, height, tree, layer, index, chain, hash, keypair } = opts;\n        const { subtreeAddr, keypairAddr } = opts;\n        const v = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.createView)(addr);\n        if (height !== undefined)\n            addr[OFFSET_CHAIN_ADDR] = height;\n        if (layer !== undefined)\n            addr[OFFSET_LAYER] = layer;\n        if (type !== undefined)\n            addr[OFFSET_TYPE] = type;\n        if (chain !== undefined)\n            addr[OFFSET_CHAIN_ADDR] = chain;\n        if (hash !== undefined)\n            addr[OFFSET_HASH_ADDR] = hash;\n        if (index !== undefined)\n            v.setUint32(OFFSET_TREE_INDEX, index, false);\n        if (subtreeAddr)\n            addr.set(subtreeAddr.subarray(0, OFFSET_TREE + 8));\n        if (tree !== undefined)\n            v.setBigUint64(OFFSET_TREE, tree, false);\n        if (keypair !== undefined) {\n            addr[OFFSET_KP_ADDR1] = keypair;\n            if (TREE_HEIGHT > 8)\n                addr[OFFSET_KP_ADDR2] = keypair >>> 8;\n        }\n        if (keypairAddr) {\n            addr.set(keypairAddr.subarray(0, OFFSET_TREE + 8));\n            addr[OFFSET_KP_ADDR1] = keypairAddr[OFFSET_KP_ADDR1];\n            if (TREE_HEIGHT > 8)\n                addr[OFFSET_KP_ADDR2] = keypairAddr[OFFSET_KP_ADDR2];\n        }\n        return addr;\n    };\n    const chainCoder = base2b(WOTS_LEN2, WOTS_LOGW);\n    const chainLengths = (msg) => {\n        const W1 = base2b(WOTS_LEN1, WOTS_LOGW)(msg);\n        let csum = 0;\n        for (let i = 0; i < W1.length; i++)\n            csum += W - 1 - W1[i]; // ▷ Compute checksum\n        csum <<= (8 - ((WOTS_LEN2 * WOTS_LOGW) % 8)) % 8; // csum ← csum ≪ ((8 − ((len2 · lg(w)) mod 8)) mod 8\n        // Checksum to base(LOG_W)\n        const W2 = chainCoder(numberToBytesBE(csum, Math.ceil((WOTS_LEN2 * WOTS_LOGW) / 8)));\n        // W1 || W2 (concatBytes cannot concat TypedArrays)\n        const lengths = new Uint32Array(WOTS_LEN);\n        lengths.set(W1);\n        lengths.set(W2, W1.length);\n        return lengths;\n    };\n    const messageToIndices = base2b(K, A);\n    const TREE_BITS = TREE_HEIGHT * (D - 1);\n    const LEAF_BITS = TREE_HEIGHT;\n    const hashMsgCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(Math.ceil((A * K) / 8), Math.ceil(TREE_BITS / 8), Math.ceil(TREE_HEIGHT / 8));\n    const hashMessage = (R, pkSeed, msg, context) => {\n        const digest = context.Hmsg(R, pkSeed, msg, hashMsgCoder.bytesLen); // digest ← Hmsg(R, PK.seed, PK.root, M)\n        const [md, tmpIdxTree, tmpIdxLeaf] = hashMsgCoder.decode(digest);\n        const tree = bytesToNumberBE(tmpIdxTree) & getMaskBig(TREE_BITS);\n        const leafIdx = Number(bytesToNumberBE(tmpIdxLeaf)) & (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getMask)(LEAF_BITS);\n        return { tree, leafIdx, md };\n    };\n    const treehash = (height, fn) => function treehash_i(context, leafIdx, idxOffset, treeAddr, info) {\n        const maxIdx = (1 << height) - 1;\n        const stack = new Uint8Array(height * N);\n        const authPath = new Uint8Array(height * N);\n        for (let idx = 0;; idx++) {\n            const current = new Uint8Array(2 * N);\n            const cur0 = current.subarray(0, N);\n            const cur1 = current.subarray(N);\n            const addrOffset = idx + idxOffset;\n            cur1.set(fn(leafIdx, addrOffset, context, info));\n            let h = 0;\n            for (let i = idx, o = idxOffset, l = leafIdx;; h++, i >>>= 1, l >>>= 1, o >>>= 1) {\n                if (h === height)\n                    return { root: cur1, authPath }; // Returns from here\n                if ((i ^ l) === 1)\n                    authPath.subarray(h * N).set(cur1); // authPath.push(cur1)\n                if ((i & 1) === 0 && idx < maxIdx)\n                    break;\n                setAddr({ height: h + 1, index: (i >> 1) + (o >> 1) }, treeAddr);\n                cur0.set(stack.subarray(h * N).subarray(0, N));\n                cur1.set(context.thashN(2, current, treeAddr));\n            }\n            stack.subarray(h * N).set(cur1); // stack.push(cur1)\n        }\n        // @ts-ignore\n        throw new Error('Unreachable code path reached, report this error');\n    };\n    const wotsTreehash = treehash(TREE_HEIGHT, (leafIdx, addrOffset, context, info) => {\n        const wotsPk = new Uint8Array(WOTS_LEN * N);\n        const wotsKmask = addrOffset === leafIdx ? 0 : ~0 >>> 0;\n        setAddr({ keypair: addrOffset }, info.leafAddr);\n        setAddr({ keypair: addrOffset }, info.pkAddr);\n        for (let i = 0; i < WOTS_LEN; i++) {\n            const wotsK = info.wotsSteps[i] | wotsKmask;\n            const pk = wotsPk.subarray(i * N, (i + 1) * N);\n            setAddr({ chain: i, hash: 0, type: 5 /* AddressType.WOTSPRF */ }, info.leafAddr);\n            pk.set(context.PRFaddr(info.leafAddr));\n            setAddr({ type: 0 /* AddressType.WOTS */ }, info.leafAddr);\n            for (let k = 0;; k++) {\n                if (k === wotsK)\n                    info.wotsSig.subarray(i * N).set(pk); //wotsSig.push()\n                if (k === W - 1)\n                    break;\n                setAddr({ hash: k }, info.leafAddr);\n                pk.set(context.thash1(pk, info.leafAddr));\n            }\n        }\n        return context.thashN(WOTS_LEN, wotsPk, info.pkAddr);\n    });\n    const forsTreehash = treehash(A, (_, addrOffset, context, forsLeafAddr) => {\n        setAddr({ type: 6 /* AddressType.FORSPRF */, index: addrOffset }, forsLeafAddr);\n        const prf = context.PRFaddr(forsLeafAddr);\n        setAddr({ type: 3 /* AddressType.FORSTREE */ }, forsLeafAddr);\n        return context.thash1(prf, forsLeafAddr);\n    });\n    const merkleSign = (context, wotsAddr, treeAddr, leafIdx, prevRoot = new Uint8Array(N)) => {\n        setAddr({ type: 2 /* AddressType.HASHTREE */ }, treeAddr);\n        // State variables\n        const info = {\n            wotsSig: new Uint8Array(wotsCoder.bytesLen),\n            wotsSteps: chainLengths(prevRoot),\n            leafAddr: setAddr({ subtreeAddr: wotsAddr }),\n            pkAddr: setAddr({ type: 1 /* AddressType.WOTSPK */, subtreeAddr: wotsAddr }),\n        };\n        const { root, authPath } = wotsTreehash(context, leafIdx, 0, treeAddr, info);\n        return {\n            root,\n            sigWots: info.wotsSig.subarray(0, WOTS_LEN * N),\n            sigAuth: authPath,\n        };\n    };\n    const computeRoot = (leaf, leafIdx, idxOffset, authPath, treeHeight, context, addr) => {\n        const buffer = new Uint8Array(2 * N);\n        const b0 = buffer.subarray(0, N);\n        const b1 = buffer.subarray(N, 2 * N);\n        // First iter\n        if ((leafIdx & 1) !== 0) {\n            b1.set(leaf.subarray(0, N));\n            b0.set(authPath.subarray(0, N));\n        }\n        else {\n            b0.set(leaf.subarray(0, N));\n            b1.set(authPath.subarray(0, N));\n        }\n        leafIdx >>>= 1;\n        idxOffset >>>= 1;\n        // Rest\n        for (let i = 0; i < treeHeight - 1; i++, leafIdx >>= 1, idxOffset >>= 1) {\n            setAddr({ height: i + 1, index: leafIdx + idxOffset }, addr);\n            const a = authPath.subarray((i + 1) * N, (i + 2) * N);\n            if ((leafIdx & 1) !== 0) {\n                b1.set(context.thashN(2, buffer, addr));\n                b0.set(a);\n            }\n            else {\n                buffer.set(context.thashN(2, buffer, addr));\n                b1.set(a);\n            }\n        }\n        // Root\n        setAddr({ height: treeHeight, index: leafIdx + idxOffset }, addr);\n        return context.thashN(2, buffer, addr);\n    };\n    const seedCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(N, N, N);\n    const publicCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(N, N);\n    const secretCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(N, N, publicCoder.bytesLen);\n    const forsCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(N, N * A), K);\n    const wotsCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.vecCoder)((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(WOTS_LEN * N, TREE_HEIGHT * N), D);\n    const sigCoder = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.splitCoder)(N, forsCoder, wotsCoder); // random || fors || wots\n    return {\n        seedLen: seedCoder.bytesLen,\n        signRandBytes: N,\n        keygen(seed = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(seedCoder.bytesLen)) {\n            // Set SK.seed, SK.prf, and PK.seed to random n-byte\n            const [secretSeed, secretPRF, publicSeed] = seedCoder.decode(seed);\n            const context = getContext(publicSeed, secretSeed);\n            // ADRS.setLayerAddress(d − 1)\n            const topTreeAddr = setAddr({ layer: D - 1 });\n            const wotsAddr = setAddr({ layer: D - 1 });\n            //PK.root ←_xmss node(SK.seed, 0, h′, PK.seed, ADRS)\n            const { root } = merkleSign(context, wotsAddr, topTreeAddr, ~0 >>> 0);\n            const publicKey = publicCoder.encode([publicSeed, root]);\n            const secretKey = secretCoder.encode([secretSeed, secretPRF, publicKey]);\n            context.clean();\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.cleanBytes)(secretSeed, secretPRF, root, wotsAddr, topTreeAddr);\n            return { publicKey, secretKey };\n        },\n        sign: (sk, msg, random) => {\n            const [skSeed, skPRF, pk] = secretCoder.decode(sk); // todo: fix\n            const [pkSeed, _] = publicCoder.decode(pk);\n            // Set opt_rand to either PK.seed or to a random n-byte string\n            if (!random)\n                random = pkSeed.slice();\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureBytes)(random, N);\n            const context = getContext(pkSeed, skSeed);\n            // Generate randomizer\n            const R = context.PRFmsg(skPRF, random, msg); // R ← PRFmsg(SK.prf, opt_rand, M)\n            let { tree, leafIdx, md } = hashMessage(R, pk, msg, context);\n            // Create FORS signatures\n            const wotsAddr = setAddr({\n                type: 0 /* AddressType.WOTS */,\n                tree,\n                keypair: leafIdx,\n            });\n            const roots = [];\n            const forsLeaf = setAddr({ keypairAddr: wotsAddr });\n            const forsTreeAddr = setAddr({ keypairAddr: wotsAddr });\n            const indices = messageToIndices(md);\n            const fors = [];\n            for (let i = 0; i < indices.length; i++) {\n                const idxOffset = i << A;\n                setAddr({\n                    type: 6 /* AddressType.FORSPRF */,\n                    height: 0,\n                    index: indices[i] + idxOffset,\n                }, forsTreeAddr);\n                const prf = context.PRFaddr(forsTreeAddr);\n                setAddr({ type: 3 /* AddressType.FORSTREE */ }, forsTreeAddr);\n                const { root, authPath } = forsTreehash(context, indices[i], idxOffset, forsTreeAddr, forsLeaf);\n                roots.push(root);\n                fors.push([prf, authPath]);\n            }\n            const forsPkAddr = setAddr({\n                type: 4 /* AddressType.FORSPK */,\n                keypairAddr: wotsAddr,\n            });\n            const root = context.thashN(K, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...roots), forsPkAddr);\n            // WOTS signatures\n            const treeAddr = setAddr({ type: 2 /* AddressType.HASHTREE */ });\n            const wots = [];\n            for (let i = 0; i < D; i++, tree >>= BigInt(TREE_HEIGHT)) {\n                setAddr({ tree, layer: i }, treeAddr);\n                setAddr({ subtreeAddr: treeAddr, keypair: leafIdx }, wotsAddr);\n                const { sigWots, sigAuth, root: r, } = merkleSign(context, wotsAddr, treeAddr, leafIdx, root);\n                root.set(r);\n                r.fill(0);\n                wots.push([sigWots, sigAuth]);\n                leafIdx = Number(tree & getMaskBig(TREE_HEIGHT));\n            }\n            context.clean();\n            const SIG = sigCoder.encode([R, fors, wots]);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.cleanBytes)(R, random, treeAddr, wotsAddr, forsLeaf, forsTreeAddr, indices, roots);\n            return SIG;\n        },\n        verify: (publicKey, msg, sig) => {\n            const [pkSeed, pubRoot] = publicCoder.decode(publicKey);\n            const [random, forsVec, wotsVec] = sigCoder.decode(sig);\n            const pk = publicKey;\n            if (sig.length !== sigCoder.bytesLen)\n                return false;\n            const context = getContext(pkSeed);\n            let { tree, leafIdx, md } = hashMessage(random, pk, msg, context);\n            const wotsAddr = setAddr({\n                type: 0 /* AddressType.WOTS */,\n                tree,\n                keypair: leafIdx,\n            });\n            // FORS signature\n            const roots = [];\n            const forsTreeAddr = setAddr({\n                type: 3 /* AddressType.FORSTREE */,\n                keypairAddr: wotsAddr,\n            });\n            const indices = messageToIndices(md);\n            for (let i = 0; i < forsVec.length; i++) {\n                const [prf, authPath] = forsVec[i];\n                const idxOffset = i << A;\n                setAddr({ height: 0, index: indices[i] + idxOffset }, forsTreeAddr);\n                const leaf = context.thash1(prf, forsTreeAddr);\n                // Compute inplace, because we need all roots in same byte array\n                roots.push(computeRoot(leaf, indices[i], idxOffset, authPath, A, context, forsTreeAddr));\n            }\n            const forsPkAddr = setAddr({\n                type: 4 /* AddressType.FORSPK */,\n                keypairAddr: wotsAddr,\n            });\n            let root = context.thashN(K, (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...roots), forsPkAddr); // root = thash()\n            // WOTS signature\n            const treeAddr = setAddr({ type: 2 /* AddressType.HASHTREE */ });\n            const wotsPkAddr = setAddr({ type: 1 /* AddressType.WOTSPK */ });\n            const wotsPk = new Uint8Array(WOTS_LEN * N);\n            for (let i = 0; i < wotsVec.length; i++, tree >>= BigInt(TREE_HEIGHT)) {\n                const [wots, sigAuth] = wotsVec[i];\n                setAddr({ tree, layer: i }, treeAddr);\n                setAddr({ subtreeAddr: treeAddr, keypair: leafIdx }, wotsAddr);\n                setAddr({ keypairAddr: wotsAddr }, wotsPkAddr);\n                const lengths = chainLengths(root);\n                for (let i = 0; i < WOTS_LEN; i++) {\n                    setAddr({ chain: i }, wotsAddr);\n                    const steps = W - 1 - lengths[i];\n                    const start = lengths[i];\n                    const out = wotsPk.subarray(i * N);\n                    out.set(wots.subarray(i * N, (i + 1) * N));\n                    for (let j = start; j < start + steps && j < W; j++) {\n                        setAddr({ hash: j }, wotsAddr);\n                        out.set(context.thash1(out, wotsAddr));\n                    }\n                }\n                const leaf = context.thashN(WOTS_LEN, wotsPk, wotsPkAddr);\n                root = computeRoot(leaf, leafIdx, 0, sigAuth, TREE_HEIGHT, context, treeAddr);\n                leafIdx = Number(tree & getMaskBig(TREE_HEIGHT));\n            }\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalBytes)(root, pubRoot);\n        },\n    };\n}\nconst genShake = () => (opts) => (pubSeed, skSeed) => {\n    const { N } = opts;\n    const stats = { prf: 0, thash: 0, hmsg: 0, gen_message_random: 0 };\n    const h0 = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({}).update(pubSeed);\n    const h0tmp = h0.clone();\n    const thash = (blocks, input, addr) => {\n        stats.thash++;\n        return h0\n            ._cloneInto(h0tmp)\n            .update(addr)\n            .update(input.subarray(0, blocks * N))\n            .xof(N);\n    };\n    return {\n        PRFaddr: (addr) => {\n            if (!skSeed)\n                throw new Error('no sk seed');\n            stats.prf++;\n            const res = h0._cloneInto(h0tmp).update(addr).update(skSeed).xof(N);\n            return res;\n        },\n        PRFmsg: (skPRF, random, msg) => {\n            stats.gen_message_random++;\n            return _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({}).update(skPRF).update(random).update(msg).digest().subarray(0, N);\n        },\n        Hmsg: (R, pk, m, outLen) => {\n            stats.hmsg++;\n            return _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_2__.shake256.create({}).update(R.subarray(0, N)).update(pk).update(m).xof(outLen);\n        },\n        thash1: thash.bind(null, 1),\n        thashN: thash,\n        clean: () => {\n            h0.destroy();\n            h0tmp.destroy();\n            //console.log(stats);\n        },\n    };\n};\nconst SHAKE_SIMPLE = { getContext: genShake() };\n// Only simple mode in SLH-DSA\nconst slh_dsa_shake_128f = /* @__PURE__ */ gen(PARAMS['128f'], SHAKE_SIMPLE);\nconst slh_dsa_shake_128s = /* @__PURE__ */ gen(PARAMS['128s'], SHAKE_SIMPLE);\nconst slh_dsa_shake_192f = /* @__PURE__ */ gen(PARAMS['192f'], SHAKE_SIMPLE);\nconst slh_dsa_shake_192s = /* @__PURE__ */ gen(PARAMS['192s'], SHAKE_SIMPLE);\nconst slh_dsa_shake_256f = /* @__PURE__ */ gen(PARAMS['256f'], SHAKE_SIMPLE);\nconst slh_dsa_shake_256s = /* @__PURE__ */ gen(PARAMS['256s'], SHAKE_SIMPLE);\nconst genSha = (h0, h1) => (opts) => (pub_seed, sk_seed) => {\n    const { N } = opts;\n    /*\n    Perf debug stats, how much hashes we call?\n    128f_simple: { prf: 8305, thash: 96_922, hmsg: 1, gen_message_random: 1, mgf1: 2 }\n    256s_robust: { prf: 497_686, thash: 2_783_203, hmsg: 1, gen_message_random: 1, mgf1: 2_783_205}\n    256f_simple: { prf: 36_179, thash: 309_693, hmsg: 1, gen_message_random: 1, mgf1: 2 }\n    */\n    const stats = { prf: 0, thash: 0, hmsg: 0, gen_message_random: 0, mgf1: 0 };\n    const counterB = new Uint8Array(4);\n    const counterV = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.createView)(counterB);\n    const h0ps = h0\n        .create()\n        .update(pub_seed)\n        .update(new Uint8Array(h0.blockLen - N));\n    const h1ps = h1\n        .create()\n        .update(pub_seed)\n        .update(new Uint8Array(h1.blockLen - N));\n    const h0tmp = h0ps.clone();\n    const h1tmp = h1ps.clone();\n    function mgf1(seed, length, hash) {\n        stats.mgf1++;\n        const out = new Uint8Array(Math.ceil(length / hash.outputLen) * hash.outputLen);\n        if (length > 2 ** 32)\n            throw new Error('mask too long');\n        for (let counter = 0, o = out; o.length; counter++) {\n            counterV.setUint32(0, counter, false);\n            hash.create().update(seed).update(counterB).digestInto(o);\n            o = o.subarray(hash.outputLen);\n        }\n        out.subarray(length).fill(0);\n        return out.subarray(0, length);\n    }\n    const thash = (_, h, hTmp) => (blocks, input, addr) => {\n        stats.thash++;\n        const d = h\n            ._cloneInto(hTmp)\n            .update(addr)\n            .update(input.subarray(0, blocks * N))\n            .digest();\n        return d.subarray(0, N);\n    };\n    return {\n        PRFaddr: (addr) => {\n            if (!sk_seed)\n                throw new Error('No sk seed');\n            stats.prf++;\n            const res = h0ps\n                ._cloneInto(h0tmp)\n                .update(addr)\n                .update(sk_seed)\n                .digest()\n                .subarray(0, N);\n            return res;\n        },\n        PRFmsg: (skPRF, random, msg) => {\n            stats.gen_message_random++;\n            return new _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_3__.HMAC(h1, skPRF).update(random).update(msg).digest().subarray(0, N);\n        },\n        Hmsg: (R, pk, m, outLen) => {\n            stats.hmsg++;\n            const seed = (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(R.subarray(0, N), pk.subarray(0, N), h1.create().update(R.subarray(0, N)).update(pk).update(m).digest());\n            return mgf1(seed, outLen, h1);\n        },\n        thash1: thash(h0, h0ps, h0tmp).bind(null, 1),\n        thashN: thash(h1, h1ps, h1tmp),\n        clean: () => {\n            h0ps.destroy();\n            h1ps.destroy();\n            h0tmp.destroy();\n            h1tmp.destroy();\n            //console.log(stats);\n        },\n    };\n};\nconst SHA256_SIMPLE = {\n    isCompressed: true,\n    getContext: genSha(_noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__.sha256, _noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__.sha256),\n};\nconst SHA512_SIMPLE = {\n    isCompressed: true,\n    getContext: genSha(_noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_4__.sha256, _noble_hashes_sha2__WEBPACK_IMPORTED_MODULE_5__.sha512),\n};\n// Only simple mode in SLH-DSA\nconst slh_dsa_sha2_128f = /* @__PURE__ */ gen(PARAMS['128f'], SHA256_SIMPLE);\nconst slh_dsa_sha2_128s = /* @__PURE__ */ gen(PARAMS['128s'], SHA256_SIMPLE);\nconst slh_dsa_sha2_192f = /* @__PURE__ */ gen(PARAMS['192f'], SHA512_SIMPLE);\nconst slh_dsa_sha2_192s = /* @__PURE__ */ gen(PARAMS['192s'], SHA512_SIMPLE);\nconst slh_dsa_sha2_256f = /* @__PURE__ */ gen(PARAMS['256f'], SHA512_SIMPLE);\nconst slh_dsa_sha2_256s = /* @__PURE__ */ gen(PARAMS['256s'], SHA512_SIMPLE);\n//# sourceMappingURL=slh-dsa.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/post-quantum/esm/slh-dsa.js?");

/***/ }),

/***/ "./node_modules/@noble/post-quantum/esm/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@noble/post-quantum/esm/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanBytes: () => (/* binding */ cleanBytes),\n/* harmony export */   ensureBytes: () => (/* binding */ ensureBytes),\n/* harmony export */   equalBytes: () => (/* binding */ equalBytes),\n/* harmony export */   getMask: () => (/* binding */ getMask),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   splitCoder: () => (/* binding */ splitCoder),\n/* harmony export */   vecCoder: () => (/* binding */ vecCoder)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"./node_modules/@noble/hashes/esm/utils.js\");\n/*! noble-post-quantum - MIT License (c) 2024 Paul Miller (paulmillr.com) */\n\n\nconst ensureBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__.bytes;\nconst randomBytes = _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.randomBytes;\n// Compares 2 u8a-s in kinda constant time\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\nfunction splitCoder(...lengths) {\n    const getLength = (c) => (typeof c === 'number' ? c : c.bytesLen);\n    const bytesLen = lengths.reduce((sum, a) => sum + getLength(a), 0);\n    return {\n        bytesLen,\n        encode: (bufs) => {\n            const res = new Uint8Array(bytesLen);\n            for (let i = 0, pos = 0; i < lengths.length; i++) {\n                const c = lengths[i];\n                const l = getLength(c);\n                const b = typeof c === 'number' ? bufs[i] : c.encode(bufs[i]);\n                ensureBytes(b, l);\n                res.set(b, pos);\n                if (typeof c !== 'number')\n                    b.fill(0); // clean\n                pos += l;\n            }\n            return res;\n        },\n        decode: (buf) => {\n            ensureBytes(buf, bytesLen);\n            const res = [];\n            for (const c of lengths) {\n                const l = getLength(c);\n                const b = buf.subarray(0, l);\n                res.push(typeof c === 'number' ? b : c.decode(b));\n                buf = buf.subarray(l);\n            }\n            return res;\n        },\n    };\n}\n// nano-packed.array (fixed size)\nfunction vecCoder(c, vecLen) {\n    const bytesLen = vecLen * c.bytesLen;\n    return {\n        bytesLen,\n        encode: (u) => {\n            if (u.length !== vecLen)\n                throw new Error(`vecCoder.encode: wrong length=${u.length}. Expected: ${vecLen}`);\n            const res = new Uint8Array(bytesLen);\n            for (let i = 0, pos = 0; i < u.length; i++) {\n                const b = c.encode(u[i]);\n                res.set(b, pos);\n                b.fill(0); // clean\n                pos += b.length;\n            }\n            return res;\n        },\n        decode: (a) => {\n            ensureBytes(a, bytesLen);\n            const r = [];\n            for (let i = 0; i < a.length; i += c.bytesLen)\n                r.push(c.decode(a.subarray(i, i + c.bytesLen)));\n            return r;\n        },\n    };\n}\n// cleanBytes(new Uint8Array(), [new Uint16Array(), new Uint32Array()])\nfunction cleanBytes(...list) {\n    for (const t of list) {\n        if (Array.isArray(t))\n            for (const b of t)\n                b.fill(0);\n        else\n            t.fill(0);\n    }\n}\nfunction getMask(bits) {\n    return (1 << bits) - 1; // 4 -> 0b1111\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/@noble/post-quantum/esm/utils.js?");

/***/ }),

/***/ "./node_modules/chart.js/auto/auto.js":
/*!********************************************!*\
  !*** ./node_modules/chart.js/auto/auto.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animation: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Animation),\n/* harmony export */   Animations: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Animations),\n/* harmony export */   ArcElement: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.ArcElement),\n/* harmony export */   BarController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BarController),\n/* harmony export */   BarElement: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BarElement),\n/* harmony export */   BasePlatform: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BasePlatform),\n/* harmony export */   BasicPlatform: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BasicPlatform),\n/* harmony export */   BubbleController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.BubbleController),\n/* harmony export */   CategoryScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.CategoryScale),\n/* harmony export */   Chart: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart),\n/* harmony export */   Colors: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Colors),\n/* harmony export */   DatasetController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DatasetController),\n/* harmony export */   Decimation: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Decimation),\n/* harmony export */   DomPlatform: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DomPlatform),\n/* harmony export */   DoughnutController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.DoughnutController),\n/* harmony export */   Element: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Element),\n/* harmony export */   Filler: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Filler),\n/* harmony export */   Interaction: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Interaction),\n/* harmony export */   Legend: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Legend),\n/* harmony export */   LineController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LineController),\n/* harmony export */   LineElement: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LineElement),\n/* harmony export */   LinearScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LinearScale),\n/* harmony export */   LogarithmicScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.LogarithmicScale),\n/* harmony export */   PieController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PieController),\n/* harmony export */   PointElement: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PointElement),\n/* harmony export */   PolarAreaController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.PolarAreaController),\n/* harmony export */   RadarController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.RadarController),\n/* harmony export */   RadialLinearScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.RadialLinearScale),\n/* harmony export */   Scale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Scale),\n/* harmony export */   ScatterController: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.ScatterController),\n/* harmony export */   SubTitle: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.SubTitle),\n/* harmony export */   Ticks: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Ticks),\n/* harmony export */   TimeScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.TimeScale),\n/* harmony export */   TimeSeriesScale: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.TimeSeriesScale),\n/* harmony export */   Title: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Title),\n/* harmony export */   Tooltip: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Tooltip),\n/* harmony export */   _adapters: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__._adapters),\n/* harmony export */   _detectPlatform: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__._detectPlatform),\n/* harmony export */   animator: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.animator),\n/* harmony export */   controllers: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.controllers),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaults: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.defaults),\n/* harmony export */   elements: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.elements),\n/* harmony export */   layouts: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.layouts),\n/* harmony export */   plugins: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.plugins),\n/* harmony export */   registerables: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registerables),\n/* harmony export */   registry: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registry),\n/* harmony export */   scales: () => (/* reexport safe */ _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.scales)\n/* harmony export */ });\n/* harmony import */ var _dist_chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/chart.js */ \"./node_modules/chart.js/dist/chart.js\");\n\n\n_dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart.register(..._dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.registerables);\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_dist_chart_js__WEBPACK_IMPORTED_MODULE_0__.Chart);\n\n\n//# sourceURL=webpack:///./node_modules/chart.js/auto/auto.js?");

/***/ }),

/***/ "./node_modules/chart.js/dist/chart.js":
/*!*********************************************!*\
  !*** ./node_modules/chart.js/dist/chart.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animation: () => (/* binding */ Animation),\n/* harmony export */   Animations: () => (/* binding */ Animations),\n/* harmony export */   ArcElement: () => (/* binding */ ArcElement),\n/* harmony export */   BarController: () => (/* binding */ BarController),\n/* harmony export */   BarElement: () => (/* binding */ BarElement),\n/* harmony export */   BasePlatform: () => (/* binding */ BasePlatform),\n/* harmony export */   BasicPlatform: () => (/* binding */ BasicPlatform),\n/* harmony export */   BubbleController: () => (/* binding */ BubbleController),\n/* harmony export */   CategoryScale: () => (/* binding */ CategoryScale),\n/* harmony export */   Chart: () => (/* binding */ Chart),\n/* harmony export */   Colors: () => (/* binding */ plugin_colors),\n/* harmony export */   DatasetController: () => (/* binding */ DatasetController),\n/* harmony export */   Decimation: () => (/* binding */ plugin_decimation),\n/* harmony export */   DomPlatform: () => (/* binding */ DomPlatform),\n/* harmony export */   DoughnutController: () => (/* binding */ DoughnutController),\n/* harmony export */   Element: () => (/* binding */ Element),\n/* harmony export */   Filler: () => (/* binding */ index),\n/* harmony export */   Interaction: () => (/* binding */ Interaction),\n/* harmony export */   Legend: () => (/* binding */ plugin_legend),\n/* harmony export */   LineController: () => (/* binding */ LineController),\n/* harmony export */   LineElement: () => (/* binding */ LineElement),\n/* harmony export */   LinearScale: () => (/* binding */ LinearScale),\n/* harmony export */   LogarithmicScale: () => (/* binding */ LogarithmicScale),\n/* harmony export */   PieController: () => (/* binding */ PieController),\n/* harmony export */   PointElement: () => (/* binding */ PointElement),\n/* harmony export */   PolarAreaController: () => (/* binding */ PolarAreaController),\n/* harmony export */   RadarController: () => (/* binding */ RadarController),\n/* harmony export */   RadialLinearScale: () => (/* binding */ RadialLinearScale),\n/* harmony export */   Scale: () => (/* binding */ Scale),\n/* harmony export */   ScatterController: () => (/* binding */ ScatterController),\n/* harmony export */   SubTitle: () => (/* binding */ plugin_subtitle),\n/* harmony export */   Ticks: () => (/* reexport safe */ _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL),\n/* harmony export */   TimeScale: () => (/* binding */ TimeScale),\n/* harmony export */   TimeSeriesScale: () => (/* binding */ TimeSeriesScale),\n/* harmony export */   Title: () => (/* binding */ plugin_title),\n/* harmony export */   Tooltip: () => (/* binding */ plugin_tooltip),\n/* harmony export */   _adapters: () => (/* binding */ adapters),\n/* harmony export */   _detectPlatform: () => (/* binding */ _detectPlatform),\n/* harmony export */   animator: () => (/* binding */ animator),\n/* harmony export */   controllers: () => (/* binding */ controllers),\n/* harmony export */   defaults: () => (/* reexport safe */ _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   elements: () => (/* binding */ elements),\n/* harmony export */   layouts: () => (/* binding */ layouts),\n/* harmony export */   plugins: () => (/* binding */ plugins),\n/* harmony export */   registerables: () => (/* binding */ registerables),\n/* harmony export */   registry: () => (/* binding */ registry),\n/* harmony export */   scales: () => (/* binding */ scales)\n/* harmony export */ });\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunks/helpers.segment.js */ \"./node_modules/chart.js/dist/chunks/helpers.segment.js\");\n/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.r.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(from || transparent);\n        const c1 = c0.valid && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e[cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(otherValue) && (singleMode || value === 0 || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) === (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.l)(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, xAxisKey), index),\n                y: yScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, iAxisKey), i);\n            parsed.push(parseValue((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) !== (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);\n        const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P, startX, endX);\n        const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n        let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.m)(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.n)(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.A : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(element, {\n            x: position.x,\n            y: position.y\n        });\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.J)(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.J)(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.K ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.G)(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.M)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(this.x) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorStart, 0);\n    const end = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.font, fallback);\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);\n    const lines = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, left, right);\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, bottom, top);\n        rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMin, _suggestedMin),\n            max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(_userMax, _suggestedMax),\n            minDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMin),\n            maxDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(min, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(max, min)),\n            max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(max, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.R)(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)(Math.min(Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(label) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {\n                width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(nestedLabel) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(nestedLabel)) {\n                        width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(this._alignToPixels ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(title.font);\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n            offset += padding.bottom;\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(opts.grid && opts.grid.z, -1);\n        const bz = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope]) {\n            delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope][id];\n            if (this.override) {\n                delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a4)(Object.create(null), [\n        parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(parentScope) : {},\n        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(scope),\n        item.defaults\n    ]);\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(method);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(component['before' + camelMethod], [], component);\n        registry[method](component);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(scale, [\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scales[scale.type],\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d, key));\n            keys.forEach((key)=>addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3[type] || {},\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {},\n            {\n                type\n            },\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d,\n            _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a8)(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(context) ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a8)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value) && Object.getOwnPropertyNames(value).some((key)=>(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aa)(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(value) || hasFunction(value)) || indexable && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.M)() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d;\n    static instances = instances;\n    static overrides = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ac)();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ad)((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ag)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ag)(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ai)(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ak)(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(o.innerStart, 0, innerLimit),\n        innerEnd: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(circumference, endAngle - startAngle);\n        const nonZeroBetween = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || nonZeroBetween;\n        const withinRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T ? Math.floor(circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ao;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ap;\n    }\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aq;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.al)(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.am)(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.an)(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.av)(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, bounds.left, bounds.right)) && (skipY || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.borderColor !== 'rgba(0,0,0,0.1)' || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(minIndex) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.an)(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(start);\n        end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx, this);\n            this._draw();\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.color;\n        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(opts.rtl, this.left, this.width);\n        const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineWidth, 1);\n            ctx.fillStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aD)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aC)(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(titleOpts.font);\n        const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(titleOpts.font);\n        const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, this.left, this.right) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(x, hitBox.left, hitBox.left + hitBox.width) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(opts.text) ? opts.text.length : 1;\n        this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(opts.padding);\n        const textSize = lineCount * (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, bottom, top);\n                rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(align, top, bottom);\n                rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1)(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aE)(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);\n    const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.titleFont);\n    const footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(body, (bodyItem)=>{\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.before, maxLineWidth);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.lines, maxLineWidth);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(x, 0, chart.width - size.width),\n        y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF,\n    afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aC)(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(min);\n    const maxDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(max);\n    const countDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aI)((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aK)(spacing), (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aK)(niceMin));\n    factor = Math.pow(10, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(min);\n            const maxSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? min : 0;\n        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? Math.max(0, min) : null;\n        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(start);\n        this._valueRange = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(this.max) - (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aM)(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(tickOpts.backdropPadding);\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label : [\n        label\n    ];\n    return {\n        w: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aN)(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(pointLabelPosition.angle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)({\n        x: left,\n        y: top\n    }, area) || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)({\n        x: left,\n        y: bottom\n    }, area) || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)({\n        x: right,\n        y: top\n    }, area) || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(backdropColor)) {\n        const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(opts.borderRadius);\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aL.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : 0;\n        this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(index * angleMultiplier + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aP)(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aO)(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(start, 0, limit);\n        end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\n\n//# sourceMappingURL=chart.js.map\n\n\n//# sourceURL=webpack:///./node_modules/chart.js/dist/chart.js?");

/***/ }),

/***/ "./node_modules/chart.js/dist/chunks/helpers.segment.js":
/*!**************************************************************!*\
  !*** ./node_modules/chart.js/dist/chunks/helpers.segment.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ unclipArea),\n/* harmony export */   A: () => (/* binding */ _rlookupByKey),\n/* harmony export */   B: () => (/* binding */ _lookupByKey),\n/* harmony export */   C: () => (/* binding */ _isPointInArea),\n/* harmony export */   D: () => (/* binding */ getAngleFromPoint),\n/* harmony export */   E: () => (/* binding */ toPadding),\n/* harmony export */   F: () => (/* binding */ each),\n/* harmony export */   G: () => (/* binding */ getMaximumSize),\n/* harmony export */   H: () => (/* binding */ HALF_PI),\n/* harmony export */   I: () => (/* binding */ _getParentNode),\n/* harmony export */   J: () => (/* binding */ readUsedSize),\n/* harmony export */   K: () => (/* binding */ supportsEventListenerOptions),\n/* harmony export */   L: () => (/* binding */ throttled),\n/* harmony export */   M: () => (/* binding */ _isDomSupported),\n/* harmony export */   N: () => (/* binding */ _factorize),\n/* harmony export */   O: () => (/* binding */ finiteOrDefault),\n/* harmony export */   P: () => (/* binding */ PI),\n/* harmony export */   Q: () => (/* binding */ callback),\n/* harmony export */   R: () => (/* binding */ _addGrace),\n/* harmony export */   S: () => (/* binding */ _limitValue),\n/* harmony export */   T: () => (/* binding */ TAU),\n/* harmony export */   U: () => (/* binding */ toDegrees),\n/* harmony export */   V: () => (/* binding */ _measureText),\n/* harmony export */   W: () => (/* binding */ _int16Range),\n/* harmony export */   X: () => (/* binding */ _alignPixel),\n/* harmony export */   Y: () => (/* binding */ clipArea),\n/* harmony export */   Z: () => (/* binding */ renderText),\n/* harmony export */   _: () => (/* binding */ _arrayUnique),\n/* harmony export */   a: () => (/* binding */ resolve),\n/* harmony export */   a$: () => (/* binding */ fontString),\n/* harmony export */   a0: () => (/* binding */ toFont),\n/* harmony export */   a1: () => (/* binding */ _toLeftRightCenter),\n/* harmony export */   a2: () => (/* binding */ _alignStartEnd),\n/* harmony export */   a3: () => (/* binding */ overrides),\n/* harmony export */   a4: () => (/* binding */ merge),\n/* harmony export */   a5: () => (/* binding */ _capitalize),\n/* harmony export */   a6: () => (/* binding */ descriptors),\n/* harmony export */   a7: () => (/* binding */ isFunction),\n/* harmony export */   a8: () => (/* binding */ _attachContext),\n/* harmony export */   a9: () => (/* binding */ _createResolver),\n/* harmony export */   aA: () => (/* binding */ overrideTextDirection),\n/* harmony export */   aB: () => (/* binding */ _textX),\n/* harmony export */   aC: () => (/* binding */ restoreTextDirection),\n/* harmony export */   aD: () => (/* binding */ drawPointLegend),\n/* harmony export */   aE: () => (/* binding */ distanceBetweenPoints),\n/* harmony export */   aF: () => (/* binding */ noop),\n/* harmony export */   aG: () => (/* binding */ _setMinAndMaxByKey),\n/* harmony export */   aH: () => (/* binding */ niceNum),\n/* harmony export */   aI: () => (/* binding */ almostWhole),\n/* harmony export */   aJ: () => (/* binding */ almostEquals),\n/* harmony export */   aK: () => (/* binding */ _decimalPlaces),\n/* harmony export */   aL: () => (/* binding */ Ticks),\n/* harmony export */   aM: () => (/* binding */ log10),\n/* harmony export */   aN: () => (/* binding */ _longestText),\n/* harmony export */   aO: () => (/* binding */ _filterBetween),\n/* harmony export */   aP: () => (/* binding */ _lookup),\n/* harmony export */   aQ: () => (/* binding */ isPatternOrGradient),\n/* harmony export */   aR: () => (/* binding */ getHoverColor),\n/* harmony export */   aS: () => (/* binding */ clone),\n/* harmony export */   aT: () => (/* binding */ _merger),\n/* harmony export */   aU: () => (/* binding */ _mergerIf),\n/* harmony export */   aV: () => (/* binding */ _deprecated),\n/* harmony export */   aW: () => (/* binding */ _splitKey),\n/* harmony export */   aX: () => (/* binding */ toFontString),\n/* harmony export */   aY: () => (/* binding */ splineCurve),\n/* harmony export */   aZ: () => (/* binding */ splineCurveMonotone),\n/* harmony export */   a_: () => (/* binding */ getStyle),\n/* harmony export */   aa: () => (/* binding */ _descriptors),\n/* harmony export */   ab: () => (/* binding */ mergeIf),\n/* harmony export */   ac: () => (/* binding */ uid),\n/* harmony export */   ad: () => (/* binding */ debounce),\n/* harmony export */   ae: () => (/* binding */ retinaScale),\n/* harmony export */   af: () => (/* binding */ clearCanvas),\n/* harmony export */   ag: () => (/* binding */ setsEqual),\n/* harmony export */   ah: () => (/* binding */ _elementsEqual),\n/* harmony export */   ai: () => (/* binding */ _isClickEvent),\n/* harmony export */   aj: () => (/* binding */ _isBetween),\n/* harmony export */   ak: () => (/* binding */ _readValueToProps),\n/* harmony export */   al: () => (/* binding */ _updateBezierControlPoints),\n/* harmony export */   am: () => (/* binding */ _computeSegments),\n/* harmony export */   an: () => (/* binding */ _boundSegments),\n/* harmony export */   ao: () => (/* binding */ _steppedInterpolation),\n/* harmony export */   ap: () => (/* binding */ _bezierInterpolation),\n/* harmony export */   aq: () => (/* binding */ _pointInLine),\n/* harmony export */   ar: () => (/* binding */ _steppedLineTo),\n/* harmony export */   as: () => (/* binding */ _bezierCurveTo),\n/* harmony export */   at: () => (/* binding */ drawPoint),\n/* harmony export */   au: () => (/* binding */ addRoundedRectPath),\n/* harmony export */   av: () => (/* binding */ toTRBL),\n/* harmony export */   aw: () => (/* binding */ toTRBLCorners),\n/* harmony export */   ax: () => (/* binding */ _boundSegment),\n/* harmony export */   ay: () => (/* binding */ _normalizeAngle),\n/* harmony export */   az: () => (/* binding */ getRtlAdapter),\n/* harmony export */   b: () => (/* binding */ isArray),\n/* harmony export */   b0: () => (/* binding */ toLineHeight),\n/* harmony export */   b1: () => (/* binding */ PITAU),\n/* harmony export */   b2: () => (/* binding */ INFINITY),\n/* harmony export */   b3: () => (/* binding */ RAD_PER_DEG),\n/* harmony export */   b4: () => (/* binding */ QUARTER_PI),\n/* harmony export */   b5: () => (/* binding */ TWO_THIRDS_PI),\n/* harmony export */   b6: () => (/* binding */ _angleDiff),\n/* harmony export */   c: () => (/* binding */ color),\n/* harmony export */   d: () => (/* binding */ defaults),\n/* harmony export */   e: () => (/* binding */ effects),\n/* harmony export */   f: () => (/* binding */ resolveObjectKey),\n/* harmony export */   g: () => (/* binding */ isNumberFinite),\n/* harmony export */   h: () => (/* binding */ defined),\n/* harmony export */   i: () => (/* binding */ isObject),\n/* harmony export */   j: () => (/* binding */ createContext),\n/* harmony export */   k: () => (/* binding */ isNullOrUndef),\n/* harmony export */   l: () => (/* binding */ listenArrayEvents),\n/* harmony export */   m: () => (/* binding */ toPercentage),\n/* harmony export */   n: () => (/* binding */ toDimension),\n/* harmony export */   o: () => (/* binding */ formatNumber),\n/* harmony export */   p: () => (/* binding */ _angleBetween),\n/* harmony export */   q: () => (/* binding */ _getStartAndCountOfVisiblePoints),\n/* harmony export */   r: () => (/* binding */ requestAnimFrame),\n/* harmony export */   s: () => (/* binding */ sign),\n/* harmony export */   t: () => (/* binding */ toRadians),\n/* harmony export */   u: () => (/* binding */ unlistenArrayEvents),\n/* harmony export */   v: () => (/* binding */ valueOrDefault),\n/* harmony export */   w: () => (/* binding */ _scaleRangesChanged),\n/* harmony export */   x: () => (/* binding */ isNumber),\n/* harmony export */   y: () => (/* binding */ _parseObjectDataRadialScale),\n/* harmony export */   z: () => (/* binding */ getRelativePosition)\n/* harmony export */ });\n/* harmony import */ var _kurkle_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kurkle/color */ \"./node_modules/@kurkle/color/dist/color.esm.js\");\n/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new _kurkle_color__WEBPACK_IMPORTED_MODULE_0__.Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new _kurkle_color__WEBPACK_IMPORTED_MODULE_0__.Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\n\n//# sourceMappingURL=helpers.segment.js.map\n\n\n//# sourceURL=webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js?");

/***/ }),

/***/ "./testButton.mjs":
/*!************************!*\
  !*** ./testButton.mjs ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chart.js/auto */ \"./node_modules/chart.js/auto/auto.js\");\n/* harmony import */ var _noble_post_quantum_ml_kem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/post-quantum/ml-kem */ \"./node_modules/@noble/post-quantum/esm/ml-kem.js\");\n/* harmony import */ var _noble_post_quantum_ml_dsa__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/post-quantum/ml-dsa */ \"./node_modules/@noble/post-quantum/esm/ml-dsa.js\");\n/* harmony import */ var _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/post-quantum/slh-dsa */ \"./node_modules/@noble/post-quantum/esm/slh-dsa.js\");\n/* harmony import */ var _PQC_WebAssembly_pqc_sign_falcon_512_browser_dist_pqc_sign_falcon_512_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PQC WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js */ \"./PQC WebAssembly/pqc-sign-falcon-512-browser/dist/pqc-sign-falcon-512.js\");\n/* harmony import */ var _PQC_WebAssembly_pqc_sign_falcon_1024_browser_dist_pqc_sign_falcon_1024_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PQC WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js */ \"./PQC WebAssembly/pqc-sign-falcon-1024-browser/dist/pqc-sign-falcon-1024.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst algorithms = {\r\n  kyber: {\r\n    ml_kem512: _noble_post_quantum_ml_kem__WEBPACK_IMPORTED_MODULE_3__.ml_kem512,\r\n    ml_kem768: _noble_post_quantum_ml_kem__WEBPACK_IMPORTED_MODULE_3__.ml_kem768,\r\n    ml_kem1024: _noble_post_quantum_ml_kem__WEBPACK_IMPORTED_MODULE_3__.ml_kem1024,\r\n  },\r\n  dilithium: {\r\n    ml_dsa44: _noble_post_quantum_ml_dsa__WEBPACK_IMPORTED_MODULE_4__.ml_dsa44,\r\n    ml_dsa65: _noble_post_quantum_ml_dsa__WEBPACK_IMPORTED_MODULE_4__.ml_dsa65,\r\n    ml_dsa87: _noble_post_quantum_ml_dsa__WEBPACK_IMPORTED_MODULE_4__.ml_dsa87,\r\n  },\r\n  sphincs: {\r\n    slh_dsa_sha2_128f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_128f, slh_dsa_sha2_128s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_128s,\r\n    slh_dsa_sha2_192f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_192f, slh_dsa_sha2_192s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_192s,\r\n    slh_dsa_sha2_256f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_256f, slh_dsa_sha2_256s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_sha2_256s,\r\n    slh_dsa_shake_128f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_128f, slh_dsa_shake_128s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_128s,\r\n    slh_dsa_shake_192f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_192f, slh_dsa_shake_192s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_192s,\r\n    slh_dsa_shake_256f: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_256f, slh_dsa_shake_256s: _noble_post_quantum_slh_dsa__WEBPACK_IMPORTED_MODULE_5__.slh_dsa_shake_256s,\r\n  },\r\n  falcon: {\r\n    falcon_512: async () => (0,_PQC_WebAssembly_pqc_sign_falcon_512_browser_dist_pqc_sign_falcon_512_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(true), // Use Falcon 512 in JavaScript\r\n    falcon_1024: async () => (0,_PQC_WebAssembly_pqc_sign_falcon_1024_browser_dist_pqc_sign_falcon_1024_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(true), // Use Falcon 1024 in JavaScript\r\n  },\r\n};\r\n\r\nfunction saveResultsAsCsv(results) {\r\n  const csvHeaders = [\"Algorithm\", \"Operation\", \"Mean Time (ms)\"];\r\n  const csvRows = [csvHeaders.join(\",\")];\r\n\r\n  results.forEach((result) => {\r\n    Object.entries(result.average).forEach(([operation, averageTime]) => {\r\n      csvRows.push(`${result.algorithm},${operation},${averageTime}`);\r\n    });\r\n  });\r\n\r\n  const csvContent = csvRows.join(\"\\n\");\r\n  const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = \"PQC_Performance_Results.csv\";\r\n  a.click();\r\n\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nfunction saveChartAsImage(chart) {\r\n  const link = document.createElement(\"a\");\r\n  link.download = \"PQC_Performance_Chart.png\";\r\n  link.href = chart.toBase64Image(\"image/png\", 1.0);\r\n  link.click();\r\n}\r\n\r\n\r\nasync function measurePerformance(algorithmName, algorithmBuilder, iterations = 1) {\r\n  let algorithm;\r\n\r\n  // Initialize Falcon or Noble algorithms\r\n  if (algorithmName.startsWith(\"falcon\")) {\r\n    algorithm = await algorithmBuilder(); // Falcon requires async initialization\r\n  } else {\r\n    algorithm = algorithmBuilder; // Noble algorithms do not require async initialization\r\n  }\r\n\r\n  const totalTimes = {\r\n    keygen: 0,\r\n    encapsulate: 0,\r\n    decapsulate: 0,\r\n    sign: 0,\r\n    verify: 0,\r\n  };\r\n\r\n  const testMessage = new Uint8Array([0x44, 0x61, 0x73, 0x68, 0x6c, 0x61, 0x6e, 0x65]); // \"Dashlane\" in ASCII\r\n\r\n  // Measure Key Generation\r\n  const keygenStart = performance.now();\r\n  for (let i = 0; i < iterations; i++) {\r\n    const { publicKey, privateKey } = algorithm.keypair();\r\n  }\r\n  const keygenEnd = performance.now();\r\n  totalTimes.keygen = (keygenEnd - keygenStart) / iterations;\r\n\r\n  // If the algorithm supports encapsulation (Noble KEM)\r\n  if (algorithm.encapsulate) {\r\n    const { publicKey, privateKey } = algorithm.keypair();\r\n\r\n    // Measure Encapsulation\r\n    const encapsulateStart = performance.now();\r\n    for (let i = 0; i < iterations; i++) {\r\n      const { ciphertext, sharedSecret } = algorithm.encapsulate(publicKey);\r\n    }\r\n    const encapsulateEnd = performance.now();\r\n    totalTimes.encapsulate = (encapsulateEnd - encapsulateStart) / iterations;\r\n\r\n    // Measure Decapsulation\r\n    const { ciphertext } = algorithm.encapsulate(publicKey);\r\n    const decapsulateStart = performance.now();\r\n    for (let i = 0; i < iterations; i++) {\r\n      const { sharedSecret } = algorithm.decapsulate(ciphertext, privateKey);\r\n    }\r\n    const decapsulateEnd = performance.now();\r\n    totalTimes.decapsulate = (decapsulateEnd - decapsulateStart) / iterations;\r\n  }\r\n\r\n  // If the algorithm supports signing (Falcon or Noble DSA)\r\n  if (algorithm.sign) {\r\n    const { publicKey, privateKey } = algorithm.keypair();\r\n\r\n    // Measure Signing\r\n    const signStart = performance.now();\r\n    for (let i = 0; i < iterations; i++) {\r\n      const { signature } = await algorithm.sign(testMessage, privateKey);\r\n    }\r\n    const signEnd = performance.now();\r\n    totalTimes.sign = (signEnd - signStart) / iterations;\r\n\r\n    // Measure Verification\r\n    const { signature } = await algorithm.sign(testMessage, privateKey);\r\n    const verifyStart = performance.now();\r\n    for (let i = 0; i < iterations; i++) {\r\n      const isValid = await algorithm.verify(signature, testMessage, publicKey);\r\n    }\r\n    const verifyEnd = performance.now();\r\n    totalTimes.verify = (verifyEnd - verifyStart) / iterations;\r\n  }\r\n\r\n  return {\r\n    algorithm: algorithmName,\r\n    average: {\r\n      keygen: totalTimes.keygen,\r\n      encapsulate: totalTimes.encapsulate || undefined,\r\n      decapsulate: totalTimes.decapsulate || undefined,\r\n      sign: totalTimes.sign || undefined,\r\n      verify: totalTimes.verify || undefined,\r\n    },\r\n  };\r\n}\r\n\r\n\r\nasync function runTestsWithProgress() {\r\n  const progressBar = document.getElementById(\"progressBar\");\r\n  const progressLabel = document.getElementById(\"progressLabel\");\r\n\r\n  const iterationsInput = document.getElementById(\"iterations\").value;\r\n  const iterations = parseInt(iterationsInput, 10) || 1;\r\n\r\n  const selectedAlgorithms = [];\r\n  if (document.getElementById(\"kyber\").checked) {\r\n    selectedAlgorithms.push(...Object.entries(algorithms.kyber));\r\n  }\r\n  if (document.getElementById(\"Dilithium\").checked) {\r\n    selectedAlgorithms.push(...Object.entries(algorithms.dilithium));\r\n  }\r\n  if (document.getElementById(\"SPHINCS\").checked) {\r\n    selectedAlgorithms.push(...Object.entries(algorithms.sphincs));\r\n  }\r\n  if (document.getElementById(\"FALCON\").checked) {\r\n    selectedAlgorithms.push([\"falcon\", algorithms.falcon]);\r\n  }\r\n\r\n\r\n  const totalAlgorithms = selectedAlgorithms.length;\r\n\r\n  progressBar.setAttribute(\"aria-valuemin\", \"0\");\r\n  progressBar.setAttribute(\"aria-valuemax\", totalAlgorithms.toString());\r\n  progressBar.setAttribute(\"aria-valuenow\", \"0\");\r\n  progressBar.style.width = \"0%\";\r\n\r\n  const allResults = [];\r\n\r\n  for (let i = 0; i < totalAlgorithms; i++) {\r\n    const [name, algorithmBuilder] = selectedAlgorithms[i];\r\n\r\n    progressLabel.textContent = `Testing ${name} (${i + 1}/${totalAlgorithms})...`;\r\n    console.log(`Testing algorithm: ${name}...`);\r\n\r\n    const result = await measurePerformance(name, algorithmBuilder, iterations);\r\n    allResults.push(result);\r\n\r\n    const progressPercentage = ((i + 1) / totalAlgorithms) * 100;\r\n\r\n    progressBar.setAttribute(\"aria-valuenow\", (i + 1).toString());\r\n    progressBar.style.width = `${progressPercentage}%`;\r\n\r\n    await new Promise((resolve) => setTimeout(resolve, 50));\r\n  }\r\n\r\n  progressLabel.textContent = \"All tests completed!\";\r\n  progressBar.setAttribute(\"aria-valuenow\", totalAlgorithms.toString());\r\n  progressBar.style.width = \"100%\";\r\n\r\n  const closeButton = document.getElementById(\"closeButton\");\r\n  closeButton.style.display = \"block\";\r\n\r\n  return allResults;\r\n}\r\n\r\nconst operations = [\"keygen\", \"encapsulate\", \"decapsulate\"];\r\nconst colors = {\r\n  keygen: \"rgba(255, 99, 132, 1)\",\r\n  encapsulate: \"rgba(54, 162, 235, 1)\",\r\n  decapsulate: \"rgba(75, 192, 192, 1)\",\r\n};\r\nconst pointStyles = {\r\n  keygen: \"triangle\",\r\n  encapsulate: \"rectRounded\",\r\n  decapsulate: \"circle\",\r\n};\r\nconst scatterData = { datasets: [] };\r\n\r\nconst scatterOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  plugins: {\r\n    legend: {\r\n      display: true,\r\n      labels: {\r\n        usePointStyle: true,\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: \"category\",\r\n      title: {\r\n        display: true,\r\n        text: \"Algorithm\",\r\n      },\r\n    },\r\n    y: {\r\n      type: \"logarithmic\",\r\n      beginAtZero: false,\r\n      title: {\r\n        display: true,\r\n        text: \"Mean Execution Time (ms)\",\r\n      },\r\n      ticks: {\r\n        callback: function (value) {\r\n          return Number(value).toLocaleString();\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  const ctx = document.getElementById(\"performanceScatterPlot\").getContext(\"2d\");\r\n  const chart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx, {\r\n    type: \"scatter\",\r\n    data: scatterData,\r\n    options: scatterOptions,\r\n  });\r\n\r\n  document.getElementById(\"runTestButton\").addEventListener(\"click\", async () => {\r\n    try {\r\n      const results = await runTestsWithProgress();\r\n\r\n      const operationDisplayNames = {\r\n        keygen: \"Key Generation\",\r\n        encapsulate: \"Encapsulation/Signing\",\r\n        decapsulate: \"Decapsulation/Verification\",\r\n      };\r\n\r\n      chart.data.datasets = operations.map((operation) => ({\r\n        label: operationDisplayNames[operation],\r\n        data: results.map((result) => ({\r\n          x: result.algorithm,\r\n          y: result.average[operation] || 0.01, \r\n        })),\r\n        backgroundColor: colors[operation],\r\n        pointStyle: pointStyles[operation],\r\n        pointRadius: 10,\r\n      }));\r\n\r\n      chart.update();\r\n      const saveCsvButton = document.getElementById(\"saveCsvButton\");\r\n      const saveImageButton = document.getElementById(\"saveImageButton\");\r\n\r\n      saveCsvButton.style.display = \"block\";\r\n      saveImageButton.style.display = \"block\";\r\n\r\n      saveCsvButton.replaceWith(saveCsvButton.cloneNode(true));\r\n      saveImageButton.replaceWith(saveImageButton.cloneNode(true));\r\n\r\n      document.getElementById(\"saveCsvButton\").addEventListener(\"click\", () => {\r\n        saveResultsAsCsv(results); \r\n      });\r\n\r\n      document.getElementById(\"saveImageButton\").addEventListener(\"click\", () => {\r\n        saveChartAsImage(chart); \r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error running tests:\", error);\r\n      alert(\"Failed to run tests. Check the console for details.\");\r\n    } finally {\r\n      const closeButton = document.getElementById(\"closeButton1\");\r\n      closeButton.style.display = \"block\";\r\n    }\r\n  });\r\n});\n\n//# sourceURL=webpack:///./testButton.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./testButton.mjs");
/******/ 	
/******/ })()
;